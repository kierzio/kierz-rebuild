{"version":3,"file":"component---src-pages-index-js-aef5042ebe06dc59f405.js","mappings":"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","sources":["webpack://kierz-portfolio/./node_modules/fast-deep-equal/react.js","webpack://kierz-portfolio/./src/components/Navigation/index.js","webpack://kierz-portfolio/./src/components/Layout/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/Constants.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/Vector3d.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/Vector.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Utils/NumberUtils.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Utils/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Utils/ColorUtils.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Utils/CanvasUtils.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Canvas.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/EventListeners.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/OptionsColor.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Background/Background.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMaskCover.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/BackgroundMask/BackgroundMask.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/FullScreen/FullScreen.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ClickEvent.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/DivEvent.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Parallax.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/HoverEvent.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/ResizeEvent.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Events/Events.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Modes/Modes.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Interactivity/Interactivity.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/ManualParticle.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Responsive.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Theme/ThemeDefault.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Theme/Theme.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/ColorAnimation.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/HslAnimation.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/AnimatableColor.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsAbsorb.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/CollisionsOverlap.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/AnimationOptions.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Random.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/ValueWithRandom.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounceFactor.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Bounce/ParticlesBounce.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Collisions/Collisions.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAngle.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveAttract.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveCenter.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveGravity.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Path/MovePath.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrailFill.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/MoveTrail.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/OutModes.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Spin.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Move/Move.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/OpacityAnimation.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Opacity/Opacity.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesDensity.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Number/ParticlesNumber.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shadow.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Shape/Shape.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/SizeAnimation.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Size/Size.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/Stroke.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/ZIndex/ZIndex.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Particles/ParticlesOptions.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Utils/OptionsUtils.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Options/Classes/Options.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/InteractionManager.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Particle.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/Point.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/Range.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/Rectangle.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/Circle.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/QuadTree.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Particles.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Retina.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Container.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Utils/EventDispatcher.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/Plugins.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Engine.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Utils/HslColorManager.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Utils/RgbColorManager.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/init.js","webpack://kierz-portfolio/./node_modules/react-tsparticles/esm/Particles.js","webpack://kierz-portfolio/./node_modules/react-tsparticles/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSizeLimit.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/AbsorberSize.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-absorbers/esm/Options/Classes/Absorber.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-absorbers/esm/AbsorberInstance.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-absorbers/esm/Absorbers.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-absorbers/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/DestroyBounds.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitFactor.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/SplitRate.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/Split.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-destroy/esm/Options/Classes/Destroy.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-destroy/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-destroy/esm/DestroyUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/Shapes/Circle/CircleShape.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterLife.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterRate.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/EmitterSize.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/Options/Classes/Emitter.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/EmitterInstance.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/Emitters.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/ShapeManager.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/Shapes/Square/SquareShape.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-emitters/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/ExternalInteractorBase.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-trail/esm/Options/Classes/Trail.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-trail/esm/TrailMaker.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-roll/esm/Options/Classes/RollLight.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-roll/esm/Options/Classes/Roll.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-roll/esm/RollUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-roll/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-particles.js/esm/marcbruederlin/Particles.js","webpack://kierz-portfolio/./node_modules/tsparticles-move-base/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-move-base/esm/BaseMover.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-circle/esm/CircleDrawer.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-color/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-color/esm/ColorUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-opacity/esm/OpacityUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-opacity/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-out-modes/esm/BounceOutMode.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-out-modes/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-out-modes/esm/DestroyOutMode.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-out-modes/esm/NoneOutMode.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-out-modes/esm/OutOutMode.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-out-modes/esm/OutOfCanvasUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-size/esm/SizeUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-size/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-basic/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-move-base/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-circle/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-color/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-opacity/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-out-modes/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-size/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-attract/esm/Options/Classes/Attract.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-attract/esm/Attractor.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-bounce/esm/Options/Classes/Bounce.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-bounce/esm/Bouncer.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleBase.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/BubbleDiv.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-bubble/esm/Options/Classes/Bubble.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-bubble/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/ConnectLinks.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-connect/esm/Options/Classes/Connect.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-connect/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-connect/esm/Connector.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/GrabLinks.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-grab/esm/Options/Classes/Grab.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-grab/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-grab/esm/Grabber.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-pause/esm/Pauser.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-push/esm/Options/Classes/Push.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-push/esm/Pusher.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-remove/esm/Options/Classes/Remove.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-remove/esm/Remover.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseBase.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/RepulseDiv.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-repulse/esm/Options/Classes/Repulse.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-repulse/esm/Repulser.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-slow/esm/Options/Classes/Slow.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-slow/esm/Slower.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-image/esm/GifUtils/Constants.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-image/esm/GifUtils/ByteStream.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-image/esm/GifUtils/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-image/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-image/esm/ImageDrawer.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-image/esm/Options/Classes/Preload.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-image/esm/ImagePreloader.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-image/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDelay.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-life/esm/Options/Classes/LifeDuration.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-life/esm/Options/Classes/Life.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-life/esm/LifeUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-line/esm/LineDrawer.js","webpack://kierz-portfolio/./node_modules/tsparticles-move-parallax/esm/ParallaxMover.js","webpack://kierz-portfolio/./node_modules/tsparticles-engine/esm/Core/Utils/ParticlesInteractorBase.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-attract/esm/Attractor.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-collisions/esm/Absorb.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-collisions/esm/Bounce.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-collisions/esm/ResolveCollision.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-collisions/esm/Destroy.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/CircleWarp.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksShadow.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/LinksTriangle.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/Options/Classes/Links.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/Linker.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/LinkInstance.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/plugin.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-links/esm/interaction.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-polygon/esm/PolygonDrawerBase.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-polygon/esm/PolygonDrawer.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-polygon/esm/TriangleDrawer.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-polygon/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-rotate/esm/Options/Classes/RotateAnimation.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-rotate/esm/Options/Classes/Rotate.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-rotate/esm/RotateUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-square/esm/SquareDrawer.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-star/esm/StarDrawer.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-stroke-color/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-stroke-color/esm/StrokeColorUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-text/esm/TextDrawer.js","webpack://kierz-portfolio/./node_modules/tsparticles-slim/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-particles.js/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-particles.js/esm/VincentGarreau/particles.js","webpack://kierz-portfolio/./node_modules/tsparticles-move-parallax/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-attract/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-bounce/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-bubble/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-connect/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-grab/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-pause/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-push/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-remove/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-repulse/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-slow/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-attract/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-particles-collisions/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-plugin-easing-quad/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-line/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-square/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-star/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-shape-text/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-life/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-rotate/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-stroke-color/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-tilt/esm/Options/Classes/TiltAnimation.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-tilt/esm/Options/Classes/Tilt.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-tilt/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-twinkle/esm/Options/Classes/TwinkleValues.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-twinkle/esm/Options/Classes/Twinkle.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-twinkle/esm/TwinkleUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-wobble/esm/Options/Classes/WobbleSpeed.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-wobble/esm/Options/Classes/Wobble.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-wobble/esm/WobbleUpdater.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-wobble/esm/Utils.js","webpack://kierz-portfolio/./node_modules/tsparticles/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-destroy/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-roll/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-tilt/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-twinkle/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-updater-wobble/esm/index.js","webpack://kierz-portfolio/./node_modules/tsparticles-interaction-external-trail/esm/index.js","webpack://kierz-portfolio/./src/components/UI/ParticleBackground.js","webpack://kierz-portfolio/./src/components/Sections/Hero/index.js","webpack://kierz-portfolio/./src/pages/index.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import React, { useState, useEffect } from \"react\";\n\nconst Navigation = () => {\n  const [scrolled, setScrolled] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrolled(window.scrollY > 50);\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  }, []);\n\n  const scrollTo = (id) => {\n    const element = document.getElementById(id);\n    if (element) {\n      element.scrollIntoView({ behavior: \"smooth\" });\n    }\n  };\n\n  return (\n    <nav \n      className={`fixed top-0 w-full z-50 transition-all duration-300 ${\n        scrolled \n          ? \"bg-cyber-dark/80 backdrop-blur-md py-3\" \n          : \"bg-transparent py-5\"\n      }`}\n    >\n      <div className=\"container mx-auto px-4 flex justify-between items-center\">\n        <a \n          href=\"#intro\" \n          className=\"text-neon-blue font-orbitron text-xl font-bold\"\n          onClick={(e) => {\n            e.preventDefault();\n            scrollTo(\"intro\");\n          }}\n        >\n          Kierz.io\n        </a>\n\n        <div className=\"hidden md:flex space-x-6\">\n          {[\"intro\"].map((section) => (\n            <button\n              key={section}\n              onClick={() => scrollTo(section)}\n              className=\"text-white hover:text-neon-blue transition-colors duration-300 uppercase tracking-wider font-orbitron text-sm\"\n            >\n              {section === \"intro\" ? \"Home\" : section}\n            </button>\n          ))}\n        </div>\n\n        <button className=\"md:hidden text-white\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16m-7 6h7\" />\n          </svg>\n        </button>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navigation;","import React from \"react\";\nimport Navigation from \"../Navigation\";\n\nconst Footer = () => {\n  const currentYear = new Date().getFullYear();\n  \n  return (\n    <footer className=\"bg-cyber-dark border-t border-neon-blue/20 py-8 px-4\">\n      <div className=\"container mx-auto\">\n        <div className=\"flex flex-col md:flex-row justify-between items-center\">\n          <div className=\"mb-4 md:mb-0\">\n            <a href=\"#intro\" className=\"text-neon-blue font-orbitron text-xl font-bold\">\n              Kierz.io\n            </a>\n            <p className=\"text-gray-400 text-sm mt-1\">\n              Crafting digital experiences from the future\n            </p>\n          </div>\n          \n          <div className=\"text-gray-400 text-sm\">\n            &copy; {currentYear} Kierz.io | All rights reserved\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nconst Layout = ({ children }) => {\n  return (\n    <div className=\"flex flex-col min-h-screen bg-cyber-dark\">\n      <Navigation />\n      <main className=\"flex-grow\">{children}</main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;","export const generatedAttribute = \"generated\";\nexport const mouseDownEvent = \"pointerdown\";\nexport const mouseUpEvent = \"pointerup\";\nexport const mouseLeaveEvent = \"pointerleave\";\nexport const mouseOutEvent = \"pointerout\";\nexport const mouseMoveEvent = \"pointermove\";\nexport const touchStartEvent = \"touchstart\";\nexport const touchEndEvent = \"touchend\";\nexport const touchMoveEvent = \"touchmove\";\nexport const touchCancelEvent = \"touchcancel\";\nexport const resizeEvent = \"resize\";\nexport const visibilityChangeEvent = \"visibilitychange\";\nexport const errorPrefix = \"tsParticles - Error\";\n","import { errorPrefix } from \"./Constants\";\nimport { isNumber } from \"../../Utils/Utils\";\nexport class Vector3d {\n    constructor(xOrCoords, y, z) {\n        this._updateFromAngle = (angle, length) => {\n            this.x = Math.cos(angle) * length;\n            this.y = Math.sin(angle) * length;\n        };\n        if (!isNumber(xOrCoords) && xOrCoords) {\n            this.x = xOrCoords.x;\n            this.y = xOrCoords.y;\n            const coords3d = xOrCoords;\n            this.z = coords3d.z ? coords3d.z : 0;\n        }\n        else if (xOrCoords !== undefined && y !== undefined) {\n            this.x = xOrCoords;\n            this.y = y;\n            this.z = z ?? 0;\n        }\n        else {\n            throw new Error(`${errorPrefix} Vector3d not initialized correctly`);\n        }\n    }\n    static get origin() {\n        return Vector3d.create(0, 0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this._updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.getLengthSq());\n    }\n    set length(length) {\n        this._updateFromAngle(this.angle, length);\n    }\n    static clone(source) {\n        return Vector3d.create(source.x, source.y, source.z);\n    }\n    static create(x, y, z) {\n        return new Vector3d(x, y, z);\n    }\n    add(v) {\n        return Vector3d.create(this.x + v.x, this.y + v.y, this.z + v.z);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n        this.z += v.z;\n    }\n    copy() {\n        return Vector3d.clone(this);\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    div(n) {\n        return Vector3d.create(this.x / n, this.y / n, this.z / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n        this.z /= n;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    mult(n) {\n        return Vector3d.create(this.x * n, this.y * n, this.z * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n        this.z *= n;\n    }\n    normalize() {\n        const length = this.length;\n        if (length != 0) {\n            this.multTo(1.0 / length);\n        }\n    }\n    rotate(angle) {\n        return Vector3d.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle), 0);\n    }\n    setTo(c) {\n        this.x = c.x;\n        this.y = c.y;\n        const v3d = c;\n        this.z = v3d.z ? v3d.z : 0;\n    }\n    sub(v) {\n        return Vector3d.create(this.x - v.x, this.y - v.y, this.z - v.z);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n        this.z -= v.z;\n    }\n}\n","import { Vector3d } from \"./Vector3d\";\nexport class Vector extends Vector3d {\n    constructor(xOrCoords, y) {\n        super(xOrCoords, y, 0);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n}\n","import { isBoolean, isNumber } from \"./Utils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nlet _random = Math.random;\nconst easings = new Map();\nexport function addEasing(name, easing) {\n    if (easings.get(name)) {\n        return;\n    }\n    easings.set(name, easing);\n}\nexport function getEasing(name) {\n    return easings.get(name) || ((value) => value);\n}\nexport function setRandom(rnd = Math.random) {\n    _random = rnd;\n}\nexport function getRandom() {\n    return clamp(_random(), 0, 1 - 1e-16);\n}\nexport function clamp(num, min, max) {\n    return Math.min(Math.max(num, min), max);\n}\nexport function mix(comp1, comp2, weight1, weight2) {\n    return Math.floor((comp1 * weight1 + comp2 * weight2) / (weight1 + weight2));\n}\nexport function randomInRange(r) {\n    const max = getRangeMax(r);\n    let min = getRangeMin(r);\n    if (max === min) {\n        min = 0;\n    }\n    return getRandom() * (max - min) + min;\n}\nexport function getRangeValue(value) {\n    return isNumber(value) ? value : randomInRange(value);\n}\nexport function getRangeMin(value) {\n    return isNumber(value) ? value : value.min;\n}\nexport function getRangeMax(value) {\n    return isNumber(value) ? value : value.max;\n}\nexport function setRangeValue(source, value) {\n    if (source === value || (value === undefined && isNumber(source))) {\n        return source;\n    }\n    const min = getRangeMin(source), max = getRangeMax(source);\n    return value !== undefined\n        ? {\n            min: Math.min(min, value),\n            max: Math.max(max, value),\n        }\n        : setRangeValue(min, max);\n}\nexport function getValue(options) {\n    const random = options.random, { enable, minimumValue } = isBoolean(random)\n        ? {\n            enable: random,\n            minimumValue: 0,\n        }\n        : random;\n    return enable ? getRangeValue(setRangeValue(options.value, minimumValue)) : getRangeValue(options.value);\n}\nexport function getDistances(pointA, pointB) {\n    const dx = pointA.x - pointB.x, dy = pointA.y - pointB.y;\n    return { dx: dx, dy: dy, distance: Math.sqrt(dx ** 2 + dy ** 2) };\n}\nexport function getDistance(pointA, pointB) {\n    return getDistances(pointA, pointB).distance;\n}\nexport function getParticleDirectionAngle(direction, position, center) {\n    if (isNumber(direction)) {\n        return (direction * Math.PI) / 180;\n    }\n    switch (direction) {\n        case \"top\":\n            return -Math.PI / 2;\n        case \"top-right\":\n            return -Math.PI / 4;\n        case \"right\":\n            return 0;\n        case \"bottom-right\":\n            return Math.PI / 4;\n        case \"bottom\":\n            return Math.PI / 2;\n        case \"bottom-left\":\n            return (3 * Math.PI) / 4;\n        case \"left\":\n            return Math.PI;\n        case \"top-left\":\n            return (-3 * Math.PI) / 4;\n        case \"inside\":\n            return Math.atan2(center.y - position.y, center.x - position.x);\n        case \"outside\":\n            return Math.atan2(position.y - center.y, position.x - center.x);\n        default:\n            return getRandom() * Math.PI * 2;\n    }\n}\nexport function getParticleBaseVelocity(direction) {\n    const baseVelocity = Vector.origin;\n    baseVelocity.length = 1;\n    baseVelocity.angle = direction;\n    return baseVelocity;\n}\nexport function collisionVelocity(v1, v2, m1, m2) {\n    return Vector.create((v1.x * (m1 - m2)) / (m1 + m2) + (v2.x * 2 * m2) / (m1 + m2), v1.y);\n}\nexport function calcPositionFromSize(data) {\n    return data.position && data.position.x !== undefined && data.position.y !== undefined\n        ? {\n            x: (data.position.x * data.size.width) / 100,\n            y: (data.position.y * data.size.height) / 100,\n        }\n        : undefined;\n}\nexport function calcPositionOrRandomFromSize(data) {\n    return {\n        x: ((data.position?.x ?? getRandom() * 100) * data.size.width) / 100,\n        y: ((data.position?.y ?? getRandom() * 100) * data.size.height) / 100,\n    };\n}\nexport function calcPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function calcExactPositionOrRandomFromSize(data) {\n    return {\n        x: data.position?.x ?? getRandom() * data.size.width,\n        y: data.position?.y ?? getRandom() * data.size.height,\n    };\n}\nexport function calcExactPositionOrRandomFromSizeRanged(data) {\n    const position = {\n        x: data.position?.x !== undefined ? getRangeValue(data.position.x) : undefined,\n        y: data.position?.y !== undefined ? getRangeValue(data.position.y) : undefined,\n    };\n    return calcExactPositionOrRandomFromSize({ size: data.size, position });\n}\nexport function parseAlpha(input) {\n    return input ? (input.endsWith(\"%\") ? parseFloat(input) / 100 : parseFloat(input)) : 1;\n}\n","import { collisionVelocity, getDistances, getRandom, getRangeMax, getRangeMin, getRangeValue, getValue, randomInRange, } from \"./NumberUtils\";\nimport { Vector } from \"../Core/Utils/Vector\";\nconst _logger = {\n    debug: console.debug,\n    error: console.error,\n    info: console.info,\n    log: console.log,\n    verbose: console.log,\n    warning: console.warn,\n};\nexport function setLogger(logger) {\n    _logger.debug = logger.debug || _logger.debug;\n    _logger.error = logger.error || _logger.error;\n    _logger.info = logger.info || _logger.info;\n    _logger.log = logger.log || _logger.log;\n    _logger.verbose = logger.verbose || _logger.verbose;\n    _logger.warning = logger.warning || _logger.warning;\n}\nexport function getLogger() {\n    return _logger;\n}\nfunction rectSideBounce(data) {\n    const res = { bounced: false }, { pSide, pOtherSide, rectSide, rectOtherSide, velocity, factor } = data;\n    if (pOtherSide.min < rectOtherSide.min ||\n        pOtherSide.min > rectOtherSide.max ||\n        pOtherSide.max < rectOtherSide.min ||\n        pOtherSide.max > rectOtherSide.max) {\n        return res;\n    }\n    if ((pSide.max >= rectSide.min && pSide.max <= (rectSide.max + rectSide.min) / 2 && velocity > 0) ||\n        (pSide.min <= rectSide.max && pSide.min > (rectSide.max + rectSide.min) / 2 && velocity < 0)) {\n        res.velocity = velocity * -factor;\n        res.bounced = true;\n    }\n    return res;\n}\nfunction checkSelector(element, selectors) {\n    const res = executeOnSingleOrMultiple(selectors, (selector) => {\n        return element.matches(selector);\n    });\n    return isArray(res) ? res.some((t) => t) : res;\n}\nexport function isSsr() {\n    return typeof window === \"undefined\" || !window || typeof window.document === \"undefined\" || !window.document;\n}\nexport function hasMatchMedia() {\n    return !isSsr() && typeof matchMedia !== \"undefined\";\n}\nexport function safeMatchMedia(query) {\n    if (!hasMatchMedia()) {\n        return;\n    }\n    return matchMedia(query);\n}\nexport function safeMutationObserver(callback) {\n    if (isSsr() || typeof MutationObserver === \"undefined\") {\n        return;\n    }\n    return new MutationObserver(callback);\n}\nexport function isInArray(value, array) {\n    return value === array || (isArray(array) && array.indexOf(value) > -1);\n}\nexport async function loadFont(font, weight) {\n    try {\n        await document.fonts.load(`${weight ?? \"400\"} 36px '${font ?? \"Verdana\"}'`);\n    }\n    catch {\n    }\n}\nexport function arrayRandomIndex(array) {\n    return Math.floor(getRandom() * array.length);\n}\nexport function itemFromArray(array, index, useIndex = true) {\n    return array[index !== undefined && useIndex ? index % array.length : arrayRandomIndex(array)];\n}\nexport function isPointInside(point, size, offset, radius, direction) {\n    return areBoundsInside(calculateBounds(point, radius ?? 0), size, offset, direction);\n}\nexport function areBoundsInside(bounds, size, offset, direction) {\n    let inside = true;\n    if (!direction || direction === \"bottom\") {\n        inside = bounds.top < size.height + offset.x;\n    }\n    if (inside && (!direction || direction === \"left\")) {\n        inside = bounds.right > offset.x;\n    }\n    if (inside && (!direction || direction === \"right\")) {\n        inside = bounds.left < size.width + offset.y;\n    }\n    if (inside && (!direction || direction === \"top\")) {\n        inside = bounds.bottom > offset.y;\n    }\n    return inside;\n}\nexport function calculateBounds(point, radius) {\n    return {\n        bottom: point.y + radius,\n        left: point.x - radius,\n        right: point.x + radius,\n        top: point.y - radius,\n    };\n}\nexport function deepExtend(destination, ...sources) {\n    for (const source of sources) {\n        if (source === undefined || source === null) {\n            continue;\n        }\n        if (!isObject(source)) {\n            destination = source;\n            continue;\n        }\n        const sourceIsArray = Array.isArray(source);\n        if (sourceIsArray && (isObject(destination) || !destination || !Array.isArray(destination))) {\n            destination = [];\n        }\n        else if (!sourceIsArray && (isObject(destination) || !destination || Array.isArray(destination))) {\n            destination = {};\n        }\n        for (const key in source) {\n            if (key === \"__proto__\") {\n                continue;\n            }\n            const sourceDict = source, value = sourceDict[key], destDict = destination;\n            destDict[key] =\n                isObject(value) && Array.isArray(value)\n                    ? value.map((v) => deepExtend(destDict[key], v))\n                    : deepExtend(destDict[key], value);\n        }\n    }\n    return destination;\n}\nexport function isDivModeEnabled(mode, divs) {\n    return !!findItemFromSingleOrMultiple(divs, (t) => t.enable && isInArray(mode, t.mode));\n}\nexport function divModeExecute(mode, divs, callback) {\n    executeOnSingleOrMultiple(divs, (div) => {\n        const divMode = div.mode, divEnabled = div.enable;\n        if (divEnabled && isInArray(mode, divMode)) {\n            singleDivModeExecute(div, callback);\n        }\n    });\n}\nexport function singleDivModeExecute(div, callback) {\n    const selectors = div.selectors;\n    executeOnSingleOrMultiple(selectors, (selector) => {\n        callback(selector, div);\n    });\n}\nexport function divMode(divs, element) {\n    if (!element || !divs) {\n        return;\n    }\n    return findItemFromSingleOrMultiple(divs, (div) => {\n        return checkSelector(element, div.selectors);\n    });\n}\nexport function circleBounceDataFromParticle(p) {\n    return {\n        position: p.getPosition(),\n        radius: p.getRadius(),\n        mass: p.getMass(),\n        velocity: p.velocity,\n        factor: Vector.create(getValue(p.options.bounce.horizontal), getValue(p.options.bounce.vertical)),\n    };\n}\nexport function circleBounce(p1, p2) {\n    const { x: xVelocityDiff, y: yVelocityDiff } = p1.velocity.sub(p2.velocity), [pos1, pos2] = [p1.position, p2.position], { dx: xDist, dy: yDist } = getDistances(pos2, pos1);\n    if (xVelocityDiff * xDist + yVelocityDiff * yDist < 0) {\n        return;\n    }\n    const angle = -Math.atan2(yDist, xDist), m1 = p1.mass, m2 = p2.mass, u1 = p1.velocity.rotate(angle), u2 = p2.velocity.rotate(angle), v1 = collisionVelocity(u1, u2, m1, m2), v2 = collisionVelocity(u2, u1, m1, m2), vFinal1 = v1.rotate(-angle), vFinal2 = v2.rotate(-angle);\n    p1.velocity.x = vFinal1.x * p1.factor.x;\n    p1.velocity.y = vFinal1.y * p1.factor.y;\n    p2.velocity.x = vFinal2.x * p2.factor.x;\n    p2.velocity.y = vFinal2.y * p2.factor.y;\n}\nexport function rectBounce(particle, divBounds) {\n    const pPos = particle.getPosition(), size = particle.getRadius(), bounds = calculateBounds(pPos, size), resH = rectSideBounce({\n        pSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        pOtherSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        rectSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        rectOtherSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        velocity: particle.velocity.x,\n        factor: getValue(particle.options.bounce.horizontal),\n    });\n    if (resH.bounced) {\n        if (resH.velocity !== undefined) {\n            particle.velocity.x = resH.velocity;\n        }\n        if (resH.position !== undefined) {\n            particle.position.x = resH.position;\n        }\n    }\n    const resV = rectSideBounce({\n        pSide: {\n            min: bounds.top,\n            max: bounds.bottom,\n        },\n        pOtherSide: {\n            min: bounds.left,\n            max: bounds.right,\n        },\n        rectSide: {\n            min: divBounds.top,\n            max: divBounds.bottom,\n        },\n        rectOtherSide: {\n            min: divBounds.left,\n            max: divBounds.right,\n        },\n        velocity: particle.velocity.y,\n        factor: getValue(particle.options.bounce.vertical),\n    });\n    if (resV.bounced) {\n        if (resV.velocity !== undefined) {\n            particle.velocity.y = resV.velocity;\n        }\n        if (resV.position !== undefined) {\n            particle.position.y = resV.position;\n        }\n    }\n}\nexport function executeOnSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.map((item, index) => callback(item, index)) : callback(obj, 0);\n}\nexport function itemFromSingleOrMultiple(obj, index, useIndex) {\n    return isArray(obj) ? itemFromArray(obj, index, useIndex) : obj;\n}\nexport function findItemFromSingleOrMultiple(obj, callback) {\n    return isArray(obj) ? obj.find((t, index) => callback(t, index)) : callback(obj, 0) ? obj : undefined;\n}\nexport function initParticleNumericAnimationValue(options, pxRatio) {\n    const valueRange = options.value, animationOptions = options.animation, res = {\n        delayTime: getRangeValue(animationOptions.delay) * 1000,\n        enable: animationOptions.enable,\n        value: getRangeValue(options.value) * pxRatio,\n        max: getRangeMax(valueRange) * pxRatio,\n        min: getRangeMin(valueRange) * pxRatio,\n        loops: 0,\n        maxLoops: getRangeValue(animationOptions.count),\n        time: 0,\n    };\n    if (animationOptions.enable) {\n        res.decay = 1 - getRangeValue(animationOptions.decay);\n        switch (animationOptions.mode) {\n            case \"increase\":\n                res.status = \"increasing\";\n                break;\n            case \"decrease\":\n                res.status = \"decreasing\";\n                break;\n            case \"random\":\n                res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                break;\n        }\n        const autoStatus = animationOptions.mode === \"auto\";\n        switch (animationOptions.startValue) {\n            case \"min\":\n                res.value = res.min;\n                if (autoStatus) {\n                    res.status = \"increasing\";\n                }\n                break;\n            case \"max\":\n                res.value = res.max;\n                if (autoStatus) {\n                    res.status = \"decreasing\";\n                }\n                break;\n            case \"random\":\n            default:\n                res.value = randomInRange(res);\n                if (autoStatus) {\n                    res.status = getRandom() >= 0.5 ? \"increasing\" : \"decreasing\";\n                }\n                break;\n        }\n    }\n    res.initialValue = res.value;\n    return res;\n}\nfunction getPositionOrSize(positionOrSize, canvasSize) {\n    const isPercent = positionOrSize.mode === \"percent\";\n    if (!isPercent) {\n        const { mode: _, ...rest } = positionOrSize;\n        return rest;\n    }\n    const isPosition = \"x\" in positionOrSize;\n    if (isPosition) {\n        return {\n            x: (positionOrSize.x / 100) * canvasSize.width,\n            y: (positionOrSize.y / 100) * canvasSize.height,\n        };\n    }\n    else {\n        return {\n            width: (positionOrSize.width / 100) * canvasSize.width,\n            height: (positionOrSize.height / 100) * canvasSize.height,\n        };\n    }\n}\nexport function getPosition(position, canvasSize) {\n    return getPositionOrSize(position, canvasSize);\n}\nexport function getSize(size, canvasSize) {\n    return getPositionOrSize(size, canvasSize);\n}\nexport function isBoolean(arg) {\n    return typeof arg === \"boolean\";\n}\nexport function isString(arg) {\n    return typeof arg === \"string\";\n}\nexport function isNumber(arg) {\n    return typeof arg === \"number\";\n}\nexport function isFunction(arg) {\n    return typeof arg === \"function\";\n}\nexport function isObject(arg) {\n    return typeof arg === \"object\" && arg !== null;\n}\nexport function isArray(arg) {\n    return Array.isArray(arg);\n}\n","import { getRandom, getRangeValue, mix, randomInRange, setRangeValue } from \"./NumberUtils\";\nimport { isArray, isString, itemFromArray } from \"./Utils\";\nconst randomColorValue = \"random\", midColorValue = \"mid\", colorManagers = new Map();\nexport function addColorManager(manager) {\n    colorManagers.set(manager.key, manager);\n}\nfunction hue2rgb(p, q, t) {\n    if (t < 0) {\n        t += 1;\n    }\n    if (t > 1) {\n        t -= 1;\n    }\n    if (t < 1 / 6) {\n        return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n        return q;\n    }\n    if (t < 2 / 3) {\n        return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n}\nfunction stringToRgba(input) {\n    for (const [, manager] of colorManagers) {\n        if (input.startsWith(manager.stringPrefix)) {\n            return manager.parseString(input);\n        }\n    }\n    const shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i, hexFixed = input.replace(shorthandRegex, (_, r, g, b, a) => {\n        return r + r + g + g + b + b + (a !== undefined ? a + a : \"\");\n    }), regex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i, result = regex.exec(hexFixed);\n    return result\n        ? {\n            a: result[4] !== undefined ? parseInt(result[4], 16) / 0xff : 1,\n            b: parseInt(result[3], 16),\n            g: parseInt(result[2], 16),\n            r: parseInt(result[1], 16),\n        }\n        : undefined;\n}\nexport function rangeColorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return colorToRgb(color.value, index, useIndex);\n    }\n    if (isArray(color.value)) {\n        return rangeColorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleRangeColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToRgb(input, index, useIndex = true) {\n    if (!input) {\n        return;\n    }\n    const color = isString(input) ? { value: input } : input;\n    if (isString(color.value)) {\n        return color.value === randomColorValue ? getRandomRgbColor() : stringToRgb(color.value);\n    }\n    if (isArray(color.value)) {\n        return colorToRgb({\n            value: itemFromArray(color.value, index, useIndex),\n        });\n    }\n    for (const [, manager] of colorManagers) {\n        const res = manager.handleColor(color);\n        if (res) {\n            return res;\n        }\n    }\n}\nexport function colorToHsl(color, index, useIndex = true) {\n    const rgb = colorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rangeColorToHsl(color, index, useIndex = true) {\n    const rgb = rangeColorToRgb(color, index, useIndex);\n    return rgb ? rgbToHsl(rgb) : undefined;\n}\nexport function rgbToHsl(color) {\n    const r1 = color.r / 255, g1 = color.g / 255, b1 = color.b / 255, max = Math.max(r1, g1, b1), min = Math.min(r1, g1, b1), res = {\n        h: 0,\n        l: (max + min) / 2,\n        s: 0,\n    };\n    if (max !== min) {\n        res.s = res.l < 0.5 ? (max - min) / (max + min) : (max - min) / (2.0 - max - min);\n        res.h =\n            r1 === max\n                ? (g1 - b1) / (max - min)\n                : (res.h = g1 === max ? 2.0 + (b1 - r1) / (max - min) : 4.0 + (r1 - g1) / (max - min));\n    }\n    res.l *= 100;\n    res.s *= 100;\n    res.h *= 60;\n    if (res.h < 0) {\n        res.h += 360;\n    }\n    if (res.h >= 360) {\n        res.h -= 360;\n    }\n    return res;\n}\nexport function stringToAlpha(input) {\n    return stringToRgba(input)?.a;\n}\nexport function stringToRgb(input) {\n    return stringToRgba(input);\n}\nexport function hslToRgb(hsl) {\n    const result = { b: 0, g: 0, r: 0 }, hslPercent = {\n        h: hsl.h / 360,\n        l: hsl.l / 100,\n        s: hsl.s / 100,\n    };\n    if (!hslPercent.s) {\n        result.r = result.g = result.b = hslPercent.l;\n    }\n    else {\n        const q = hslPercent.l < 0.5\n            ? hslPercent.l * (1 + hslPercent.s)\n            : hslPercent.l + hslPercent.s - hslPercent.l * hslPercent.s, p = 2 * hslPercent.l - q;\n        result.r = hue2rgb(p, q, hslPercent.h + 1 / 3);\n        result.g = hue2rgb(p, q, hslPercent.h);\n        result.b = hue2rgb(p, q, hslPercent.h - 1 / 3);\n    }\n    result.r = Math.floor(result.r * 255);\n    result.g = Math.floor(result.g * 255);\n    result.b = Math.floor(result.b * 255);\n    return result;\n}\nexport function hslaToRgba(hsla) {\n    const rgbResult = hslToRgb(hsla);\n    return {\n        a: hsla.a,\n        b: rgbResult.b,\n        g: rgbResult.g,\n        r: rgbResult.r,\n    };\n}\nexport function getRandomRgbColor(min) {\n    const fixedMin = min ?? 0;\n    return {\n        b: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        g: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n        r: Math.floor(randomInRange(setRangeValue(fixedMin, 256))),\n    };\n}\nexport function getStyleFromRgb(color, opacity) {\n    return `rgba(${color.r}, ${color.g}, ${color.b}, ${opacity ?? 1})`;\n}\nexport function getStyleFromHsl(color, opacity) {\n    return `hsla(${color.h}, ${color.s}%, ${color.l}%, ${opacity ?? 1})`;\n}\nexport function colorMix(color1, color2, size1, size2) {\n    let rgb1 = color1, rgb2 = color2;\n    if (rgb1.r === undefined) {\n        rgb1 = hslToRgb(color1);\n    }\n    if (rgb2.r === undefined) {\n        rgb2 = hslToRgb(color2);\n    }\n    return {\n        b: mix(rgb1.b, rgb2.b, size1, size2),\n        g: mix(rgb1.g, rgb2.g, size1, size2),\n        r: mix(rgb1.r, rgb2.r, size1, size2),\n    };\n}\nexport function getLinkColor(p1, p2, linkColor) {\n    if (linkColor === randomColorValue) {\n        return getRandomRgbColor();\n    }\n    else if (linkColor === midColorValue) {\n        const sourceColor = p1.getFillColor() ?? p1.getStrokeColor(), destColor = p2?.getFillColor() ?? p2?.getStrokeColor();\n        if (sourceColor && destColor && p2) {\n            return colorMix(sourceColor, destColor, p1.getRadius(), p2.getRadius());\n        }\n        else {\n            const hslColor = sourceColor ?? destColor;\n            if (hslColor) {\n                return hslToRgb(hslColor);\n            }\n        }\n    }\n    else {\n        return linkColor;\n    }\n}\nexport function getLinkRandomColor(optColor, blink, consent) {\n    const color = isString(optColor) ? optColor : optColor.value;\n    if (color === randomColorValue) {\n        if (consent) {\n            return rangeColorToRgb({\n                value: color,\n            });\n        }\n        if (blink) {\n            return randomColorValue;\n        }\n        return midColorValue;\n    }\n    else if (color === midColorValue) {\n        return midColorValue;\n    }\n    else {\n        return rangeColorToRgb({\n            value: color,\n        });\n    }\n}\nexport function getHslFromAnimation(animation) {\n    return animation !== undefined\n        ? {\n            h: animation.h.value,\n            s: animation.s.value,\n            l: animation.l.value,\n        }\n        : undefined;\n}\nexport function getHslAnimationFromHsl(hsl, animationOptions, reduceFactor) {\n    const resColor = {\n        h: {\n            enable: false,\n            value: hsl.h,\n        },\n        s: {\n            enable: false,\n            value: hsl.s,\n        },\n        l: {\n            enable: false,\n            value: hsl.l,\n        },\n    };\n    if (animationOptions) {\n        setColorAnimation(resColor.h, animationOptions.h, reduceFactor);\n        setColorAnimation(resColor.s, animationOptions.s, reduceFactor);\n        setColorAnimation(resColor.l, animationOptions.l, reduceFactor);\n    }\n    return resColor;\n}\nfunction setColorAnimation(colorValue, colorAnimation, reduceFactor) {\n    colorValue.enable = colorAnimation.enable;\n    if (colorValue.enable) {\n        colorValue.velocity = (getRangeValue(colorAnimation.speed) / 100) * reduceFactor;\n        colorValue.decay = 1 - getRangeValue(colorAnimation.decay);\n        colorValue.status = \"increasing\";\n        colorValue.loops = 0;\n        colorValue.maxLoops = getRangeValue(colorAnimation.count);\n        colorValue.time = 0;\n        colorValue.delayTime = getRangeValue(colorAnimation.delay) * 1000;\n        if (!colorAnimation.sync) {\n            colorValue.velocity *= getRandom();\n            colorValue.value *= getRandom();\n        }\n        colorValue.initialValue = colorValue.value;\n    }\n    else {\n        colorValue.velocity = 0;\n    }\n}\n","import { getStyleFromRgb } from \"./ColorUtils\";\nexport function drawLine(context, begin, end) {\n    context.beginPath();\n    context.moveTo(begin.x, begin.y);\n    context.lineTo(end.x, end.y);\n    context.closePath();\n}\nexport function drawTriangle(context, p1, p2, p3) {\n    context.beginPath();\n    context.moveTo(p1.x, p1.y);\n    context.lineTo(p2.x, p2.y);\n    context.lineTo(p3.x, p3.y);\n    context.closePath();\n}\nexport function paintBase(context, dimension, baseColor) {\n    context.fillStyle = baseColor ?? \"rgba(0,0,0,0)\";\n    context.fillRect(0, 0, dimension.width, dimension.height);\n}\nexport function paintImage(context, dimension, image, opacity) {\n    if (!image) {\n        return;\n    }\n    context.globalAlpha = opacity;\n    context.drawImage(image, 0, 0, dimension.width, dimension.height);\n    context.globalAlpha = 1;\n}\nexport function clear(context, dimension) {\n    context.clearRect(0, 0, dimension.width, dimension.height);\n}\nexport function drawParticle(data) {\n    const { container, context, particle, delta, colorStyles, backgroundMask, composite, radius, opacity, shadow, transform, } = data;\n    const pos = particle.getPosition(), angle = particle.rotation + (particle.pathRotation ? particle.velocity.angle : 0), rotateData = {\n        sin: Math.sin(angle),\n        cos: Math.cos(angle),\n    }, transformData = {\n        a: rotateData.cos * (transform.a ?? 1),\n        b: rotateData.sin * (transform.b ?? 1),\n        c: -rotateData.sin * (transform.c ?? 1),\n        d: rotateData.cos * (transform.d ?? 1),\n    };\n    context.setTransform(transformData.a, transformData.b, transformData.c, transformData.d, pos.x, pos.y);\n    context.beginPath();\n    if (backgroundMask) {\n        context.globalCompositeOperation = composite;\n    }\n    const shadowColor = particle.shadowColor;\n    if (shadow.enable && shadowColor) {\n        context.shadowBlur = shadow.blur;\n        context.shadowColor = getStyleFromRgb(shadowColor);\n        context.shadowOffsetX = shadow.offset.x;\n        context.shadowOffsetY = shadow.offset.y;\n    }\n    if (colorStyles.fill) {\n        context.fillStyle = colorStyles.fill;\n    }\n    const strokeWidth = particle.strokeWidth ?? 0;\n    context.lineWidth = strokeWidth;\n    if (colorStyles.stroke) {\n        context.strokeStyle = colorStyles.stroke;\n    }\n    drawShape(container, context, particle, radius, opacity, delta);\n    if (strokeWidth > 0) {\n        context.stroke();\n    }\n    if (particle.close) {\n        context.closePath();\n    }\n    if (particle.fill) {\n        context.fill();\n    }\n    drawShapeAfterEffect(container, context, particle, radius, opacity, delta);\n    context.globalCompositeOperation = \"source-over\";\n    context.setTransform(1, 0, 0, 1, 0, 0);\n}\nexport function drawShape(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer) {\n        return;\n    }\n    drawer.draw(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawShapeAfterEffect(container, context, particle, radius, opacity, delta) {\n    if (!particle.shape) {\n        return;\n    }\n    const drawer = container.drawers.get(particle.shape);\n    if (!drawer || !drawer.afterEffect) {\n        return;\n    }\n    drawer.afterEffect(context, particle, radius, opacity, delta, container.retina.pixelRatio);\n}\nexport function drawPlugin(context, plugin, delta) {\n    if (!plugin.draw) {\n        return;\n    }\n    plugin.draw(context, delta);\n}\nexport function drawParticlePlugin(context, plugin, particle, delta) {\n    if (!plugin.drawParticle) {\n        return;\n    }\n    plugin.drawParticle(context, particle, delta);\n}\nexport function alterHsl(color, type, value) {\n    return {\n        h: color.h,\n        s: color.s,\n        l: color.l + (type === \"darken\" ? -1 : 1) * value,\n    };\n}\n","import { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase, paintImage } from \"../Utils/CanvasUtils\";\nimport { deepExtend, getLogger, safeMutationObserver } from \"../Utils/Utils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nfunction setTransformValue(factor, newFactor, key) {\n    const newValue = newFactor[key];\n    if (newValue !== undefined) {\n        factor[key] = (factor[key] ?? 1) * newValue;\n    }\n}\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        this._applyPostDrawUpdaters = (particle) => {\n            for (const updater of this._postDrawUpdaters) {\n                updater.afterDraw && updater.afterDraw(particle);\n            }\n        };\n        this._applyPreDrawUpdaters = (ctx, particle, radius, zOpacity, colorStyles, transform) => {\n            for (const updater of this._preDrawUpdaters) {\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n                if (updater.getTransformValues) {\n                    const updaterTransform = updater.getTransformValues(particle);\n                    for (const key in updaterTransform) {\n                        setTransformValue(transform, updaterTransform, key);\n                    }\n                }\n                updater.beforeDraw && updater.beforeDraw(particle);\n            }\n        };\n        this._applyResizePlugins = () => {\n            for (const plugin of this._resizePlugins) {\n                plugin.resize && plugin.resize();\n            }\n        };\n        this._getPluginParticleColors = (particle) => {\n            let fColor, sColor;\n            for (const plugin of this._colorPlugins) {\n                if (!fColor && plugin.particleFillColor) {\n                    fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n                }\n                if (!sColor && plugin.particleStrokeColor) {\n                    sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n                }\n                if (fColor && sColor) {\n                    break;\n                }\n            }\n            return [fColor, sColor];\n        };\n        this._initCover = () => {\n            const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n            if (coverRgb) {\n                const coverColor = {\n                    ...coverRgb,\n                    a: cover.opacity,\n                };\n                this._coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n            }\n        };\n        this._initStyle = () => {\n            const element = this.element, options = this.container.actualOptions;\n            if (!element) {\n                return;\n            }\n            if (this._fullScreen) {\n                this._originalStyle = deepExtend({}, element.style);\n                this._setFullScreenStyle();\n            }\n            else {\n                this._resetOriginalStyle();\n            }\n            for (const key in options.style) {\n                if (!key || !options.style) {\n                    continue;\n                }\n                const value = options.style[key];\n                if (!value) {\n                    continue;\n                }\n                element.style.setProperty(key, value, \"important\");\n            }\n        };\n        this._initTrail = async () => {\n            const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = trail.fill;\n            if (!trail.enable) {\n                return;\n            }\n            if (trailFill.color) {\n                const fillColor = rangeColorToRgb(trailFill.color);\n                if (!fillColor) {\n                    return;\n                }\n                const trail = options.particles.move.trail;\n                this._trailFill = {\n                    color: {\n                        ...fillColor,\n                    },\n                    opacity: 1 / trail.length,\n                };\n            }\n            else {\n                await new Promise((resolve, reject) => {\n                    if (!trailFill.image) {\n                        return;\n                    }\n                    const img = document.createElement(\"img\");\n                    img.addEventListener(\"load\", () => {\n                        this._trailFill = {\n                            image: img,\n                            opacity: 1 / trail.length,\n                        };\n                        resolve();\n                    });\n                    img.addEventListener(\"error\", (evt) => {\n                        reject(evt.error);\n                    });\n                    img.src = trailFill.image;\n                });\n            }\n        };\n        this._paintBase = (baseColor) => {\n            this.draw((ctx) => paintBase(ctx, this.size, baseColor));\n        };\n        this._paintImage = (image, opacity) => {\n            this.draw((ctx) => paintImage(ctx, this.size, image, opacity));\n        };\n        this._repairStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            this._safeMutationObserver((observer) => observer.disconnect());\n            this._initStyle();\n            this.initBackground();\n            this._safeMutationObserver((observer) => observer.observe(element, { attributes: true }));\n        };\n        this._resetOriginalStyle = () => {\n            const element = this.element, originalStyle = this._originalStyle;\n            if (!(element && originalStyle)) {\n                return;\n            }\n            const style = element.style;\n            style.position = originalStyle.position;\n            style.zIndex = originalStyle.zIndex;\n            style.top = originalStyle.top;\n            style.left = originalStyle.left;\n            style.width = originalStyle.width;\n            style.height = originalStyle.height;\n        };\n        this._safeMutationObserver = (callback) => {\n            if (!this._mutationObserver) {\n                return;\n            }\n            callback(this._mutationObserver);\n        };\n        this._setFullScreenStyle = () => {\n            const element = this.element;\n            if (!element) {\n                return;\n            }\n            const priority = \"important\", style = element.style;\n            style.setProperty(\"position\", \"fixed\", priority);\n            style.setProperty(\"z-index\", this.container.actualOptions.fullScreen.zIndex.toString(10), priority);\n            style.setProperty(\"top\", \"0\", priority);\n            style.setProperty(\"left\", \"0\", priority);\n            style.setProperty(\"width\", \"100%\", priority);\n            style.setProperty(\"height\", \"100%\", priority);\n        };\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        this._context = null;\n        this._generated = false;\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    get _fullScreen() {\n        return this.container.actualOptions.fullScreen.enable;\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, trailFill = this._trailFill;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && trailFill) {\n            if (trailFill.color) {\n                this._paintBase(getStyleFromRgb(trailFill.color, trailFill.opacity));\n            }\n            else if (trailFill.image) {\n                this._paintImage(trailFill.image, trailFill.opacity);\n            }\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    destroy() {\n        this.stop();\n        if (this._generated) {\n            const element = this.element;\n            element && element.remove();\n        }\n        else {\n            this._resetOriginalStyle();\n        }\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        this._resizePlugins = [];\n        this._colorPlugins = [];\n    }\n    draw(cb) {\n        const ctx = this._context;\n        if (!ctx) {\n            return;\n        }\n        return cb(ctx);\n    }\n    drawParticle(particle, delta) {\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = particle.getStrokeColor() ?? pfColor;\n        let [fColor, sColor] = this._getPluginParticleColors(particle);\n        if (!fColor) {\n            fColor = pfColor;\n        }\n        if (!sColor) {\n            sColor = psColor;\n        }\n        if (!fColor && !sColor) {\n            return;\n        }\n        this.draw((ctx) => {\n            const container = this.container, options = container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = particle.bubble.opacity ?? particle.opacity?.value ?? 1, strokeOpacity = particle.strokeOpacity ?? opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor, transform = {}, colorStyles = {\n                fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n            };\n            colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n            this._applyPreDrawUpdaters(ctx, particle, radius, zOpacity, colorStyles, transform);\n            drawParticle({\n                container,\n                context: ctx,\n                particle,\n                delta,\n                colorStyles,\n                backgroundMask: options.backgroundMask.enable,\n                composite: options.backgroundMask.composite,\n                radius: radius * (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate,\n                opacity: zOpacity,\n                shadow: particle.options.shadow,\n                transform,\n            });\n            this._applyPostDrawUpdaters(particle);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => drawParticlePlugin(ctx, plugin, particle, delta));\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => drawPlugin(ctx, plugin, delta));\n    }\n    async init() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = safeMutationObserver((records) => {\n            for (const record of records) {\n                if (record.type === \"attributes\" && record.attributeName === \"style\") {\n                    this._repairStyle();\n                }\n            }\n        });\n        this.resize();\n        this._initStyle();\n        this._initCover();\n        try {\n            await this._initTrail();\n        }\n        catch (e) {\n            getLogger().error(e);\n        }\n        this.initBackground();\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.initUpdaters();\n        this.initPlugins();\n        this.paint();\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element;\n        if (!element) {\n            return;\n        }\n        const elementStyle = element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    initPlugins() {\n        this._resizePlugins = [];\n        for (const [, plugin] of this.container.plugins) {\n            if (plugin.resize) {\n                this._resizePlugins.push(plugin);\n            }\n            if (plugin.particleFillColor || plugin.particleStrokeColor) {\n                this._colorPlugins.push(plugin);\n            }\n        }\n    }\n    initUpdaters() {\n        this._preDrawUpdaters = [];\n        this._postDrawUpdaters = [];\n        for (const updater of this.container.particles.updaters) {\n            if (updater.afterDraw) {\n                this._postDrawUpdaters.push(updater);\n            }\n            if (updater.getColorStyles || updater.getTransformValues || updater.beforeDraw) {\n                this._preDrawUpdaters.push(updater);\n            }\n        }\n    }\n    loadCanvas(canvas) {\n        if (this._generated && this.element) {\n            this.element.remove();\n        }\n        this._generated =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this._generated;\n        this.element = canvas;\n        this.element.ariaHidden = \"true\";\n        this._originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        this._context = this.element.getContext(\"2d\");\n        this._safeMutationObserver((obs) => {\n            if (!this.element) {\n                return;\n            }\n            obs.observe(this.element, { attributes: true });\n        });\n        this.container.retina.init();\n        this.initBackground();\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this._paintBase(this._coverColorStyle);\n            }\n            else {\n                this._paintBase();\n            }\n        });\n    }\n    resize() {\n        if (!this.element) {\n            return false;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return false;\n        }\n        const oldSize = { ...size };\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n        return true;\n    }\n    stop() {\n        this._safeMutationObserver((obs) => obs.disconnect());\n        this._mutationObserver = undefined;\n        this.draw((ctx) => clear(ctx, this.size));\n    }\n    async windowResize() {\n        if (!this.element || !this.resize()) {\n            return;\n        }\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        this._applyResizePlugins();\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { mouseDownEvent, mouseLeaveEvent, mouseMoveEvent, mouseOutEvent, mouseUpEvent, resizeEvent, touchCancelEvent, touchEndEvent, touchMoveEvent, touchStartEvent, visibilityChangeEvent, } from \"./Constants\";\nfunction manageListener(element, event, handler, add, options) {\n    if (add) {\n        let addOptions = { passive: true };\n        if (isBoolean(options)) {\n            addOptions.capture = options;\n        }\n        else if (options !== undefined) {\n            addOptions = options;\n        }\n        element.addEventListener(event, handler, addOptions);\n    }\n    else {\n        const removeOptions = options;\n        element.removeEventListener(event, handler, removeOptions);\n    }\n}\nexport class EventListeners {\n    constructor(container) {\n        this.container = container;\n        this._doMouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions;\n            if (this._canPush) {\n                const mouseInteractivity = container.interactivity.mouse, mousePos = mouseInteractivity.position;\n                if (!mousePos) {\n                    return;\n                }\n                mouseInteractivity.clickPosition = { ...mousePos };\n                mouseInteractivity.clickTime = new Date().getTime();\n                const onClick = options.interactivity.events.onClick;\n                executeOnSingleOrMultiple(onClick.mode, (mode) => this.container.handleClickMode(mode));\n            }\n            if (e.type === \"touchend\") {\n                setTimeout(() => this._mouseTouchFinish(), 500);\n            }\n        };\n        this._handleThemeChange = (e) => {\n            const mediaEvent = e, container = this.container, options = container.options, defaultThemes = options.defaultThemes, themeName = mediaEvent.matches ? defaultThemes.dark : defaultThemes.light, theme = options.themes.find((theme) => theme.name === themeName);\n            if (theme && theme.default.auto) {\n                container.loadTheme(themeName);\n            }\n        };\n        this._handleVisibilityChange = () => {\n            const container = this.container, options = container.actualOptions;\n            this._mouseTouchFinish();\n            if (!options.pauseOnBlur) {\n                return;\n            }\n            if (document && document.hidden) {\n                container.pageHidden = true;\n                container.pause();\n            }\n            else {\n                container.pageHidden = false;\n                if (container.getAnimationStatus()) {\n                    container.play(true);\n                }\n                else {\n                    container.draw(true);\n                }\n            }\n        };\n        this._handleWindowResize = async () => {\n            if (this._resizeTimeout) {\n                clearTimeout(this._resizeTimeout);\n                delete this._resizeTimeout;\n            }\n            this._resizeTimeout = setTimeout(async () => {\n                const canvas = this.container.canvas;\n                canvas && (await canvas.windowResize());\n            }, this.container.actualOptions.interactivity.events.resize.delay * 1000);\n        };\n        this._manageInteractivityListeners = (mouseLeaveTmpEvent, add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            const interactivityEl = container.interactivity.element;\n            if (!interactivityEl) {\n                return;\n            }\n            const html = interactivityEl, canvasEl = container.canvas.element;\n            if (canvasEl) {\n                canvasEl.style.pointerEvents = html === canvasEl ? \"initial\" : \"none\";\n            }\n            if (!(options.interactivity.events.onHover.enable || options.interactivity.events.onClick.enable)) {\n                return;\n            }\n            manageListener(interactivityEl, mouseMoveEvent, handlers.mouseMove, add);\n            manageListener(interactivityEl, touchStartEvent, handlers.touchStart, add);\n            manageListener(interactivityEl, touchMoveEvent, handlers.touchMove, add);\n            if (!options.interactivity.events.onClick.enable) {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEnd, add);\n            }\n            else {\n                manageListener(interactivityEl, touchEndEvent, handlers.touchEndClick, add);\n                manageListener(interactivityEl, mouseUpEvent, handlers.mouseUp, add);\n                manageListener(interactivityEl, mouseDownEvent, handlers.mouseDown, add);\n            }\n            manageListener(interactivityEl, mouseLeaveTmpEvent, handlers.mouseLeave, add);\n            manageListener(interactivityEl, touchCancelEvent, handlers.touchCancel, add);\n        };\n        this._manageListeners = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions, detectType = options.interactivity.detectsOn, canvasEl = container.canvas.element;\n            let mouseLeaveTmpEvent = mouseLeaveEvent;\n            if (detectType === \"window\") {\n                container.interactivity.element = window;\n                mouseLeaveTmpEvent = mouseOutEvent;\n            }\n            else if (detectType === \"parent\" && canvasEl) {\n                container.interactivity.element = canvasEl.parentElement ?? canvasEl.parentNode;\n            }\n            else {\n                container.interactivity.element = canvasEl;\n            }\n            this._manageMediaMatch(add);\n            this._manageResize(add);\n            this._manageInteractivityListeners(mouseLeaveTmpEvent, add);\n            if (document) {\n                manageListener(document, visibilityChangeEvent, handlers.visibilityChange, add, false);\n            }\n        };\n        this._manageMediaMatch = (add) => {\n            const handlers = this._handlers, mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\");\n            if (!mediaMatch) {\n                return;\n            }\n            if (mediaMatch.addEventListener !== undefined) {\n                manageListener(mediaMatch, \"change\", handlers.themeChange, add);\n                return;\n            }\n            if (mediaMatch.addListener === undefined) {\n                return;\n            }\n            if (add) {\n                mediaMatch.addListener(handlers.oldThemeChange);\n            }\n            else {\n                mediaMatch.removeListener(handlers.oldThemeChange);\n            }\n        };\n        this._manageResize = (add) => {\n            const handlers = this._handlers, container = this.container, options = container.actualOptions;\n            if (!options.interactivity.events.resize) {\n                return;\n            }\n            if (typeof ResizeObserver === \"undefined\") {\n                manageListener(window, resizeEvent, handlers.resize, add);\n                return;\n            }\n            const canvasEl = container.canvas.element;\n            if (this._resizeObserver && !add) {\n                if (canvasEl) {\n                    this._resizeObserver.unobserve(canvasEl);\n                }\n                this._resizeObserver.disconnect();\n                delete this._resizeObserver;\n            }\n            else if (!this._resizeObserver && add && canvasEl) {\n                this._resizeObserver = new ResizeObserver(async (entries) => {\n                    const entry = entries.find((e) => e.target === canvasEl);\n                    if (!entry) {\n                        return;\n                    }\n                    await this._handleWindowResize();\n                });\n                this._resizeObserver.observe(canvasEl);\n            }\n        };\n        this._mouseDown = () => {\n            const { interactivity } = this.container;\n            if (!interactivity) {\n                return;\n            }\n            const { mouse } = interactivity;\n            mouse.clicking = true;\n            mouse.downPosition = mouse.position;\n        };\n        this._mouseTouchClick = (e) => {\n            const container = this.container, options = container.actualOptions, { mouse } = container.interactivity;\n            mouse.inside = true;\n            let handled = false;\n            const mousePosition = mouse.position;\n            if (!mousePosition || !options.interactivity.events.onClick.enable) {\n                return;\n            }\n            for (const [, plugin] of container.plugins) {\n                if (!plugin.clickPositionValid) {\n                    continue;\n                }\n                handled = plugin.clickPositionValid(mousePosition);\n                if (handled) {\n                    break;\n                }\n            }\n            if (!handled) {\n                this._doMouseTouchClick(e);\n            }\n            mouse.clicking = false;\n        };\n        this._mouseTouchFinish = () => {\n            const interactivity = this.container.interactivity;\n            if (!interactivity) {\n                return;\n            }\n            const mouse = interactivity.mouse;\n            delete mouse.position;\n            delete mouse.clickPosition;\n            delete mouse.downPosition;\n            interactivity.status = mouseLeaveEvent;\n            mouse.inside = false;\n            mouse.clicking = false;\n        };\n        this._mouseTouchMove = (e) => {\n            const container = this.container, options = container.actualOptions, interactivity = container.interactivity, canvasEl = container.canvas.element;\n            if (!interactivity || !interactivity.element) {\n                return;\n            }\n            interactivity.mouse.inside = true;\n            let pos;\n            if (e.type.startsWith(\"pointer\")) {\n                this._canPush = true;\n                const mouseEvent = e;\n                if (interactivity.element === window) {\n                    if (canvasEl) {\n                        const clientRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.clientX - clientRect.left,\n                            y: mouseEvent.clientY - clientRect.top,\n                        };\n                    }\n                }\n                else if (options.interactivity.detectsOn === \"parent\") {\n                    const source = mouseEvent.target, target = mouseEvent.currentTarget;\n                    if (source && target && canvasEl) {\n                        const sourceRect = source.getBoundingClientRect(), targetRect = target.getBoundingClientRect(), canvasRect = canvasEl.getBoundingClientRect();\n                        pos = {\n                            x: mouseEvent.offsetX + 2 * sourceRect.left - (targetRect.left + canvasRect.left),\n                            y: mouseEvent.offsetY + 2 * sourceRect.top - (targetRect.top + canvasRect.top),\n                        };\n                    }\n                    else {\n                        pos = {\n                            x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                            y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                        };\n                    }\n                }\n                else if (mouseEvent.target === canvasEl) {\n                    pos = {\n                        x: mouseEvent.offsetX ?? mouseEvent.clientX,\n                        y: mouseEvent.offsetY ?? mouseEvent.clientY,\n                    };\n                }\n            }\n            else {\n                this._canPush = e.type !== \"touchmove\";\n                if (canvasEl) {\n                    const touchEvent = e, lastTouch = touchEvent.touches[touchEvent.touches.length - 1], canvasRect = canvasEl.getBoundingClientRect();\n                    pos = {\n                        x: lastTouch.clientX - (canvasRect.left ?? 0),\n                        y: lastTouch.clientY - (canvasRect.top ?? 0),\n                    };\n                }\n            }\n            const pxRatio = container.retina.pixelRatio;\n            if (pos) {\n                pos.x *= pxRatio;\n                pos.y *= pxRatio;\n            }\n            interactivity.mouse.position = pos;\n            interactivity.status = mouseMoveEvent;\n        };\n        this._touchEnd = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchFinish();\n        };\n        this._touchEndClick = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.delete(touch.identifier);\n            }\n            this._mouseTouchClick(e);\n        };\n        this._touchStart = (e) => {\n            const evt = e, touches = Array.from(evt.changedTouches);\n            for (const touch of touches) {\n                this._touches.set(touch.identifier, performance.now());\n            }\n            this._mouseTouchMove(e);\n        };\n        this._canPush = true;\n        this._touches = new Map();\n        this._handlers = {\n            mouseDown: () => this._mouseDown(),\n            mouseLeave: () => this._mouseTouchFinish(),\n            mouseMove: (e) => this._mouseTouchMove(e),\n            mouseUp: (e) => this._mouseTouchClick(e),\n            touchStart: (e) => this._touchStart(e),\n            touchMove: (e) => this._mouseTouchMove(e),\n            touchEnd: (e) => this._touchEnd(e),\n            touchCancel: (e) => this._touchEnd(e),\n            touchEndClick: (e) => this._touchEndClick(e),\n            visibilityChange: () => this._handleVisibilityChange(),\n            themeChange: (e) => this._handleThemeChange(e),\n            oldThemeChange: (e) => this._handleThemeChange(e),\n            resize: () => {\n                this._handleWindowResize();\n            },\n        };\n    }\n    addListeners() {\n        this._manageListeners(true);\n    }\n    removeListeners() {\n        this._manageListeners(false);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nexport class OptionsColor {\n    constructor() {\n        this.value = \"\";\n    }\n    static create(source, data) {\n        const color = new OptionsColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        if (data?.value === undefined) {\n            return;\n        }\n        this.value = data.value;\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Background {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"\";\n        this.image = \"\";\n        this.position = \"\";\n        this.repeat = \"\";\n        this.size = \"\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n        if (data.position !== undefined) {\n            this.position = data.position;\n        }\n        if (data.repeat !== undefined) {\n            this.repeat = data.repeat;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class BackgroundMaskCover {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { BackgroundMaskCover } from \"./BackgroundMaskCover\";\nimport { isString } from \"../../../Utils/Utils\";\nexport class BackgroundMask {\n    constructor() {\n        this.composite = \"destination-out\";\n        this.cover = new BackgroundMaskCover();\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.composite !== undefined) {\n            this.composite = data.composite;\n        }\n        if (data.cover !== undefined) {\n            const cover = data.cover;\n            const color = (isString(data.cover) ? { color: data.cover } : data.cover);\n            this.cover.load(cover.color !== undefined ? cover : { color: color });\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","export class FullScreen {\n    constructor() {\n        this.enable = true;\n        this.zIndex = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.zIndex !== undefined) {\n            this.zIndex = data.zIndex;\n        }\n    }\n}\n","export class ClickEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../../../Utils/Utils\";\nexport class DivEvent {\n    constructor() {\n        this.selectors = [];\n        this.enable = false;\n        this.mode = [];\n        this.type = \"circle\";\n    }\n    get el() {\n        return this.elementId;\n    }\n    set el(value) {\n        this.elementId = value;\n    }\n    get elementId() {\n        return this.ids;\n    }\n    set elementId(value) {\n        this.ids = value;\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const ids = data.ids ?? data.elementId ?? data.el;\n        if (ids !== undefined) {\n            this.ids = ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","export class Parallax {\n    constructor() {\n        this.enable = false;\n        this.force = 2;\n        this.smooth = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.force !== undefined) {\n            this.force = data.force;\n        }\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n    }\n}\n","import { Parallax } from \"./Parallax\";\nexport class HoverEvent {\n    constructor() {\n        this.enable = false;\n        this.mode = [];\n        this.parallax = new Parallax();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.parallax.load(data.parallax);\n    }\n}\n","export class ResizeEvent {\n    constructor() {\n        this.delay = 0.5;\n        this.enable = true;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isBoolean } from \"../../../../Utils/Utils\";\nimport { ClickEvent } from \"./ClickEvent\";\nimport { DivEvent } from \"./DivEvent\";\nimport { HoverEvent } from \"./HoverEvent\";\nimport { ResizeEvent } from \"./ResizeEvent\";\nexport class Events {\n    constructor() {\n        this.onClick = new ClickEvent();\n        this.onDiv = new DivEvent();\n        this.onHover = new HoverEvent();\n        this.resize = new ResizeEvent();\n    }\n    get onclick() {\n        return this.onClick;\n    }\n    set onclick(value) {\n        this.onClick = value;\n    }\n    get ondiv() {\n        return this.onDiv;\n    }\n    set ondiv(value) {\n        this.onDiv = value;\n    }\n    get onhover() {\n        return this.onHover;\n    }\n    set onhover(value) {\n        this.onHover = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.onClick.load(data.onClick ?? data.onclick);\n        const onDiv = data.onDiv ?? data.ondiv;\n        if (onDiv !== undefined) {\n            this.onDiv = executeOnSingleOrMultiple(onDiv, (t) => {\n                const tmp = new DivEvent();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.onHover.load(data.onHover ?? data.onhover);\n        if (isBoolean(data.resize)) {\n            this.resize.enable = data.resize;\n        }\n        else {\n            this.resize.load(data.resize);\n        }\n    }\n}\n","export class Modes {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (!this._container) {\n            return;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (!interactors) {\n            return;\n        }\n        for (const interactor of interactors) {\n            if (!interactor.loadModeOptions) {\n                continue;\n            }\n            interactor.loadModeOptions(this, data);\n        }\n    }\n}\n","import { Events } from \"./Events/Events\";\nimport { Modes } from \"./Modes/Modes\";\nexport class Interactivity {\n    constructor(engine, container) {\n        this.detectsOn = \"window\";\n        this.events = new Events();\n        this.modes = new Modes(engine, container);\n    }\n    get detect_on() {\n        return this.detectsOn;\n    }\n    set detect_on(value) {\n        this.detectsOn = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const detectsOn = data.detectsOn ?? data.detect_on;\n        if (detectsOn !== undefined) {\n            this.detectsOn = detectsOn;\n        }\n        this.events.load(data.events);\n        this.modes.load(data.modes);\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class ManualParticle {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.position) {\n            this.position = {\n                x: data.position.x ?? 50,\n                y: data.position.y ?? 50,\n                mode: data.position.mode ?? \"percent\",\n            };\n        }\n        if (data.options) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { deepExtend } from \"../../Utils/Utils\";\nexport class Responsive {\n    constructor() {\n        this.maxWidth = Infinity;\n        this.options = {};\n        this.mode = \"canvas\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.maxWidth !== undefined) {\n            this.maxWidth = data.maxWidth;\n        }\n        if (data.mode !== undefined) {\n            if (data.mode === \"screen\") {\n                this.mode = \"screen\";\n            }\n            else {\n                this.mode = \"canvas\";\n            }\n        }\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","export class ThemeDefault {\n    constructor() {\n        this.auto = false;\n        this.mode = \"any\";\n        this.value = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.auto !== undefined) {\n            this.auto = data.auto;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { ThemeDefault } from \"./ThemeDefault\";\nimport { deepExtend } from \"../../../Utils/Utils\";\nexport class Theme {\n    constructor() {\n        this.name = \"\";\n        this.default = new ThemeDefault();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        this.default.load(data.default);\n        if (data.options !== undefined) {\n            this.options = deepExtend({}, data.options);\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ColorAnimation {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.offset = 0;\n        this.speed = 1;\n        this.delay = 0;\n        this.decay = 0;\n        this.sync = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ColorAnimation } from \"./ColorAnimation\";\nexport class HslAnimation {\n    constructor() {\n        this.h = new ColorAnimation();\n        this.s = new ColorAnimation();\n        this.l = new ColorAnimation();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.h.load(data.h);\n        this.s.load(data.s);\n        this.l.load(data.l);\n    }\n}\n","import { isArray, isString } from \"../../Utils/Utils\";\nimport { HslAnimation } from \"./HslAnimation\";\nimport { OptionsColor } from \"./OptionsColor\";\nexport class AnimatableColor extends OptionsColor {\n    constructor() {\n        super();\n        this.animation = new HslAnimation();\n    }\n    static create(source, data) {\n        const color = new AnimatableColor();\n        color.load(source);\n        if (data !== undefined) {\n            if (isString(data) || isArray(data)) {\n                color.load({ value: data });\n            }\n            else {\n                color.load(data);\n            }\n        }\n        return color;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const colorAnimation = data.animation;\n        if (colorAnimation !== undefined) {\n            if (colorAnimation.enable !== undefined) {\n                this.animation.h.load(colorAnimation);\n            }\n            else {\n                this.animation.load(data.animation);\n            }\n        }\n    }\n}\n","export class CollisionsAbsorb {\n    constructor() {\n        this.speed = 2;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","export class CollisionsOverlap {\n    constructor() {\n        this.enable = true;\n        this.retries = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.retries !== undefined) {\n            this.retries = data.retries;\n        }\n    }\n}\n","import { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class AnimationOptions {\n    constructor() {\n        this.count = 0;\n        this.enable = false;\n        this.speed = 1;\n        this.decay = 0;\n        this.delay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = setRangeValue(data.count);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\nexport class RangedAnimationOptions extends AnimationOptions {\n    constructor() {\n        super();\n        this.mode = \"auto\";\n        this.startValue = \"random\";\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.startValue !== undefined) {\n            this.startValue = data.startValue;\n        }\n    }\n}\n","export class Random {\n    constructor() {\n        this.enable = false;\n        this.minimumValue = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.minimumValue !== undefined) {\n            this.minimumValue = data.minimumValue;\n        }\n    }\n}\n","import { AnimationOptions, RangedAnimationOptions } from \"./AnimationOptions\";\nimport { Random } from \"./Random\";\nimport { isBoolean } from \"../../Utils/Utils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class ValueWithRandom {\n    constructor() {\n        this.random = new Random();\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (isBoolean(data.random)) {\n            this.random.enable = data.random;\n        }\n        else {\n            this.random.load(data.random);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value, this.random.enable ? this.random.minimumValue : undefined);\n        }\n    }\n}\nexport class AnimationValueWithRandom extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new AnimationOptions();\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n        }\n    }\n}\nexport class RangedAnimationValueWithRandom extends AnimationValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RangedAnimationOptions();\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ParticlesBounceFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n}\n","import { ParticlesBounceFactor } from \"./ParticlesBounceFactor\";\nexport class ParticlesBounce {\n    constructor() {\n        this.horizontal = new ParticlesBounceFactor();\n        this.vertical = new ParticlesBounceFactor();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.horizontal.load(data.horizontal);\n        this.vertical.load(data.vertical);\n    }\n}\n","import { CollisionsAbsorb } from \"./CollisionsAbsorb\";\nimport { CollisionsOverlap } from \"./CollisionsOverlap\";\nimport { ParticlesBounce } from \"../Bounce/ParticlesBounce\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Collisions {\n    constructor() {\n        this.absorb = new CollisionsAbsorb();\n        this.bounce = new ParticlesBounce();\n        this.enable = false;\n        this.maxSpeed = 50;\n        this.mode = \"bounce\";\n        this.overlap = new CollisionsOverlap();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.absorb.load(data.absorb);\n        this.bounce.load(data.bounce);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        this.overlap.load(data.overlap);\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAngle {\n    constructor() {\n        this.offset = 0;\n        this.value = 90;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.offset !== undefined) {\n            this.offset = setRangeValue(data.offset);\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveAttract {\n    constructor() {\n        this.distance = 200;\n        this.enable = false;\n        this.rotate = {\n            x: 3000,\n            y: 3000,\n        };\n    }\n    get rotateX() {\n        return this.rotate.x;\n    }\n    set rotateX(value) {\n        this.rotate.x = value;\n    }\n    get rotateY() {\n        return this.rotate.y;\n    }\n    set rotateY(value) {\n        this.rotate.y = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const rotateX = data.rotate?.x ?? data.rotateX;\n        if (rotateX !== undefined) {\n            this.rotate.x = rotateX;\n        }\n        const rotateY = data.rotate?.y ?? data.rotateY;\n        if (rotateY !== undefined) {\n            this.rotate.y = rotateY;\n        }\n    }\n}\n","export class MoveCenter {\n    constructor() {\n        this.x = 50;\n        this.y = 50;\n        this.mode = \"percent\";\n        this.radius = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.x !== undefined) {\n            this.x = data.x;\n        }\n        if (data.y !== undefined) {\n            this.y = data.y;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class MoveGravity {\n    constructor() {\n        this.acceleration = 9.81;\n        this.enable = false;\n        this.inverse = false;\n        this.maxSpeed = 50;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.inverse !== undefined) {\n            this.inverse = data.inverse;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = setRangeValue(data.maxSpeed);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../../ValueWithRandom\";\nimport { deepExtend } from \"../../../../../Utils/Utils\";\nexport class MovePath {\n    constructor() {\n        this.clamp = true;\n        this.delay = new ValueWithRandom();\n        this.enable = false;\n        this.options = {};\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.clamp !== undefined) {\n            this.clamp = data.clamp;\n        }\n        this.delay.load(data.delay);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.generator = data.generator;\n        if (data.options) {\n            this.options = deepExtend(this.options, data.options);\n        }\n    }\n}\n","import { OptionsColor } from \"../../OptionsColor\";\nexport class MoveTrailFill {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.image !== undefined) {\n            this.image = data.image;\n        }\n    }\n}\n","import { MoveTrailFill } from \"./MoveTrailFill\";\nexport class MoveTrail {\n    constructor() {\n        this.enable = false;\n        this.length = 10;\n        this.fill = new MoveTrailFill();\n    }\n    get fillColor() {\n        return this.fill.color;\n    }\n    set fillColor(value) {\n        this.fill.load({ color: value });\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.fill !== undefined || data.fillColor !== undefined) {\n            this.fill.load(data.fill || { color: data.fillColor });\n        }\n        if (data.length !== undefined) {\n            this.length = data.length;\n        }\n    }\n}\n","export class OutModes {\n    constructor() {\n        this.default = \"out\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        this.bottom = data.bottom ?? data.default;\n        this.left = data.left ?? data.default;\n        this.right = data.right ?? data.default;\n        this.top = data.top ?? data.default;\n    }\n}\n","import { deepExtend } from \"../../../../Utils/Utils\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Spin {\n    constructor() {\n        this.acceleration = 0;\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.acceleration !== undefined) {\n            this.acceleration = setRangeValue(data.acceleration);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.position) {\n            this.position = deepExtend({}, data.position);\n        }\n    }\n}\n","import { isNumber, isObject } from \"../../../../Utils/Utils\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveAttract } from \"./MoveAttract\";\nimport { MoveCenter } from \"./MoveCenter\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { MovePath } from \"./Path/MovePath\";\nimport { MoveTrail } from \"./MoveTrail\";\nimport { OutModes } from \"./OutModes\";\nimport { Spin } from \"./Spin\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new MoveAttract();\n        this.center = new MoveCenter();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new MovePath();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new MoveTrail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(_) {\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.angle.load(isNumber(data.angle) ? { value: data.angle } : data.angle);\n        this.attract.load(data.attract);\n        this.center.load(data.center);\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance = isNumber(data.distance)\n                ? {\n                    horizontal: data.distance,\n                    vertical: data.distance,\n                }\n                : { ...data.distance };\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outModes = data.outModes ?? data.outMode ?? data.out_mode;\n        if (outModes !== undefined) {\n            if (isObject(outModes)) {\n                this.outModes.load(outModes);\n            }\n            else {\n                this.outModes.load({\n                    default: outModes,\n                });\n            }\n        }\n        this.path.load(data.path ?? data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class OpacityAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 2;\n    }\n    get opacity_min() {\n        return this.minimumValue;\n    }\n    set opacity_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.opacity_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.opacity_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { OpacityAnimation } from \"./OpacityAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Opacity extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new OpacityAnimation();\n        this.random.minimumValue = 0.1;\n        this.value = 1;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","export class ParticlesDensity {\n    constructor() {\n        this.enable = false;\n        this.width = 1920;\n        this.height = 1080;\n    }\n    get area() {\n        return this.width;\n    }\n    set area(value) {\n        this.width = value;\n    }\n    get factor() {\n        return this.height;\n    }\n    set factor(value) {\n        this.height = value;\n    }\n    get value_area() {\n        return this.area;\n    }\n    set value_area(value) {\n        this.area = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        const width = data.width ?? data.area ?? data.value_area;\n        if (width !== undefined) {\n            this.width = width;\n        }\n        const height = data.height ?? data.factor;\n        if (height !== undefined) {\n            this.height = height;\n        }\n    }\n}\n","import { ParticlesDensity } from \"./ParticlesDensity\";\nexport class ParticlesNumber {\n    constructor() {\n        this.density = new ParticlesDensity();\n        this.limit = 0;\n        this.value = 0;\n    }\n    get max() {\n        return this.limit;\n    }\n    set max(value) {\n        this.limit = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.density.load(data.density);\n        const limit = data.limit ?? data.max;\n        if (limit !== undefined) {\n            this.limit = limit;\n        }\n        if (data.value !== undefined) {\n            this.value = data.value;\n        }\n    }\n}\n","import { OptionsColor } from \"../OptionsColor\";\nexport class Shadow {\n    constructor() {\n        this.blur = 0;\n        this.color = new OptionsColor();\n        this.enable = false;\n        this.offset = {\n            x: 0,\n            y: 0,\n        };\n        this.color.value = \"#000\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.offset === undefined) {\n            return;\n        }\n        if (data.offset.x !== undefined) {\n            this.offset.x = data.offset.x;\n        }\n        if (data.offset.y !== undefined) {\n            this.offset.y = data.offset.y;\n        }\n    }\n}\n","import { deepExtend, isArray } from \"../../../../Utils/Utils\";\nconst charKey = \"character\", charAltKey = \"char\", imageKey = \"image\", imageAltKey = \"images\", polygonKey = \"polygon\", polygonAltKey = \"star\";\nexport class Shape {\n    constructor() {\n        this.loadShape = (item, mainKey, altKey, altOverride) => {\n            if (!item) {\n                return;\n            }\n            const itemIsArray = isArray(item), emptyValue = itemIsArray ? [] : {}, mainDifferentValues = itemIsArray !== isArray(this.options[mainKey]), altDifferentValues = itemIsArray !== isArray(this.options[altKey]);\n            if (mainDifferentValues) {\n                this.options[mainKey] = emptyValue;\n            }\n            if (altDifferentValues && altOverride) {\n                this.options[altKey] = emptyValue;\n            }\n            this.options[mainKey] = deepExtend(this.options[mainKey] ?? emptyValue, item);\n            if (!this.options[altKey] || altOverride) {\n                this.options[altKey] = deepExtend(this.options[altKey] ?? emptyValue, item);\n            }\n        };\n        this.close = true;\n        this.fill = true;\n        this.options = {};\n        this.type = \"circle\";\n    }\n    get character() {\n        return (this.options[charKey] ?? this.options[charAltKey]);\n    }\n    set character(value) {\n        this.options[charAltKey] = this.options[charKey] = value;\n    }\n    get custom() {\n        return this.options;\n    }\n    set custom(value) {\n        this.options = value;\n    }\n    get image() {\n        return (this.options[imageKey] ?? this.options[imageAltKey]);\n    }\n    set image(value) {\n        this.options[imageAltKey] = this.options[imageKey] = value;\n    }\n    get images() {\n        return this.image;\n    }\n    set images(value) {\n        this.image = value;\n    }\n    get polygon() {\n        return (this.options[polygonKey] ?? this.options[polygonAltKey]);\n    }\n    set polygon(value) {\n        this.options[polygonAltKey] = this.options[polygonKey] = value;\n    }\n    get stroke() {\n        return [];\n    }\n    set stroke(_value) {\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const options = data.options ?? data.custom;\n        if (options !== undefined) {\n            for (const shape in options) {\n                const item = options[shape];\n                if (item) {\n                    this.options[shape] = deepExtend(this.options[shape] ?? {}, item);\n                }\n            }\n        }\n        this.loadShape(data.character, charKey, charAltKey, true);\n        this.loadShape(data.polygon, polygonKey, polygonAltKey, false);\n        this.loadShape(data.image ?? data.images, imageKey, imageAltKey, true);\n        if (data.close !== undefined) {\n            this.close = data.close;\n        }\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        if (data.type !== undefined) {\n            this.type = data.type;\n        }\n    }\n}\n","import { RangedAnimationOptions } from \"../../AnimationOptions\";\nexport class SizeAnimation extends RangedAnimationOptions {\n    constructor() {\n        super();\n        this.destroy = \"none\";\n        this.speed = 5;\n    }\n    get size_min() {\n        return this.minimumValue;\n    }\n    set size_min(value) {\n        this.minimumValue = value;\n    }\n    load(data) {\n        if (data?.size_min !== undefined && data.minimumValue === undefined) {\n            data.minimumValue = data.size_min;\n        }\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n    }\n}\n","import { SizeAnimation } from \"./SizeAnimation\";\nimport { ValueWithRandom } from \"../../ValueWithRandom\";\nimport { setRangeValue } from \"../../../../Utils/NumberUtils\";\nexport class Size extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new SizeAnimation();\n        this.random.minimumValue = 1;\n        this.value = 3;\n    }\n    get anim() {\n        return this.animation;\n    }\n    set anim(value) {\n        this.animation = value;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        const animation = data.animation ?? data.anim;\n        if (animation !== undefined) {\n            this.animation.load(animation);\n            this.value = setRangeValue(this.value, this.animation.enable ? this.animation.minimumValue : undefined);\n        }\n    }\n}\n","import { AnimatableColor } from \"../AnimatableColor\";\nimport { setRangeValue } from \"../../../Utils/NumberUtils\";\nexport class Stroke {\n    constructor() {\n        this.width = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = AnimatableColor.create(this.color, data.color);\n        }\n        if (data.width !== undefined) {\n            this.width = setRangeValue(data.width);\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { ValueWithRandom } from \"../../ValueWithRandom\";\nexport class ZIndex extends ValueWithRandom {\n    constructor() {\n        super();\n        this.opacityRate = 1;\n        this.sizeRate = 1;\n        this.velocityRate = 1;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.opacityRate !== undefined) {\n            this.opacityRate = data.opacityRate;\n        }\n        if (data.sizeRate !== undefined) {\n            this.sizeRate = data.sizeRate;\n        }\n        if (data.velocityRate !== undefined) {\n            this.velocityRate = data.velocityRate;\n        }\n    }\n}\n","import { deepExtend, executeOnSingleOrMultiple } from \"../../../Utils/Utils\";\nimport { AnimatableColor } from \"../AnimatableColor\";\nimport { Collisions } from \"./Collisions/Collisions\";\nimport { Move } from \"./Move/Move\";\nimport { Opacity } from \"./Opacity/Opacity\";\nimport { ParticlesBounce } from \"./Bounce/ParticlesBounce\";\nimport { ParticlesNumber } from \"./Number/ParticlesNumber\";\nimport { Shadow } from \"./Shadow\";\nimport { Shape } from \"./Shape/Shape\";\nimport { Size } from \"./Size/Size\";\nimport { Stroke } from \"./Stroke\";\nimport { ZIndex } from \"./ZIndex/ZIndex\";\nexport class ParticlesOptions {\n    constructor(engine, container) {\n        this._engine = engine;\n        this._container = container;\n        this.bounce = new ParticlesBounce();\n        this.collisions = new Collisions();\n        this.color = new AnimatableColor();\n        this.color.value = \"#fff\";\n        this.groups = {};\n        this.move = new Move();\n        this.number = new ParticlesNumber();\n        this.opacity = new Opacity();\n        this.reduceDuplicates = false;\n        this.shadow = new Shadow();\n        this.shape = new Shape();\n        this.size = new Size();\n        this.stroke = new Stroke();\n        this.zIndex = new ZIndex();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.bounce.load(data.bounce);\n        this.color.load(AnimatableColor.create(this.color, data.color));\n        if (data.groups !== undefined) {\n            for (const group in data.groups) {\n                const item = data.groups[group];\n                if (item !== undefined) {\n                    this.groups[group] = deepExtend(this.groups[group] ?? {}, item);\n                }\n            }\n        }\n        this.move.load(data.move);\n        this.number.load(data.number);\n        this.opacity.load(data.opacity);\n        if (data.reduceDuplicates !== undefined) {\n            this.reduceDuplicates = data.reduceDuplicates;\n        }\n        this.shape.load(data.shape);\n        this.size.load(data.size);\n        this.shadow.load(data.shadow);\n        this.zIndex.load(data.zIndex);\n        const collisions = data.move?.collisions ?? data.move?.bounce;\n        if (collisions !== undefined) {\n            this.collisions.enable = collisions;\n        }\n        this.collisions.load(data.collisions);\n        if (data.interactivity !== undefined) {\n            this.interactivity = deepExtend({}, data.interactivity);\n        }\n        const strokeToLoad = data.stroke ?? data.shape?.stroke;\n        if (strokeToLoad) {\n            this.stroke = executeOnSingleOrMultiple(strokeToLoad, (t) => {\n                const tmp = new Stroke();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        if (this._container) {\n            const updaters = this._engine.plugins.updaters.get(this._container);\n            if (updaters) {\n                for (const updater of updaters) {\n                    if (updater.loadOptions) {\n                        updater.loadOptions(this, data);\n                    }\n                }\n            }\n            const interactors = this._engine.plugins.interactors.get(this._container);\n            if (interactors) {\n                for (const interactor of interactors) {\n                    if (interactor.loadParticlesOptions) {\n                        interactor.loadParticlesOptions(this, data);\n                    }\n                }\n            }\n        }\n    }\n}\n","import { ParticlesOptions } from \"../Options/Classes/Particles/ParticlesOptions\";\nexport function loadOptions(options, ...sourceOptionsArr) {\n    for (const sourceOptions of sourceOptionsArr) {\n        options.load(sourceOptions);\n    }\n}\nexport function loadParticlesOptions(engine, container, ...sourceOptionsArr) {\n    const options = new ParticlesOptions(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\n","import { deepExtend, executeOnSingleOrMultiple, isBoolean, safeMatchMedia } from \"../../Utils/Utils\";\nimport { Background } from \"./Background/Background\";\nimport { BackgroundMask } from \"./BackgroundMask/BackgroundMask\";\nimport { FullScreen } from \"./FullScreen/FullScreen\";\nimport { Interactivity } from \"./Interactivity/Interactivity\";\nimport { ManualParticle } from \"./ManualParticle\";\nimport { Responsive } from \"./Responsive\";\nimport { Theme } from \"./Theme/Theme\";\nimport { loadParticlesOptions } from \"../../Utils/OptionsUtils\";\nimport { setRangeValue } from \"../../Utils/NumberUtils\";\nexport class Options {\n    constructor(engine, container) {\n        this._findDefaultTheme = (mode) => {\n            return (this.themes.find((theme) => theme.default.value && theme.default.mode === mode) ??\n                this.themes.find((theme) => theme.default.value && theme.default.mode === \"any\"));\n        };\n        this._importPreset = (preset) => {\n            this.load(this._engine.plugins.getPreset(preset));\n        };\n        this._engine = engine;\n        this._container = container;\n        this.autoPlay = true;\n        this.background = new Background();\n        this.backgroundMask = new BackgroundMask();\n        this.defaultThemes = {};\n        this.delay = 0;\n        this.fullScreen = new FullScreen();\n        this.detectRetina = true;\n        this.duration = 0;\n        this.fpsLimit = 120;\n        this.interactivity = new Interactivity(engine, container);\n        this.manualParticles = [];\n        this.particles = loadParticlesOptions(this._engine, this._container);\n        this.pauseOnBlur = true;\n        this.pauseOnOutsideViewport = true;\n        this.responsive = [];\n        this.smooth = false;\n        this.style = {};\n        this.themes = [];\n        this.zLayers = 100;\n    }\n    get backgroundMode() {\n        return this.fullScreen;\n    }\n    set backgroundMode(value) {\n        this.fullScreen.load(value);\n    }\n    get fps_limit() {\n        return this.fpsLimit;\n    }\n    set fps_limit(value) {\n        this.fpsLimit = value;\n    }\n    get retina_detect() {\n        return this.detectRetina;\n    }\n    set retina_detect(value) {\n        this.detectRetina = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.preset !== undefined) {\n            executeOnSingleOrMultiple(data.preset, (preset) => this._importPreset(preset));\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        const detectRetina = data.detectRetina ?? data.retina_detect;\n        if (detectRetina !== undefined) {\n            this.detectRetina = detectRetina;\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        const fpsLimit = data.fpsLimit ?? data.fps_limit;\n        if (fpsLimit !== undefined) {\n            this.fpsLimit = fpsLimit;\n        }\n        if (data.pauseOnBlur !== undefined) {\n            this.pauseOnBlur = data.pauseOnBlur;\n        }\n        if (data.pauseOnOutsideViewport !== undefined) {\n            this.pauseOnOutsideViewport = data.pauseOnOutsideViewport;\n        }\n        if (data.zLayers !== undefined) {\n            this.zLayers = data.zLayers;\n        }\n        this.background.load(data.background);\n        const fullScreen = data.fullScreen ?? data.backgroundMode;\n        if (isBoolean(fullScreen)) {\n            this.fullScreen.enable = fullScreen;\n        }\n        else {\n            this.fullScreen.load(fullScreen);\n        }\n        this.backgroundMask.load(data.backgroundMask);\n        this.interactivity.load(data.interactivity);\n        if (data.manualParticles) {\n            this.manualParticles = data.manualParticles.map((t) => {\n                const tmp = new ManualParticle();\n                tmp.load(t);\n                return tmp;\n            });\n        }\n        this.particles.load(data.particles);\n        this.style = deepExtend(this.style, data.style);\n        this._engine.plugins.loadOptions(this, data);\n        if (data.smooth !== undefined) {\n            this.smooth = data.smooth;\n        }\n        const interactors = this._engine.plugins.interactors.get(this._container);\n        if (interactors) {\n            for (const interactor of interactors) {\n                if (interactor.loadOptions) {\n                    interactor.loadOptions(this, data);\n                }\n            }\n        }\n        if (data.responsive !== undefined) {\n            for (const responsive of data.responsive) {\n                const optResponsive = new Responsive();\n                optResponsive.load(responsive);\n                this.responsive.push(optResponsive);\n            }\n        }\n        this.responsive.sort((a, b) => a.maxWidth - b.maxWidth);\n        if (data.themes !== undefined) {\n            for (const theme of data.themes) {\n                const existingTheme = this.themes.find((t) => t.name === theme.name);\n                if (!existingTheme) {\n                    const optTheme = new Theme();\n                    optTheme.load(theme);\n                    this.themes.push(optTheme);\n                }\n                else {\n                    existingTheme.load(theme);\n                }\n            }\n        }\n        this.defaultThemes.dark = this._findDefaultTheme(\"dark\")?.name;\n        this.defaultThemes.light = this._findDefaultTheme(\"light\")?.name;\n    }\n    setResponsive(width, pxRatio, defaultOptions) {\n        this.load(defaultOptions);\n        const responsiveOptions = this.responsive.find((t) => t.mode === \"screen\" && screen ? t.maxWidth > screen.availWidth : t.maxWidth * pxRatio > width);\n        this.load(responsiveOptions?.options);\n        return responsiveOptions?.maxWidth;\n    }\n    setTheme(name) {\n        if (name) {\n            const chosenTheme = this.themes.find((theme) => theme.name === name);\n            if (chosenTheme) {\n                this.load(chosenTheme.options);\n            }\n        }\n        else {\n            const mediaMatch = safeMatchMedia(\"(prefers-color-scheme: dark)\"), clientDarkMode = mediaMatch && mediaMatch.matches, defaultTheme = this._findDefaultTheme(clientDarkMode ? \"dark\" : \"light\");\n            if (defaultTheme) {\n                this.load(defaultTheme.options);\n            }\n        }\n    }\n}\n","export class InteractionManager {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this._interactors = engine.plugins.getInteractors(this.container, true);\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n    }\n    async externalInteract(delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && (await interactor.interact(delta));\n        }\n    }\n    handleClickMode(mode) {\n        for (const interactor of this._externalInteractors) {\n            interactor.handleClickMode && interactor.handleClickMode(mode);\n        }\n    }\n    init() {\n        this._externalInteractors = [];\n        this._particleInteractors = [];\n        for (const interactor of this._interactors) {\n            switch (interactor.type) {\n                case \"external\":\n                    this._externalInteractors.push(interactor);\n                    break;\n                case \"particles\":\n                    this._particleInteractors.push(interactor);\n                    break;\n            }\n            interactor.init();\n        }\n    }\n    async particlesInteract(particle, delta) {\n        for (const interactor of this._externalInteractors) {\n            interactor.clear(particle, delta);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && (await interactor.interact(particle, delta));\n        }\n    }\n    async reset(particle) {\n        for (const interactor of this._externalInteractors) {\n            interactor.isEnabled() && interactor.reset(particle);\n        }\n        for (const interactor of this._particleInteractors) {\n            interactor.isEnabled(particle) && interactor.reset(particle);\n        }\n    }\n}\n","import { calcExactPositionOrRandomFromSize, clamp, getDistance, getParticleBaseVelocity, getParticleDirectionAngle, getRandom, getRangeValue, getValue, randomInRange, setRangeValue, } from \"../Utils/NumberUtils\";\nimport { deepExtend, getPosition, initParticleNumericAnimationValue, isInArray, itemFromSingleOrMultiple, } from \"../Utils/Utils\";\nimport { getHslFromAnimation, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { Interactivity } from \"../Options/Classes/Interactivity/Interactivity\";\nimport { Vector } from \"./Utils/Vector\";\nimport { Vector3d } from \"./Utils/Vector3d\";\nimport { alterHsl } from \"../Utils/CanvasUtils\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { loadParticlesOptions } from \"../Utils/OptionsUtils\";\nconst fixOutMode = (data) => {\n    if (!isInArray(data.outMode, data.checkModes)) {\n        return;\n    }\n    const diameter = data.radius * 2;\n    if (data.coord > data.maxCoord - diameter) {\n        data.setCb(-data.radius);\n    }\n    else if (data.coord < diameter) {\n        data.setCb(data.radius);\n    }\n};\nexport class Particle {\n    constructor(engine, id, container, position, overrideOptions, group) {\n        this.container = container;\n        this._calcPosition = (container, position, zIndex, tryCount = 0) => {\n            for (const [, plugin] of container.plugins) {\n                const pluginPos = plugin.particlePosition !== undefined ? plugin.particlePosition(position, this) : undefined;\n                if (pluginPos) {\n                    return Vector3d.create(pluginPos.x, pluginPos.y, zIndex);\n                }\n            }\n            const canvasSize = container.canvas.size, exactPosition = calcExactPositionOrRandomFromSize({\n                size: canvasSize,\n                position: position,\n            }), pos = Vector3d.create(exactPosition.x, exactPosition.y, zIndex), radius = this.getRadius(), outModes = this.options.move.outModes, fixHorizontal = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-horizontal\"],\n                    coord: pos.x,\n                    maxCoord: container.canvas.size.width,\n                    setCb: (value) => (pos.x += value),\n                    radius,\n                });\n            }, fixVertical = (outMode) => {\n                fixOutMode({\n                    outMode,\n                    checkModes: [\"bounce\", \"bounce-vertical\"],\n                    coord: pos.y,\n                    maxCoord: container.canvas.size.height,\n                    setCb: (value) => (pos.y += value),\n                    radius,\n                });\n            };\n            fixHorizontal(outModes.left ?? outModes.default);\n            fixHorizontal(outModes.right ?? outModes.default);\n            fixVertical(outModes.top ?? outModes.default);\n            fixVertical(outModes.bottom ?? outModes.default);\n            if (this._checkOverlap(pos, tryCount)) {\n                return this._calcPosition(container, undefined, zIndex, tryCount + 1);\n            }\n            return pos;\n        };\n        this._calculateVelocity = () => {\n            const baseVelocity = getParticleBaseVelocity(this.direction), res = baseVelocity.copy(), moveOptions = this.options.move;\n            if (moveOptions.direction === \"inside\" || moveOptions.direction === \"outside\") {\n                return res;\n            }\n            const rad = (Math.PI / 180) * getRangeValue(moveOptions.angle.value), radOffset = (Math.PI / 180) * getRangeValue(moveOptions.angle.offset), range = {\n                left: radOffset - rad / 2,\n                right: radOffset + rad / 2,\n            };\n            if (!moveOptions.straight) {\n                res.angle += randomInRange(setRangeValue(range.left, range.right));\n            }\n            if (moveOptions.random && typeof moveOptions.speed === \"number\") {\n                res.length *= getRandom();\n            }\n            return res;\n        };\n        this._checkOverlap = (pos, tryCount = 0) => {\n            const collisionsOptions = this.options.collisions, radius = this.getRadius();\n            if (!collisionsOptions.enable) {\n                return false;\n            }\n            const overlapOptions = collisionsOptions.overlap;\n            if (overlapOptions.enable) {\n                return false;\n            }\n            const retries = overlapOptions.retries;\n            if (retries >= 0 && tryCount > retries) {\n                throw new Error(`${errorPrefix} particle is overlapping and can't be placed`);\n            }\n            return !!this.container.particles.find((particle) => getDistance(pos, particle.position) < radius + particle.getRadius());\n        };\n        this._getRollColor = (color) => {\n            if (!color || !this.roll || (!this.backColor && !this.roll.alter)) {\n                return color;\n            }\n            const backFactor = this.roll.horizontal && this.roll.vertical ? 2 : 1, backSum = this.roll.horizontal ? Math.PI / 2 : 0, rolled = Math.floor(((this.roll.angle ?? 0) + backSum) / (Math.PI / backFactor)) % 2;\n            if (!rolled) {\n                return color;\n            }\n            if (this.backColor) {\n                return this.backColor;\n            }\n            if (this.roll.alter) {\n                return alterHsl(color, this.roll.alter.type, this.roll.alter.value);\n            }\n            return color;\n        };\n        this._initPosition = (position) => {\n            const container = this.container, zIndexValue = getRangeValue(this.options.zIndex.value);\n            this.position = this._calcPosition(container, position, clamp(zIndexValue, 0, container.zLayers));\n            this.initialPosition = this.position.copy();\n            const canvasSize = container.canvas.size;\n            this.moveCenter = {\n                ...getPosition(this.options.move.center, canvasSize),\n                radius: this.options.move.center.radius ?? 0,\n                mode: this.options.move.center.mode ?? \"percent\",\n            };\n            this.direction = getParticleDirectionAngle(this.options.move.direction, this.position, this.moveCenter);\n            switch (this.options.move.direction) {\n                case \"inside\":\n                    this.outType = \"inside\";\n                    break;\n                case \"outside\":\n                    this.outType = \"outside\";\n                    break;\n            }\n            this.offset = Vector.origin;\n        };\n        this._loadShapeData = (shapeOptions, reduceDuplicates) => {\n            const shapeData = shapeOptions.options[this.shape];\n            if (!shapeData) {\n                return;\n            }\n            return deepExtend({\n                close: shapeOptions.close,\n                fill: shapeOptions.fill,\n            }, itemFromSingleOrMultiple(shapeData, this.id, reduceDuplicates));\n        };\n        this._engine = engine;\n        this.init(id, position, overrideOptions, group);\n    }\n    destroy(override) {\n        if (this.unbreakable || this.destroyed) {\n            return;\n        }\n        this.destroyed = true;\n        this.bubble.inRange = false;\n        this.slow.inRange = false;\n        const container = this.container, pathGenerator = this.pathGenerator;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleDestroyed) {\n                plugin.particleDestroyed(this, override);\n            }\n        }\n        for (const updater of container.particles.updaters) {\n            if (updater.particleDestroyed) {\n                updater.particleDestroyed(this, override);\n            }\n        }\n        if (pathGenerator) {\n            pathGenerator.reset(this);\n        }\n    }\n    draw(delta) {\n        const container = this.container;\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawParticlePlugin(plugin, this, delta);\n        }\n        container.canvas.drawParticle(this, delta);\n    }\n    getFillColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.color));\n    }\n    getMass() {\n        return (this.getRadius() ** 2 * Math.PI) / 2;\n    }\n    getPosition() {\n        return {\n            x: this.position.x + this.offset.x,\n            y: this.position.y + this.offset.y,\n            z: this.position.z,\n        };\n    }\n    getRadius() {\n        return this.bubble.radius ?? this.size.value;\n    }\n    getStrokeColor() {\n        return this._getRollColor(this.bubble.color ?? getHslFromAnimation(this.strokeColor));\n    }\n    init(id, position, overrideOptions, group) {\n        const container = this.container, engine = this._engine;\n        this.id = id;\n        this.group = group;\n        this.fill = true;\n        this.pathRotation = false;\n        this.close = true;\n        this.lastPathTime = 0;\n        this.destroyed = false;\n        this.unbreakable = false;\n        this.rotation = 0;\n        this.misplaced = false;\n        this.retina = {\n            maxDistance: {},\n        };\n        this.outType = \"normal\";\n        this.ignoresResizeRatio = true;\n        const pxRatio = container.retina.pixelRatio, mainOptions = container.actualOptions, particlesOptions = loadParticlesOptions(this._engine, container, mainOptions.particles), shapeType = particlesOptions.shape.type, { reduceDuplicates } = particlesOptions;\n        this.shape = itemFromSingleOrMultiple(shapeType, this.id, reduceDuplicates);\n        const shapeOptions = particlesOptions.shape;\n        if (overrideOptions && overrideOptions.shape && overrideOptions.shape.type) {\n            const overrideShapeType = overrideOptions.shape.type, shape = itemFromSingleOrMultiple(overrideShapeType, this.id, reduceDuplicates);\n            if (shape) {\n                this.shape = shape;\n                shapeOptions.load(overrideOptions.shape);\n            }\n        }\n        this.shapeData = this._loadShapeData(shapeOptions, reduceDuplicates);\n        particlesOptions.load(overrideOptions);\n        const shapeData = this.shapeData;\n        if (shapeData) {\n            particlesOptions.load(shapeData.particles);\n        }\n        const interactivity = new Interactivity(engine, container);\n        interactivity.load(container.actualOptions.interactivity);\n        interactivity.load(particlesOptions.interactivity);\n        this.interactivity = interactivity;\n        this.fill = shapeData?.fill ?? particlesOptions.shape.fill;\n        this.close = shapeData?.close ?? particlesOptions.shape.close;\n        this.options = particlesOptions;\n        const pathOptions = this.options.move.path;\n        this.pathDelay = getValue(pathOptions.delay) * 1000;\n        if (pathOptions.generator) {\n            this.pathGenerator = this._engine.plugins.getPathGenerator(pathOptions.generator);\n            if (this.pathGenerator && container.addPath(pathOptions.generator, this.pathGenerator)) {\n                this.pathGenerator.init(container);\n            }\n        }\n        container.retina.initParticle(this);\n        this.size = initParticleNumericAnimationValue(this.options.size, pxRatio);\n        this.bubble = {\n            inRange: false,\n        };\n        this.slow = {\n            inRange: false,\n            factor: 1,\n        };\n        this._initPosition(position);\n        this.initialVelocity = this._calculateVelocity();\n        this.velocity = this.initialVelocity.copy();\n        this.moveDecay = 1 - getRangeValue(this.options.move.decay);\n        const particles = container.particles;\n        particles.needsSort = particles.needsSort || particles.lastZIndex < this.position.z;\n        particles.lastZIndex = this.position.z;\n        this.zIndexFactor = this.position.z / container.zLayers;\n        this.sides = 24;\n        let drawer = container.drawers.get(this.shape);\n        if (!drawer) {\n            drawer = this._engine.plugins.getShapeDrawer(this.shape);\n            if (drawer) {\n                container.drawers.set(this.shape, drawer);\n            }\n        }\n        if (drawer && drawer.loadShape) {\n            drawer.loadShape(this);\n        }\n        const sideCountFunc = drawer?.getSidesCount;\n        if (sideCountFunc) {\n            this.sides = sideCountFunc(this);\n        }\n        this.spawning = false;\n        this.shadowColor = rangeColorToRgb(this.options.shadow.color);\n        for (const updater of container.particles.updaters) {\n            updater.init(this);\n        }\n        for (const mover of container.particles.movers) {\n            mover.init && mover.init(this);\n        }\n        if (drawer && drawer.particleInit) {\n            drawer.particleInit(container, this);\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.particleCreated && plugin.particleCreated(this);\n        }\n    }\n    isInsideCanvas() {\n        const radius = this.getRadius(), canvasSize = this.container.canvas.size, position = this.position;\n        return (position.x >= -radius &&\n            position.y >= -radius &&\n            position.y <= canvasSize.height + radius &&\n            position.x <= canvasSize.width + radius);\n    }\n    isVisible() {\n        return !this.destroyed && !this.spawning && this.isInsideCanvas();\n    }\n    reset() {\n        for (const updater of this.container.particles.updaters) {\n            updater.reset && updater.reset(this);\n        }\n    }\n}\n","export class Point {\n    constructor(position, particle) {\n        this.position = position;\n        this.particle = particle;\n    }\n}\n","export class Range {\n    constructor(x, y) {\n        this.position = {\n            x: x,\n            y: y,\n        };\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Range } from \"./Range\";\nexport class Rectangle extends Range {\n    constructor(x, y, width, height) {\n        super(x, y);\n        this.size = {\n            height: height,\n            width: width,\n        };\n    }\n    contains(point) {\n        const w = this.size.width, h = this.size.height, pos = this.position;\n        return point.x >= pos.x && point.x <= pos.x + w && point.y >= pos.y && point.y <= pos.y + h;\n    }\n    intersects(range) {\n        if (range instanceof Circle) {\n            range.intersects(this);\n        }\n        const w = this.size.width, h = this.size.height, pos1 = this.position, pos2 = range.position, size2 = range instanceof Rectangle ? range.size : { width: 0, height: 0 }, w2 = size2.width, h2 = size2.height;\n        return pos2.x < pos1.x + w && pos2.x + w2 > pos1.x && pos2.y < pos1.y + h && pos2.y + h2 > pos1.y;\n    }\n}\n","import { Range } from \"./Range\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class Circle extends Range {\n    constructor(x, y, radius) {\n        super(x, y);\n        this.radius = radius;\n    }\n    contains(point) {\n        return getDistance(point, this.position) <= this.radius;\n    }\n    intersects(range) {\n        const pos1 = this.position, pos2 = range.position, distPos = { x: Math.abs(pos2.x - pos1.x), y: Math.abs(pos2.y - pos1.y) }, r = this.radius;\n        if (range instanceof Circle) {\n            const rSum = r + range.radius, dist = Math.sqrt(distPos.x ** 2 + distPos.y ** 2);\n            return rSum > dist;\n        }\n        else if (range instanceof Rectangle) {\n            const { width, height } = range.size, edges = Math.pow(distPos.x - width, 2) + Math.pow(distPos.y - height, 2);\n            return (edges <= r ** 2 ||\n                (distPos.x <= r + width && distPos.y <= r + height) ||\n                distPos.x <= width ||\n                distPos.y <= height);\n        }\n        return false;\n    }\n}\n","import { Circle } from \"./Circle\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils/NumberUtils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this._subdivide = () => {\n            const { x, y } = this.rectangle.position, { width, height } = this.rectangle.size, { capacity } = this;\n            for (let i = 0; i < 4; i++) {\n                this._subs.push(new QuadTree(new Rectangle(x + (width / 2) * (i % 2), y + (height / 2) * (Math.round(i / 2) - (i % 2)), width / 2, height / 2), capacity));\n            }\n            this._divided = true;\n        };\n        this._points = [];\n        this._divided = false;\n        this._subs = [];\n    }\n    insert(point) {\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this._points.length < this.capacity) {\n            this._points.push(point);\n            return true;\n        }\n        if (!this._divided) {\n            this._subdivide();\n        }\n        return this._subs.some((sub) => sub.insert(point));\n    }\n    query(range, check, found) {\n        const res = found || [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        for (const p of this._points) {\n            if (!range.contains(p.position) &&\n                getDistance(range.position, p.position) > p.particle.getRadius() &&\n                (!check || check(p.particle))) {\n                continue;\n            }\n            res.push(p.particle);\n        }\n        if (this._divided) {\n            for (const sub of this._subs) {\n                sub.query(range, check, res);\n            }\n        }\n        return res;\n    }\n    queryCircle(position, radius, check) {\n        return this.query(new Circle(position.x, position.y, radius), check);\n    }\n    queryRectangle(position, size, check) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height), check);\n    }\n}\n","import { getLogger, getPosition } from \"../Utils/Utils\";\nimport { InteractionManager } from \"./Utils/InteractionManager\";\nimport { Particle } from \"./Particle\";\nimport { Point } from \"./Utils/Point\";\nimport { QuadTree } from \"./Utils/QuadTree\";\nimport { Rectangle } from \"./Utils/Rectangle\";\nimport { errorPrefix } from \"./Utils/Constants\";\nconst qTreeCapacity = 4;\nconst qTreeRectangle = (canvasSize) => {\n    return new Rectangle(-canvasSize.width / 4, -canvasSize.height / 4, (canvasSize.width * 3) / 2, (canvasSize.height * 3) / 2);\n};\nexport class Particles {\n    constructor(engine, container) {\n        this._applyDensity = (options, manualCount, group) => {\n            if (!options.number.density?.enable) {\n                return;\n            }\n            const numberOptions = options.number, densityFactor = this._initDensityFactor(numberOptions.density), optParticlesNumber = numberOptions.value, optParticlesLimit = numberOptions.limit > 0 ? numberOptions.limit : optParticlesNumber, particlesNumber = Math.min(optParticlesNumber, optParticlesLimit) * densityFactor + manualCount, particlesCount = Math.min(this.count, this.filter((t) => t.group === group).length);\n            this.limit = numberOptions.limit * densityFactor;\n            if (particlesCount < particlesNumber) {\n                this.push(Math.abs(particlesNumber - particlesCount), undefined, options, group);\n            }\n            else if (particlesCount > particlesNumber) {\n                this.removeQuantity(particlesCount - particlesNumber, group);\n            }\n        };\n        this._initDensityFactor = (densityOptions) => {\n            const container = this._container;\n            if (!container.canvas.element || !densityOptions.enable) {\n                return 1;\n            }\n            const canvas = container.canvas.element, pxRatio = container.retina.pixelRatio;\n            return (canvas.width * canvas.height) / (densityOptions.factor * pxRatio ** 2 * densityOptions.area);\n        };\n        this._pushParticle = (position, overrideOptions, group, initializer) => {\n            try {\n                let particle = this.pool.pop();\n                if (particle) {\n                    particle.init(this._nextId, position, overrideOptions, group);\n                }\n                else {\n                    particle = new Particle(this._engine, this._nextId, this._container, position, overrideOptions, group);\n                }\n                let canAdd = true;\n                if (initializer) {\n                    canAdd = initializer(particle);\n                }\n                if (!canAdd) {\n                    return;\n                }\n                this._array.push(particle);\n                this._zArray.push(particle);\n                this._nextId++;\n                this._engine.dispatchEvent(\"particleAdded\", {\n                    container: this._container,\n                    data: {\n                        particle,\n                    },\n                });\n                return particle;\n            }\n            catch (e) {\n                getLogger().warning(`${errorPrefix} adding particle: ${e}`);\n                return;\n            }\n        };\n        this._removeParticle = (index, group, override) => {\n            const particle = this._array[index];\n            if (!particle || particle.group !== group) {\n                return false;\n            }\n            particle.destroy(override);\n            const zIdx = this._zArray.indexOf(particle);\n            this._array.splice(index, 1);\n            this._zArray.splice(zIdx, 1);\n            this.pool.push(particle);\n            this._engine.dispatchEvent(\"particleRemoved\", {\n                container: this._container,\n                data: {\n                    particle,\n                },\n            });\n            return true;\n        };\n        this._engine = engine;\n        this._container = container;\n        this._nextId = 0;\n        this._array = [];\n        this._zArray = [];\n        this.pool = [];\n        this.limit = 0;\n        this.needsSort = false;\n        this.lastZIndex = 0;\n        this._interactionManager = new InteractionManager(engine, container);\n        const canvasSize = container.canvas.size;\n        this.quadTree = new QuadTree(qTreeRectangle(canvasSize), qTreeCapacity);\n        this.movers = this._engine.plugins.getMovers(container, true);\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n    }\n    get count() {\n        return this._array.length;\n    }\n    addManualParticles() {\n        const container = this._container, options = container.actualOptions;\n        for (const particle of options.manualParticles) {\n            this.addParticle(particle.position ? getPosition(particle.position, container.canvas.size) : undefined, particle.options);\n        }\n    }\n    addParticle(position, overrideOptions, group, initializer) {\n        const container = this._container, options = container.actualOptions, limit = options.particles.number.limit;\n        if (limit > 0) {\n            const countToRemove = this.count + 1 - limit;\n            if (countToRemove > 0) {\n                this.removeQuantity(countToRemove);\n            }\n        }\n        return this._pushParticle(position, overrideOptions, group, initializer);\n    }\n    clear() {\n        this._array = [];\n        this._zArray = [];\n    }\n    destroy() {\n        this._array = [];\n        this._zArray = [];\n        this.movers = [];\n        this.updaters = [];\n    }\n    async draw(delta) {\n        const container = this._container;\n        container.canvas.clear();\n        await this.update(delta);\n        for (const [, plugin] of container.plugins) {\n            container.canvas.drawPlugin(plugin, delta);\n        }\n        for (const p of this._zArray) {\n            p.draw(delta);\n        }\n    }\n    filter(condition) {\n        return this._array.filter(condition);\n    }\n    find(condition) {\n        return this._array.find(condition);\n    }\n    handleClickMode(mode) {\n        this._interactionManager.handleClickMode(mode);\n    }\n    init() {\n        const container = this._container, options = container.actualOptions;\n        this.lastZIndex = 0;\n        this.needsSort = false;\n        let handled = false;\n        this.updaters = this._engine.plugins.getUpdaters(container, true);\n        this._interactionManager.init();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particlesInitialization !== undefined) {\n                handled = plugin.particlesInitialization();\n            }\n            if (handled) {\n                break;\n            }\n        }\n        this._interactionManager.init();\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.init(container);\n        }\n        this.addManualParticles();\n        if (!handled) {\n            for (const group in options.particles.groups) {\n                const groupOptions = options.particles.groups[group];\n                for (let i = this.count, j = 0; j < groupOptions.number?.value && i < options.particles.number.value; i++, j++) {\n                    this.addParticle(undefined, groupOptions, group);\n                }\n            }\n            for (let i = this.count; i < options.particles.number.value; i++) {\n                this.addParticle();\n            }\n        }\n    }\n    push(nb, mouse, overrideOptions, group) {\n        this.pushing = true;\n        for (let i = 0; i < nb; i++) {\n            this.addParticle(mouse?.position, overrideOptions, group);\n        }\n        this.pushing = false;\n    }\n    async redraw() {\n        this.clear();\n        this.init();\n        await this.draw({ value: 0, factor: 0 });\n    }\n    remove(particle, group, override) {\n        this.removeAt(this._array.indexOf(particle), undefined, group, override);\n    }\n    removeAt(index, quantity = 1, group, override) {\n        if (index < 0 || index > this.count) {\n            return;\n        }\n        let deleted = 0;\n        for (let i = index; deleted < quantity && i < this.count; i++) {\n            this._removeParticle(i--, group, override) && deleted++;\n        }\n    }\n    removeQuantity(quantity, group) {\n        this.removeAt(0, quantity, group);\n    }\n    setDensity() {\n        const options = this._container.actualOptions, groups = options.particles.groups;\n        for (const group in groups) {\n            this._applyDensity(groups[group], 0, group);\n        }\n        this._applyDensity(options.particles, options.manualParticles.length);\n    }\n    async update(delta) {\n        const container = this._container, particlesToDelete = new Set();\n        this.quadTree = new QuadTree(qTreeRectangle(container.canvas.size), qTreeCapacity);\n        for (const [, pathGenerator] of container.pathGenerators) {\n            pathGenerator.update();\n        }\n        for (const [, plugin] of container.plugins) {\n            plugin.update && plugin.update(delta);\n        }\n        for (const particle of this._array) {\n            const resizeFactor = container.canvas.resizeFactor;\n            if (resizeFactor && !particle.ignoresResizeRatio) {\n                particle.position.x *= resizeFactor.width;\n                particle.position.y *= resizeFactor.height;\n                particle.initialPosition.x *= resizeFactor.width;\n                particle.initialPosition.y *= resizeFactor.height;\n            }\n            particle.ignoresResizeRatio = false;\n            await this._interactionManager.reset(particle);\n            for (const [, plugin] of this._container.plugins) {\n                if (particle.destroyed) {\n                    break;\n                }\n                if (plugin.particleUpdate) {\n                    plugin.particleUpdate(particle, delta);\n                }\n            }\n            for (const mover of this.movers) {\n                mover.isEnabled(particle) && mover.move(particle, delta);\n            }\n            if (particle.destroyed) {\n                particlesToDelete.add(particle);\n                continue;\n            }\n            this.quadTree.insert(new Point(particle.getPosition(), particle));\n        }\n        if (particlesToDelete.size) {\n            const checkDelete = (p) => !particlesToDelete.has(p);\n            this._array = this.filter(checkDelete);\n            this._zArray = this._zArray.filter(checkDelete);\n            this.pool.push(...particlesToDelete);\n        }\n        await this._interactionManager.externalInteract(delta);\n        for (const particle of this._array) {\n            for (const updater of this.updaters) {\n                updater.update(particle, delta);\n            }\n            if (!particle.destroyed && !particle.spawning) {\n                await this._interactionManager.particlesInteract(particle, delta);\n            }\n        }\n        delete container.canvas.resizeFactor;\n        if (this.needsSort) {\n            const zArray = this._zArray;\n            zArray.sort((a, b) => b.position.z - a.position.z || a.id - b.id);\n            this.lastZIndex = zArray[zArray.length - 1].position.z;\n            this.needsSort = false;\n        }\n    }\n}\n","import { getRangeValue } from \"../Utils/NumberUtils\";\nimport { isSsr } from \"../Utils/Utils\";\nexport class Retina {\n    constructor(container) {\n        this.container = container;\n        this.pixelRatio = 1;\n        this.reduceFactor = 1;\n    }\n    init() {\n        const container = this.container, options = container.actualOptions;\n        this.pixelRatio = !options.detectRetina || isSsr() ? 1 : window.devicePixelRatio;\n        this.reduceFactor = 1;\n        const ratio = this.pixelRatio;\n        if (container.canvas.element) {\n            const element = container.canvas.element;\n            container.canvas.size.width = element.offsetWidth * ratio;\n            container.canvas.size.height = element.offsetHeight * ratio;\n        }\n        const particles = options.particles, moveOptions = particles.move;\n        this.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        this.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n        this.sizeAnimationSpeed = getRangeValue(particles.size.animation.speed) * ratio;\n    }\n    initParticle(particle) {\n        const options = particle.options, ratio = this.pixelRatio, moveOptions = options.move, moveDistance = moveOptions.distance, props = particle.retina;\n        props.attractDistance = getRangeValue(moveOptions.attract.distance) * ratio;\n        props.moveDrift = getRangeValue(moveOptions.drift) * ratio;\n        props.moveSpeed = getRangeValue(moveOptions.speed) * ratio;\n        props.sizeAnimationSpeed = getRangeValue(options.size.animation.speed) * ratio;\n        const maxDistance = props.maxDistance;\n        maxDistance.horizontal = moveDistance.horizontal !== undefined ? moveDistance.horizontal * ratio : undefined;\n        maxDistance.vertical = moveDistance.vertical !== undefined ? moveDistance.vertical * ratio : undefined;\n        props.maxSpeed = getRangeValue(moveOptions.gravity.maxSpeed) * ratio;\n    }\n}\n","import { getLogger, isFunction } from \"../Utils/Utils\";\nimport { Canvas } from \"./Canvas\";\nimport { EventListeners } from \"./Utils/EventListeners\";\nimport { Options } from \"../Options/Classes/Options\";\nimport { Particles } from \"./Particles\";\nimport { Retina } from \"./Retina\";\nimport { errorPrefix } from \"./Utils/Constants\";\nimport { getRangeValue } from \"../Utils/NumberUtils\";\nimport { loadOptions } from \"../Utils/OptionsUtils\";\nfunction guardCheck(container) {\n    return container && !container.destroyed;\n}\nfunction initDelta(value, fpsLimit = 60, smooth = false) {\n    return {\n        value,\n        factor: smooth ? 60 / fpsLimit : (60 * value) / 1000,\n    };\n}\nfunction loadContainerOptions(engine, container, ...sourceOptionsArr) {\n    const options = new Options(engine, container);\n    loadOptions(options, ...sourceOptionsArr);\n    return options;\n}\nconst defaultPathGeneratorKey = \"default\", defaultPathGenerator = {\n    generate: (p) => p.velocity,\n    init: () => {\n    },\n    update: () => {\n    },\n    reset: () => {\n    },\n};\nexport class Container {\n    constructor(engine, id, sourceOptions) {\n        this.id = id;\n        this._intersectionManager = (entries) => {\n            if (!guardCheck(this) || !this.actualOptions.pauseOnOutsideViewport) {\n                return;\n            }\n            for (const entry of entries) {\n                if (entry.target !== this.interactivity.element) {\n                    continue;\n                }\n                (entry.isIntersecting ? this.play : this.pause)();\n            }\n        };\n        this._nextFrame = async (timestamp) => {\n            try {\n                if (!this.smooth &&\n                    this.lastFrameTime !== undefined &&\n                    timestamp < this.lastFrameTime + 1000 / this.fpsLimit) {\n                    this.draw(false);\n                    return;\n                }\n                this.lastFrameTime ??= timestamp;\n                const delta = initDelta(timestamp - this.lastFrameTime, this.fpsLimit, this.smooth);\n                this.addLifeTime(delta.value);\n                this.lastFrameTime = timestamp;\n                if (delta.value > 1000) {\n                    this.draw(false);\n                    return;\n                }\n                await this.particles.draw(delta);\n                if (!this.alive()) {\n                    this.destroy();\n                    return;\n                }\n                if (this.getAnimationStatus()) {\n                    this.draw(false);\n                }\n            }\n            catch (e) {\n                getLogger().error(`${errorPrefix} in animation loop`, e);\n            }\n        };\n        this._engine = engine;\n        this.fpsLimit = 120;\n        this.smooth = false;\n        this._delay = 0;\n        this._duration = 0;\n        this._lifeTime = 0;\n        this._firstStart = true;\n        this.started = false;\n        this.destroyed = false;\n        this._paused = true;\n        this.lastFrameTime = 0;\n        this.zLayers = 100;\n        this.pageHidden = false;\n        this._sourceOptions = sourceOptions;\n        this._initialSourceOptions = sourceOptions;\n        this.retina = new Retina(this);\n        this.canvas = new Canvas(this);\n        this.particles = new Particles(this._engine, this);\n        this.pathGenerators = new Map();\n        this.interactivity = {\n            mouse: {\n                clicking: false,\n                inside: false,\n            },\n        };\n        this.plugins = new Map();\n        this.drawers = new Map();\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this);\n        this._eventListeners = new EventListeners(this);\n        if (typeof IntersectionObserver !== \"undefined\" && IntersectionObserver) {\n            this._intersectionObserver = new IntersectionObserver((entries) => this._intersectionManager(entries));\n        }\n        this._engine.dispatchEvent(\"containerBuilt\", { container: this });\n    }\n    get options() {\n        return this._options;\n    }\n    get sourceOptions() {\n        return this._sourceOptions;\n    }\n    addClickHandler(callback) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const el = this.interactivity.element;\n        if (!el) {\n            return;\n        }\n        const clickOrTouchHandler = (e, pos, radius) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const pxRatio = this.retina.pixelRatio, posRetina = {\n                x: pos.x * pxRatio,\n                y: pos.y * pxRatio,\n            }, particles = this.particles.quadTree.queryCircle(posRetina, radius * pxRatio);\n            callback(e, particles);\n        };\n        const clickHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            const mouseEvent = e, pos = {\n                x: mouseEvent.offsetX || mouseEvent.clientX,\n                y: mouseEvent.offsetY || mouseEvent.clientY,\n            };\n            clickOrTouchHandler(e, pos, 1);\n        };\n        const touchStartHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = true;\n            touchMoved = false;\n        };\n        const touchMoveHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touchMoved = true;\n        };\n        const touchEndHandler = (e) => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            if (touched && !touchMoved) {\n                const touchEvent = e;\n                let lastTouch = touchEvent.touches[touchEvent.touches.length - 1];\n                if (!lastTouch) {\n                    lastTouch = touchEvent.changedTouches[touchEvent.changedTouches.length - 1];\n                    if (!lastTouch) {\n                        return;\n                    }\n                }\n                const element = this.canvas.element, canvasRect = element ? element.getBoundingClientRect() : undefined, pos = {\n                    x: lastTouch.clientX - (canvasRect ? canvasRect.left : 0),\n                    y: lastTouch.clientY - (canvasRect ? canvasRect.top : 0),\n                };\n                clickOrTouchHandler(e, pos, Math.max(lastTouch.radiusX, lastTouch.radiusY));\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        const touchCancelHandler = () => {\n            if (!guardCheck(this)) {\n                return;\n            }\n            touched = false;\n            touchMoved = false;\n        };\n        let touched = false, touchMoved = false;\n        el.addEventListener(\"click\", clickHandler);\n        el.addEventListener(\"touchstart\", touchStartHandler);\n        el.addEventListener(\"touchmove\", touchMoveHandler);\n        el.addEventListener(\"touchend\", touchEndHandler);\n        el.addEventListener(\"touchcancel\", touchCancelHandler);\n    }\n    addLifeTime(value) {\n        this._lifeTime += value;\n    }\n    addPath(key, generator, override = false) {\n        if (!guardCheck(this) || (!override && this.pathGenerators.has(key))) {\n            return false;\n        }\n        this.pathGenerators.set(key, generator ?? defaultPathGenerator);\n        return true;\n    }\n    alive() {\n        return !this._duration || this._lifeTime <= this._duration;\n    }\n    destroy() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        this.particles.destroy();\n        this.canvas.destroy();\n        for (const [, drawer] of this.drawers) {\n            drawer.destroy && drawer.destroy(this);\n        }\n        for (const key of this.drawers.keys()) {\n            this.drawers.delete(key);\n        }\n        this._engine.plugins.destroy(this);\n        this.destroyed = true;\n        const mainArr = this._engine.dom(), idx = mainArr.findIndex((t) => t === this);\n        if (idx >= 0) {\n            mainArr.splice(idx, 1);\n        }\n        this._engine.dispatchEvent(\"containerDestroyed\", { container: this });\n    }\n    draw(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        let refreshTime = force;\n        this._drawAnimationFrame = requestAnimationFrame(async (timestamp) => {\n            if (refreshTime) {\n                this.lastFrameTime = undefined;\n                refreshTime = false;\n            }\n            await this._nextFrame(timestamp);\n        });\n    }\n    async export(type, options = {}) {\n        for (const [, plugin] of this.plugins) {\n            if (!plugin.export) {\n                continue;\n            }\n            const res = await plugin.export(type, options);\n            if (!res.supported) {\n                continue;\n            }\n            return res.blob;\n        }\n        getLogger().error(`${errorPrefix} - Export plugin with type ${type} not found`);\n    }\n    getAnimationStatus() {\n        return !this._paused && !this.pageHidden && guardCheck(this);\n    }\n    handleClickMode(mode) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.particles.handleClickMode(mode);\n        for (const [, plugin] of this.plugins) {\n            plugin.handleClickMode && plugin.handleClickMode(mode);\n        }\n    }\n    async init() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const shapes = this._engine.plugins.getSupportedShapes();\n        for (const type of shapes) {\n            const drawer = this._engine.plugins.getShapeDrawer(type);\n            if (drawer) {\n                this.drawers.set(type, drawer);\n            }\n        }\n        this._options = loadContainerOptions(this._engine, this, this._initialSourceOptions, this.sourceOptions);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        const availablePlugins = this._engine.plugins.getAvailablePlugins(this);\n        for (const [id, plugin] of availablePlugins) {\n            this.plugins.set(id, plugin);\n        }\n        this.retina.init();\n        await this.canvas.init();\n        this.updateActualOptions();\n        this.canvas.initBackground();\n        this.canvas.resize();\n        this.zLayers = this.actualOptions.zLayers;\n        this._duration = getRangeValue(this.actualOptions.duration) * 1000;\n        this._delay = getRangeValue(this.actualOptions.delay) * 1000;\n        this._lifeTime = 0;\n        this.fpsLimit = this.actualOptions.fpsLimit > 0 ? this.actualOptions.fpsLimit : 120;\n        this.smooth = this.actualOptions.smooth;\n        for (const [, drawer] of this.drawers) {\n            drawer.init && (await drawer.init(this));\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.init && (await plugin.init());\n        }\n        this._engine.dispatchEvent(\"containerInit\", { container: this });\n        this.particles.init();\n        this.particles.setDensity();\n        for (const [, plugin] of this.plugins) {\n            plugin.particlesSetup && plugin.particlesSetup();\n        }\n        this._engine.dispatchEvent(\"particlesSetup\", { container: this });\n    }\n    async loadTheme(name) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._currentTheme = name;\n        await this.refresh();\n    }\n    pause() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        if (this._drawAnimationFrame !== undefined) {\n            cancelAnimationFrame(this._drawAnimationFrame);\n            delete this._drawAnimationFrame;\n        }\n        if (this._paused) {\n            return;\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.pause && plugin.pause();\n        }\n        if (!this.pageHidden) {\n            this._paused = true;\n        }\n        this._engine.dispatchEvent(\"containerPaused\", { container: this });\n    }\n    play(force) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        const needsUpdate = this._paused || force;\n        if (this._firstStart && !this.actualOptions.autoPlay) {\n            this._firstStart = false;\n            return;\n        }\n        if (this._paused) {\n            this._paused = false;\n        }\n        if (needsUpdate) {\n            for (const [, plugin] of this.plugins) {\n                if (plugin.play) {\n                    plugin.play();\n                }\n            }\n        }\n        this._engine.dispatchEvent(\"containerPlay\", { container: this });\n        this.draw(needsUpdate || false);\n    }\n    async refresh() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.stop();\n        return this.start();\n    }\n    async reset() {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this._initialSourceOptions = undefined;\n        this._options = loadContainerOptions(this._engine, this);\n        this.actualOptions = loadContainerOptions(this._engine, this, this._options);\n        return this.refresh();\n    }\n    setNoise(noiseOrGenerator, init, update) {\n        if (!guardCheck(this)) {\n            return;\n        }\n        this.setPath(noiseOrGenerator, init, update);\n    }\n    setPath(pathOrGenerator, init, update) {\n        if (!pathOrGenerator || !guardCheck(this)) {\n            return;\n        }\n        const pathGenerator = { ...defaultPathGenerator };\n        if (isFunction(pathOrGenerator)) {\n            pathGenerator.generate = pathOrGenerator;\n            if (init) {\n                pathGenerator.init = init;\n            }\n            if (update) {\n                pathGenerator.update = update;\n            }\n        }\n        else {\n            const oldGenerator = pathGenerator;\n            pathGenerator.generate = pathOrGenerator.generate || oldGenerator.generate;\n            pathGenerator.init = pathOrGenerator.init || oldGenerator.init;\n            pathGenerator.update = pathOrGenerator.update || oldGenerator.update;\n        }\n        this.addPath(defaultPathGeneratorKey, pathGenerator, true);\n    }\n    async start() {\n        if (!guardCheck(this) || this.started) {\n            return;\n        }\n        await this.init();\n        this.started = true;\n        await new Promise((resolve) => {\n            this._delayTimeout = setTimeout(async () => {\n                this._eventListeners.addListeners();\n                if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n                    this._intersectionObserver.observe(this.interactivity.element);\n                }\n                for (const [, plugin] of this.plugins) {\n                    plugin.start && (await plugin.start());\n                }\n                this._engine.dispatchEvent(\"containerStarted\", { container: this });\n                this.play();\n                resolve();\n            }, this._delay);\n        });\n    }\n    stop() {\n        if (!guardCheck(this) || !this.started) {\n            return;\n        }\n        if (this._delayTimeout) {\n            clearTimeout(this._delayTimeout);\n            delete this._delayTimeout;\n        }\n        this._firstStart = true;\n        this.started = false;\n        this._eventListeners.removeListeners();\n        this.pause();\n        this.particles.clear();\n        this.canvas.stop();\n        if (this.interactivity.element instanceof HTMLElement && this._intersectionObserver) {\n            this._intersectionObserver.unobserve(this.interactivity.element);\n        }\n        for (const [, plugin] of this.plugins) {\n            plugin.stop && plugin.stop();\n        }\n        for (const key of this.plugins.keys()) {\n            this.plugins.delete(key);\n        }\n        this._sourceOptions = this._options;\n        this._engine.dispatchEvent(\"containerStopped\", { container: this });\n    }\n    updateActualOptions() {\n        this.actualOptions.responsive = [];\n        const newMaxWidth = this.actualOptions.setResponsive(this.canvas.size.width, this.retina.pixelRatio, this._options);\n        this.actualOptions.setTheme(this._currentTheme);\n        if (this.responsiveMaxWidth === newMaxWidth) {\n            return false;\n        }\n        this.responsiveMaxWidth = newMaxWidth;\n        return true;\n    }\n}\n","export class EventDispatcher {\n    constructor() {\n        this._listeners = new Map();\n    }\n    addEventListener(type, listener) {\n        this.removeEventListener(type, listener);\n        let arr = this._listeners.get(type);\n        if (!arr) {\n            arr = [];\n            this._listeners.set(type, arr);\n        }\n        arr.push(listener);\n    }\n    dispatchEvent(type, args) {\n        const listeners = this._listeners.get(type);\n        listeners && listeners.forEach((handler) => handler(args));\n    }\n    hasEventListener(type) {\n        return !!this._listeners.get(type);\n    }\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = new Map();\n        }\n        else {\n            this._listeners.delete(type);\n        }\n    }\n    removeEventListener(type, listener) {\n        const arr = this._listeners.get(type);\n        if (!arr) {\n            return;\n        }\n        const length = arr.length, idx = arr.indexOf(listener);\n        if (idx < 0) {\n            return;\n        }\n        if (length === 1) {\n            this._listeners.delete(type);\n        }\n        else {\n            arr.splice(idx, 1);\n        }\n    }\n}\n","import { executeOnSingleOrMultiple } from \"../../Utils/Utils\";\nfunction getItemsFromInitializer(container, map, initializers, force = false) {\n    let res = map.get(container);\n    if (!res || force) {\n        res = [...initializers.values()].map((t) => t(container));\n        map.set(container, res);\n    }\n    return res;\n}\nexport class Plugins {\n    constructor(engine) {\n        this._engine = engine;\n        this.plugins = [];\n        this._initializers = {\n            interactors: new Map(),\n            movers: new Map(),\n            updaters: new Map(),\n        };\n        this.interactors = new Map();\n        this.movers = new Map();\n        this.updaters = new Map();\n        this.presets = new Map();\n        this.drawers = new Map();\n        this.pathGenerators = new Map();\n    }\n    addInteractor(name, initInteractor) {\n        this._initializers.interactors.set(name, initInteractor);\n    }\n    addParticleMover(name, initMover) {\n        this._initializers.movers.set(name, initMover);\n    }\n    addParticleUpdater(name, initUpdater) {\n        this._initializers.updaters.set(name, initUpdater);\n    }\n    addPathGenerator(type, pathGenerator) {\n        !this.getPathGenerator(type) && this.pathGenerators.set(type, pathGenerator);\n    }\n    addPlugin(plugin) {\n        !this.getPlugin(plugin.id) && this.plugins.push(plugin);\n    }\n    addPreset(presetKey, options, override = false) {\n        (override || !this.getPreset(presetKey)) && this.presets.set(presetKey, options);\n    }\n    addShapeDrawer(types, drawer) {\n        executeOnSingleOrMultiple(types, (type) => {\n            !this.getShapeDrawer(type) && this.drawers.set(type, drawer);\n        });\n    }\n    destroy(container) {\n        this.updaters.delete(container);\n        this.movers.delete(container);\n        this.interactors.delete(container);\n    }\n    getAvailablePlugins(container) {\n        const res = new Map();\n        for (const plugin of this.plugins) {\n            plugin.needsPlugin(container.actualOptions) && res.set(plugin.id, plugin.getPlugin(container));\n        }\n        return res;\n    }\n    getInteractors(container, force = false) {\n        return getItemsFromInitializer(container, this.interactors, this._initializers.interactors, force);\n    }\n    getMovers(container, force = false) {\n        return getItemsFromInitializer(container, this.movers, this._initializers.movers, force);\n    }\n    getPathGenerator(type) {\n        return this.pathGenerators.get(type);\n    }\n    getPlugin(plugin) {\n        return this.plugins.find((t) => t.id === plugin);\n    }\n    getPreset(preset) {\n        return this.presets.get(preset);\n    }\n    getShapeDrawer(type) {\n        return this.drawers.get(type);\n    }\n    getSupportedShapes() {\n        return this.drawers.keys();\n    }\n    getUpdaters(container, force = false) {\n        return getItemsFromInitializer(container, this.updaters, this._initializers.updaters, force);\n    }\n    loadOptions(options, sourceOptions) {\n        for (const plugin of this.plugins) {\n            plugin.loadOptions(options, sourceOptions);\n        }\n    }\n    loadParticlesOptions(container, options, ...sourceOptions) {\n        const updaters = this.updaters.get(container);\n        if (!updaters) {\n            return;\n        }\n        for (const updater of updaters) {\n            updater.loadOptions && updater.loadOptions(options, ...sourceOptions);\n        }\n    }\n}\n","import { errorPrefix, generatedAttribute } from \"./Utils/Constants\";\nimport { getLogger, isBoolean, isFunction, isNumber, isString, itemFromSingleOrMultiple } from \"../Utils/Utils\";\nimport { Container } from \"./Container\";\nimport { EventDispatcher } from \"../Utils/EventDispatcher\";\nimport { Plugins } from \"./Utils/Plugins\";\nimport { getRandom } from \"../Utils/NumberUtils\";\nasync function getDataFromUrl(data) {\n    const url = itemFromSingleOrMultiple(data.url, data.index);\n    if (!url) {\n        return data.fallback;\n    }\n    const response = await fetch(url);\n    if (response.ok) {\n        return response.json();\n    }\n    getLogger().error(`${errorPrefix} ${response.status} while retrieving config file`);\n    return data.fallback;\n}\nfunction isParamsEmpty(params) {\n    return !params.id && !params.element && !params.url && !params.options;\n}\nfunction isParams(obj) {\n    return !isParamsEmpty(obj);\n}\nexport class Engine {\n    constructor() {\n        this._configs = new Map();\n        this._domArray = [];\n        this._eventDispatcher = new EventDispatcher();\n        this._initialized = false;\n        this.plugins = new Plugins(this);\n    }\n    get configs() {\n        const res = {};\n        for (const [name, config] of this._configs) {\n            res[name] = config;\n        }\n        return res;\n    }\n    get version() {\n        return \"2.12.0\";\n    }\n    addConfig(nameOrConfig, config) {\n        if (isString(nameOrConfig)) {\n            if (config) {\n                config.name = nameOrConfig;\n                this._configs.set(nameOrConfig, config);\n            }\n        }\n        else {\n            this._configs.set(nameOrConfig.name ?? \"default\", nameOrConfig);\n        }\n    }\n    addEventListener(type, listener) {\n        this._eventDispatcher.addEventListener(type, listener);\n    }\n    async addInteractor(name, interactorInitializer, refresh = true) {\n        this.plugins.addInteractor(name, interactorInitializer);\n        await this.refresh(refresh);\n    }\n    async addMover(name, moverInitializer, refresh = true) {\n        this.plugins.addParticleMover(name, moverInitializer);\n        await this.refresh(refresh);\n    }\n    async addParticleUpdater(name, updaterInitializer, refresh = true) {\n        this.plugins.addParticleUpdater(name, updaterInitializer);\n        await this.refresh(refresh);\n    }\n    async addPathGenerator(name, generator, refresh = true) {\n        this.plugins.addPathGenerator(name, generator);\n        await this.refresh(refresh);\n    }\n    async addPlugin(plugin, refresh = true) {\n        this.plugins.addPlugin(plugin);\n        await this.refresh(refresh);\n    }\n    async addPreset(preset, options, override = false, refresh = true) {\n        this.plugins.addPreset(preset, options, override);\n        await this.refresh(refresh);\n    }\n    async addShape(shape, drawer, initOrRefresh, afterEffectOrRefresh, destroyOrRefresh, refresh = true) {\n        let customDrawer;\n        let realRefresh = refresh, realInit, realAfterEffect, realDestroy;\n        if (isBoolean(initOrRefresh)) {\n            realRefresh = initOrRefresh;\n            realInit = undefined;\n        }\n        else {\n            realInit = initOrRefresh;\n        }\n        if (isBoolean(afterEffectOrRefresh)) {\n            realRefresh = afterEffectOrRefresh;\n            realAfterEffect = undefined;\n        }\n        else {\n            realAfterEffect = afterEffectOrRefresh;\n        }\n        if (isBoolean(destroyOrRefresh)) {\n            realRefresh = destroyOrRefresh;\n            realDestroy = undefined;\n        }\n        else {\n            realDestroy = destroyOrRefresh;\n        }\n        if (isFunction(drawer)) {\n            customDrawer = {\n                afterEffect: realAfterEffect,\n                destroy: realDestroy,\n                draw: drawer,\n                init: realInit,\n            };\n        }\n        else {\n            customDrawer = drawer;\n        }\n        this.plugins.addShapeDrawer(shape, customDrawer);\n        await this.refresh(realRefresh);\n    }\n    dispatchEvent(type, args) {\n        this._eventDispatcher.dispatchEvent(type, args);\n    }\n    dom() {\n        return this._domArray;\n    }\n    domItem(index) {\n        const dom = this.dom(), item = dom[index];\n        if (!item || item.destroyed) {\n            dom.splice(index, 1);\n            return;\n        }\n        return item;\n    }\n    init() {\n        if (this._initialized) {\n            return;\n        }\n        this._initialized = true;\n    }\n    async load(tagIdOrOptionsOrParams, options) {\n        return this.loadFromArray(tagIdOrOptionsOrParams, options);\n    }\n    async loadFromArray(tagIdOrOptionsOrParams, optionsOrIndex, index) {\n        let params;\n        if (!isParams(tagIdOrOptionsOrParams)) {\n            params = {};\n            if (isString(tagIdOrOptionsOrParams)) {\n                params.id = tagIdOrOptionsOrParams;\n            }\n            else {\n                params.options = tagIdOrOptionsOrParams;\n            }\n            if (isNumber(optionsOrIndex)) {\n                params.index = optionsOrIndex;\n            }\n            else {\n                params.options = optionsOrIndex ?? params.options;\n            }\n            params.index = index ?? params.index;\n        }\n        else {\n            params = tagIdOrOptionsOrParams;\n        }\n        return this._loadParams(params);\n    }\n    async loadJSON(tagId, pathConfigJson, index) {\n        let url, id;\n        if (isNumber(pathConfigJson) || pathConfigJson === undefined) {\n            url = tagId;\n        }\n        else {\n            id = tagId;\n            url = pathConfigJson;\n        }\n        return this._loadParams({ id: id, url, index });\n    }\n    async refresh(refresh = true) {\n        if (!refresh) {\n            return;\n        }\n        this.dom().forEach((t) => t.refresh());\n    }\n    removeEventListener(type, listener) {\n        this._eventDispatcher.removeEventListener(type, listener);\n    }\n    async set(id, element, options, index) {\n        const params = { index };\n        if (isString(id)) {\n            params.id = id;\n        }\n        else {\n            params.element = id;\n        }\n        if (element instanceof HTMLElement) {\n            params.element = element;\n        }\n        else {\n            params.options = element;\n        }\n        if (isNumber(options)) {\n            params.index = options;\n        }\n        else {\n            params.options = options ?? params.options;\n        }\n        return this._loadParams(params);\n    }\n    async setJSON(id, element, pathConfigJson, index) {\n        const params = {};\n        if (id instanceof HTMLElement) {\n            params.element = id;\n            params.url = element;\n            params.index = pathConfigJson;\n        }\n        else {\n            params.id = id;\n            params.element = element;\n            params.url = pathConfigJson;\n            params.index = index;\n        }\n        return this._loadParams(params);\n    }\n    setOnClickHandler(callback) {\n        const dom = this.dom();\n        if (!dom.length) {\n            throw new Error(`${errorPrefix} can only set click handlers after calling tsParticles.load()`);\n        }\n        for (const domItem of dom) {\n            domItem.addClickHandler(callback);\n        }\n    }\n    async _loadParams(params) {\n        const id = params.id ?? `tsparticles${Math.floor(getRandom() * 10000)}`, { index, url } = params, options = url ? await getDataFromUrl({ fallback: params.options, url, index }) : params.options;\n        let domContainer = params.element ?? document.getElementById(id);\n        if (!domContainer) {\n            domContainer = document.createElement(\"div\");\n            domContainer.id = id;\n            document.body.append(domContainer);\n        }\n        const currentOptions = itemFromSingleOrMultiple(options, index), dom = this.dom(), oldIndex = dom.findIndex((v) => v.id === id);\n        if (oldIndex >= 0) {\n            const old = this.domItem(oldIndex);\n            if (old && !old.destroyed) {\n                old.destroy();\n                dom.splice(oldIndex, 1);\n            }\n        }\n        let canvasEl;\n        if (domContainer.tagName.toLowerCase() === \"canvas\") {\n            canvasEl = domContainer;\n            canvasEl.dataset[generatedAttribute] = \"false\";\n        }\n        else {\n            const existingCanvases = domContainer.getElementsByTagName(\"canvas\");\n            if (existingCanvases.length) {\n                canvasEl = existingCanvases[0];\n                canvasEl.dataset[generatedAttribute] = \"false\";\n            }\n            else {\n                canvasEl = document.createElement(\"canvas\");\n                canvasEl.dataset[generatedAttribute] = \"true\";\n                domContainer.appendChild(canvasEl);\n            }\n        }\n        if (!canvasEl.style.width) {\n            canvasEl.style.width = \"100%\";\n        }\n        if (!canvasEl.style.height) {\n            canvasEl.style.height = \"100%\";\n        }\n        const newItem = new Container(this, id, currentOptions);\n        if (oldIndex >= 0) {\n            dom.splice(oldIndex, 0, newItem);\n        }\n        else {\n            dom.push(newItem);\n        }\n        newItem.canvas.loadCanvas(canvasEl);\n        await newItem.start();\n        return newItem;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nimport { hslToRgb, hslaToRgba } from \"./ColorUtils\";\nexport class HslColorManager {\n    constructor() {\n        this.key = \"hsl\";\n        this.stringPrefix = \"hsl\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.s !== undefined && hslColor.l !== undefined) {\n            return hslToRgb(hslColor);\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, hslColor = colorValue.hsl ?? color.value;\n        if (hslColor.h !== undefined && hslColor.l !== undefined) {\n            return hslToRgb({\n                h: getRangeValue(hslColor.h),\n                l: getRangeValue(hslColor.l),\n                s: getRangeValue(hslColor.s),\n            });\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(\"hsl\")) {\n            return;\n        }\n        const regex = /hsla?\\(\\s*(\\d+)\\s*,\\s*(\\d+)%\\s*,\\s*(\\d+)%\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? hslaToRgba({\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                h: parseInt(result[1], 10),\n                l: parseInt(result[3], 10),\n                s: parseInt(result[2], 10),\n            })\n            : undefined;\n    }\n}\n","import { getRangeValue, parseAlpha } from \"./NumberUtils\";\nexport class RgbColorManager {\n    constructor() {\n        this.key = \"rgb\";\n        this.stringPrefix = \"rgb\";\n    }\n    handleColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return rgbColor;\n        }\n    }\n    handleRangeColor(color) {\n        const colorValue = color.value, rgbColor = colorValue.rgb ?? color.value;\n        if (rgbColor.r !== undefined) {\n            return {\n                r: getRangeValue(rgbColor.r),\n                g: getRangeValue(rgbColor.g),\n                b: getRangeValue(rgbColor.b),\n            };\n        }\n    }\n    parseString(input) {\n        if (!input.startsWith(this.stringPrefix)) {\n            return;\n        }\n        const regex = /rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([\\d.%]+)\\s*)?\\)/i, result = regex.exec(input);\n        return result\n            ? {\n                a: result.length > 4 ? parseAlpha(result[5]) : 1,\n                b: parseInt(result[3], 10),\n                g: parseInt(result[2], 10),\n                r: parseInt(result[1], 10),\n            }\n            : undefined;\n    }\n}\n","import { init } from \"./init\";\nimport { isSsr } from \"./Utils/Utils\";\nconst tsParticles = init();\nif (!isSsr()) {\n    window.tsParticles = tsParticles;\n}\nexport * from \"./exports\";\nexport * from \"./export-types\";\nexport { tsParticles };\n","import { Engine } from \"./Core/Engine\";\nimport { HslColorManager } from \"./Utils/HslColorManager\";\nimport { RgbColorManager } from \"./Utils/RgbColorManager\";\nimport { addColorManager } from \"./Utils/ColorUtils\";\nexport function init() {\n    const rgbColorManager = new RgbColorManager(), hslColorManager = new HslColorManager();\n    addColorManager(rgbColorManager);\n    addColorManager(hslColorManager);\n    const engine = new Engine();\n    engine.init();\n    return engine;\n}\n","import React, { Component } from \"react\";\nimport { tsParticles } from \"tsparticles-engine\";\nimport equal from \"fast-deep-equal/react\";\nconst defaultId = \"tsparticles\";\nexport default class Particles extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            init: false,\n            library: undefined,\n        };\n    }\n    destroy() {\n        if (!this.state.library) {\n            return;\n        }\n        this.state.library.destroy();\n        this.setState({\n            library: undefined,\n        });\n    }\n    shouldComponentUpdate(nextProps) {\n        return !equal(nextProps, this.props);\n    }\n    componentDidUpdate() {\n        this.refresh();\n    }\n    forceUpdate() {\n        this.refresh().then(() => {\n            super.forceUpdate();\n        });\n    }\n    componentDidMount() {\n        (async () => {\n            if (this.props.init) {\n                await this.props.init(tsParticles);\n            }\n            this.setState({\n                init: true,\n            }, async () => {\n                await this.loadParticles();\n            });\n        })();\n    }\n    componentWillUnmount() {\n        this.destroy();\n    }\n    render() {\n        const { width, height, className, canvasClassName, id } = this.props;\n        return (React.createElement(\"div\", { className: className, id: id },\n            React.createElement(\"canvas\", { className: canvasClassName, style: Object.assign(Object.assign({}, this.props.style), { width,\n                    height }) })));\n    }\n    async refresh() {\n        this.destroy();\n        await this.loadParticles();\n    }\n    async loadParticles() {\n        var _a, _b, _c;\n        if (!this.state.init) {\n            return;\n        }\n        const cb = async (container) => {\n            if (this.props.container) {\n                this.props.container.current = container;\n            }\n            this.setState({\n                library: container,\n            });\n            if (this.props.loaded) {\n                await this.props.loaded(container);\n            }\n        };\n        const id = (_b = (_a = this.props.id) !== null && _a !== void 0 ? _a : Particles.defaultProps.id) !== null && _b !== void 0 ? _b : defaultId, container = this.props.url\n            ? await tsParticles.loadJSON(id, this.props.url)\n            : await tsParticles.load(id, (_c = this.props.params) !== null && _c !== void 0 ? _c : this.props.options);\n        await cb(container);\n    }\n}\nParticles.defaultProps = {\n    width: \"100%\",\n    height: \"100%\",\n    options: {},\n    style: {},\n    url: undefined,\n    id: defaultId,\n};\n","import Particles from \"./Particles\";\nexport default Particles;\nexport { Particles };\n","export class AbsorberSizeLimit {\n    constructor() {\n        this.radius = 0;\n        this.mass = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mass !== undefined) {\n            this.mass = data.mass;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ValueWithRandom, isNumber } from \"tsparticles-engine\";\nimport { AbsorberSizeLimit } from \"./AbsorberSizeLimit\";\nexport class AbsorberSize extends ValueWithRandom {\n    constructor() {\n        super();\n        this.density = 5;\n        this.value = 50;\n        this.limit = new AbsorberSizeLimit();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.density !== undefined) {\n            this.density = data.density;\n        }\n        if (isNumber(data.limit)) {\n            this.limit.radius = data.limit;\n        }\n        else {\n            this.limit.load(data.limit);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { AbsorberSize } from \"./AbsorberSize\";\nexport class Absorber {\n    constructor() {\n        this.color = new OptionsColor();\n        this.color.value = \"#000000\";\n        this.draggable = false;\n        this.opacity = 1;\n        this.destroy = true;\n        this.orbits = false;\n        this.size = new AbsorberSize();\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.draggable !== undefined) {\n            this.draggable = data.draggable;\n        }\n        this.name = data.name;\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.size !== undefined) {\n            this.size.load(data.size);\n        }\n        if (data.destroy !== undefined) {\n            this.destroy = data.destroy;\n        }\n        if (data.orbits !== undefined) {\n            this.orbits = data.orbits;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSize, calcPositionOrRandomFromSizeRanged, getDistance, getDistances, getRandom, getRangeValue, getStyleFromRgb, isPointInside, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nexport class AbsorberInstance {\n    constructor(absorbers, container, options, position) {\n        this.absorbers = absorbers;\n        this.container = container;\n        this._calcPosition = () => {\n            const exactPosition = calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n            return Vector.create(exactPosition.x, exactPosition.y);\n        };\n        this._updateParticlePosition = (particle, v) => {\n            if (particle.destroyed) {\n                return;\n            }\n            const container = this.container, canvasSize = container.canvas.size;\n            if (particle.needsNewPosition) {\n                const newPosition = calcPositionOrRandomFromSize({ size: canvasSize });\n                particle.position.setTo(newPosition);\n                particle.velocity.setTo(particle.initialVelocity);\n                particle.absorberOrbit = undefined;\n                particle.needsNewPosition = false;\n            }\n            if (this.options.orbits) {\n                if (particle.absorberOrbit === undefined) {\n                    particle.absorberOrbit = Vector.create(0, 0);\n                    particle.absorberOrbit.length = getDistance(particle.getPosition(), this.position);\n                    particle.absorberOrbit.angle = getRandom() * Math.PI * 2;\n                }\n                if (particle.absorberOrbit.length <= this.size && !this.options.destroy) {\n                    const minSize = Math.min(canvasSize.width, canvasSize.height);\n                    particle.absorberOrbit.length = minSize * (1 + (getRandom() * 0.2 - 0.1));\n                }\n                if (particle.absorberOrbitDirection === undefined) {\n                    particle.absorberOrbitDirection =\n                        particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\";\n                }\n                const orbitRadius = particle.absorberOrbit.length, orbitAngle = particle.absorberOrbit.angle, orbitDirection = particle.absorberOrbitDirection;\n                particle.velocity.setTo(Vector.origin);\n                const updateFunc = {\n                    x: orbitDirection === \"clockwise\" ? Math.cos : Math.sin,\n                    y: orbitDirection === \"clockwise\" ? Math.sin : Math.cos,\n                };\n                particle.position.x = this.position.x + orbitRadius * updateFunc.x(orbitAngle);\n                particle.position.y = this.position.y + orbitRadius * updateFunc.y(orbitAngle);\n                particle.absorberOrbit.length -= v.length;\n                particle.absorberOrbit.angle +=\n                    (((particle.retina.moveSpeed ?? 0) * container.retina.pixelRatio) / 100) *\n                        container.retina.reduceFactor;\n            }\n            else {\n                const addV = Vector.origin;\n                addV.length = v.length;\n                addV.angle = v.angle;\n                particle.velocity.addTo(addV);\n            }\n        };\n        this.initialPosition = position ? Vector.create(position.x, position.y) : undefined;\n        if (options instanceof Absorber) {\n            this.options = options;\n        }\n        else {\n            this.options = new Absorber();\n            this.options.load(options);\n        }\n        this.dragging = false;\n        this.name = this.options.name;\n        this.opacity = this.options.opacity;\n        this.size = getRangeValue(this.options.size.value) * container.retina.pixelRatio;\n        this.mass = this.size * this.options.size.density * container.retina.reduceFactor;\n        const limit = this.options.size.limit;\n        this.limit = {\n            radius: limit.radius * container.retina.pixelRatio * container.retina.reduceFactor,\n            mass: limit.mass,\n        };\n        this.color = rangeColorToRgb(this.options.color) ?? {\n            b: 0,\n            g: 0,\n            r: 0,\n        };\n        this.position = this.initialPosition?.copy() ?? this._calcPosition();\n    }\n    attract(particle) {\n        const container = this.container, options = this.options;\n        if (options.draggable) {\n            const mouse = container.interactivity.mouse;\n            if (mouse.clicking && mouse.downPosition) {\n                const mouseDist = getDistance(this.position, mouse.downPosition);\n                if (mouseDist <= this.size) {\n                    this.dragging = true;\n                }\n            }\n            else {\n                this.dragging = false;\n            }\n            if (this.dragging && mouse.position) {\n                this.position.x = mouse.position.x;\n                this.position.y = mouse.position.y;\n            }\n        }\n        const pos = particle.getPosition(), { dx, dy, distance } = getDistances(this.position, pos), v = Vector.create(dx, dy);\n        v.length = (this.mass / Math.pow(distance, 2)) * container.retina.reduceFactor;\n        if (distance < this.size + particle.getRadius()) {\n            const sizeFactor = particle.getRadius() * 0.033 * container.retina.pixelRatio;\n            if ((this.size > particle.getRadius() && distance < this.size - particle.getRadius()) ||\n                (particle.absorberOrbit !== undefined && particle.absorberOrbit.length < 0)) {\n                if (options.destroy) {\n                    particle.destroy();\n                }\n                else {\n                    particle.needsNewPosition = true;\n                    this._updateParticlePosition(particle, v);\n                }\n            }\n            else {\n                if (options.destroy) {\n                    particle.size.value -= sizeFactor;\n                }\n                this._updateParticlePosition(particle, v);\n            }\n            if (this.limit.radius <= 0 || this.size < this.limit.radius) {\n                this.size += sizeFactor;\n            }\n            if (this.limit.mass <= 0 || this.mass < this.limit.mass) {\n                this.mass += sizeFactor * this.options.size.density * container.retina.reduceFactor;\n            }\n        }\n        else {\n            this._updateParticlePosition(particle, v);\n        }\n    }\n    draw(context) {\n        context.translate(this.position.x, this.position.y);\n        context.beginPath();\n        context.arc(0, 0, this.size, 0, Math.PI * 2, false);\n        context.closePath();\n        context.fillStyle = getStyleFromRgb(this.color, this.opacity);\n        context.fill();\n    }\n    resize() {\n        const initialPosition = this.initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n}\n","import { executeOnSingleOrMultiple, isNumber, itemFromSingleOrMultiple, } from \"tsparticles-engine\";\nimport { AbsorberInstance } from \"./AbsorberInstance\";\nexport class Absorbers {\n    constructor(container) {\n        this.container = container;\n        this.array = [];\n        this.absorbers = [];\n        this.interactivityAbsorbers = [];\n        container.getAbsorber = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addAbsorber = (options, position) => this.addAbsorber(options, position);\n    }\n    addAbsorber(options, position) {\n        const absorber = new AbsorberInstance(this, this.container, options, position);\n        this.array.push(absorber);\n        return absorber;\n    }\n    draw(context) {\n        for (const absorber of this.array) {\n            absorber.draw(context);\n        }\n    }\n    handleClickMode(mode) {\n        const absorberOptions = this.absorbers, modeAbsorbers = this.interactivityAbsorbers;\n        if (mode === \"absorber\") {\n            const absorbersModeOptions = itemFromSingleOrMultiple(modeAbsorbers), absorbersOptions = absorbersModeOptions ?? itemFromSingleOrMultiple(absorberOptions), aPosition = this.container.interactivity.mouse.clickPosition;\n            this.addAbsorber(absorbersOptions, aPosition);\n        }\n    }\n    async init() {\n        this.absorbers = this.container.actualOptions.absorbers;\n        this.interactivityAbsorbers = this.container.actualOptions.interactivity.modes.absorbers;\n        executeOnSingleOrMultiple(this.absorbers, (absorber) => {\n            this.addAbsorber(absorber);\n        });\n    }\n    particleUpdate(particle) {\n        for (const absorber of this.array) {\n            absorber.attract(particle);\n            if (particle.destroyed) {\n                break;\n            }\n        }\n    }\n    removeAbsorber(absorber) {\n        const index = this.array.indexOf(absorber);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const absorber of this.array) {\n            absorber.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { Absorber } from \"./Options/Classes/Absorber\";\nimport { Absorbers } from \"./Absorbers\";\nclass AbsorbersPlugin {\n    constructor() {\n        this.id = \"absorbers\";\n    }\n    getPlugin(container) {\n        return new Absorbers(container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.absorbers) {\n            options.absorbers = executeOnSingleOrMultiple(source.absorbers, (absorber) => {\n                const tmp = new Absorber();\n                tmp.load(absorber);\n                return tmp;\n            });\n        }\n        options.interactivity.modes.absorbers = executeOnSingleOrMultiple(source?.interactivity?.modes?.absorbers, (absorber) => {\n            const tmp = new Absorber();\n            tmp.load(absorber);\n            return tmp;\n        });\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const absorbers = options.absorbers;\n        if (isArray(absorbers)) {\n            return !!absorbers.length;\n        }\n        else if (absorbers) {\n            return true;\n        }\n        else if (options.interactivity?.events?.onClick?.mode &&\n            isInArray(\"absorber\", options.interactivity.events.onClick.mode)) {\n            return true;\n        }\n        return false;\n    }\n}\nexport async function loadAbsorbersPlugin(engine, refresh = true) {\n    await engine.addPlugin(new AbsorbersPlugin(), refresh);\n}\nexport * from \"./AbsorberContainer\";\nexport * from \"./Enums/AbsorberClickMode\";\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class DestroyBounds {\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.bottom !== undefined) {\n            this.bottom = setRangeValue(data.bottom);\n        }\n        if (data.left !== undefined) {\n            this.left = setRangeValue(data.left);\n        }\n        if (data.right !== undefined) {\n            this.right = setRangeValue(data.right);\n        }\n        if (data.top !== undefined) {\n            this.top = setRangeValue(data.top);\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitFactor extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = 3;\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class SplitRate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.value = { min: 4, max: 9 };\n    }\n}\n","import { OptionsColor, deepExtend, executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { SplitFactor } from \"./SplitFactor\";\nimport { SplitRate } from \"./SplitRate\";\nexport class Split {\n    constructor() {\n        this.count = 1;\n        this.factor = new SplitFactor();\n        this.rate = new SplitRate();\n        this.sizeOffset = true;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.factor.load(data.factor);\n        this.rate.load(data.rate);\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        if (data.sizeOffset !== undefined) {\n            this.sizeOffset = data.sizeOffset;\n        }\n        if (data.colorOffset) {\n            this.colorOffset = this.colorOffset ?? {};\n            if (data.colorOffset.h !== undefined) {\n                this.colorOffset.h = data.colorOffset.h;\n            }\n            if (data.colorOffset.s !== undefined) {\n                this.colorOffset.s = data.colorOffset.s;\n            }\n            if (data.colorOffset.l !== undefined) {\n                this.colorOffset.l = data.colorOffset.l;\n            }\n        }\n    }\n}\n","import { DestroyBounds } from \"./DestroyBounds\";\nimport { Split } from \"./Split\";\nexport class Destroy {\n    constructor() {\n        this.bounds = new DestroyBounds();\n        this.mode = \"none\";\n        this.split = new Split();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.mode) {\n            this.mode = data.mode;\n        }\n        if (data.bounds) {\n            this.bounds.load(data.bounds);\n        }\n        this.split.load(data.split);\n    }\n}\n","import { getRangeValue, getValue, isNumber, itemFromSingleOrMultiple, loadParticlesOptions, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nfunction addSplitParticle(engine, container, parent, splitParticlesOptions) {\n    const destroyOptions = parent.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split, options = loadParticlesOptions(engine, container, parent.options), factor = getValue(splitOptions.factor), parentColor = parent.getFillColor();\n    if (splitOptions.color) {\n        options.color.load(splitOptions.color);\n    }\n    else if (splitOptions.colorOffset && parentColor) {\n        options.color.load({\n            value: {\n                hsl: {\n                    h: parentColor.h + getRangeValue(splitOptions.colorOffset.h ?? 0),\n                    s: parentColor.s + getRangeValue(splitOptions.colorOffset.s ?? 0),\n                    l: parentColor.l + getRangeValue(splitOptions.colorOffset.l ?? 0),\n                },\n            },\n        });\n    }\n    else {\n        options.color.load({\n            value: {\n                hsl: parent.getFillColor(),\n            },\n        });\n    }\n    options.move.load({\n        center: {\n            x: parent.position.x,\n            y: parent.position.y,\n            mode: \"precise\",\n        },\n    });\n    if (isNumber(options.size.value)) {\n        options.size.value /= factor;\n    }\n    else {\n        options.size.value.min /= factor;\n        options.size.value.max /= factor;\n    }\n    options.load(splitParticlesOptions);\n    const offset = splitOptions.sizeOffset ? setRangeValue(-parent.size.value, parent.size.value) : 0, position = {\n        x: parent.position.x + randomInRange(offset),\n        y: parent.position.y + randomInRange(offset),\n    };\n    return container.particles.addParticle(position, options, parent.group, (particle) => {\n        if (particle.size.value < 0.5) {\n            return false;\n        }\n        particle.velocity.length = randomInRange(setRangeValue(parent.velocity.length, particle.velocity.length));\n        particle.splitCount = (parent.splitCount ?? 0) + 1;\n        particle.unbreakable = true;\n        setTimeout(() => {\n            particle.unbreakable = false;\n        }, 500);\n        return true;\n    });\n}\nexport function split(engine, container, particle) {\n    const destroyOptions = particle.options.destroy;\n    if (!destroyOptions) {\n        return;\n    }\n    const splitOptions = destroyOptions.split;\n    if (splitOptions.count >= 0 && (particle.splitCount === undefined || particle.splitCount++ > splitOptions.count)) {\n        return;\n    }\n    const rate = getValue(splitOptions.rate), particlesSplitOptions = itemFromSingleOrMultiple(splitOptions.particles);\n    for (let i = 0; i < rate; i++) {\n        addSplitParticle(engine, container, particle, particlesSplitOptions);\n    }\n}\n","import { getRangeValue, } from \"tsparticles-engine\";\nimport { Destroy } from \"./Options/Classes/Destroy\";\nimport { split } from \"./Utils\";\nexport class DestroyUpdater {\n    constructor(engine, container) {\n        this.engine = engine;\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, destroyOptions = particlesOptions.destroy;\n        if (!destroyOptions) {\n            return;\n        }\n        particle.splitCount = 0;\n        const destroyBoundsOptions = destroyOptions.bounds;\n        if (!particle.destroyBounds) {\n            particle.destroyBounds = {};\n        }\n        const { bottom, left, right, top } = destroyBoundsOptions, { destroyBounds } = particle, canvasSize = container.canvas.size;\n        if (bottom) {\n            destroyBounds.bottom = (getRangeValue(bottom) * canvasSize.height) / 100;\n        }\n        if (left) {\n            destroyBounds.left = (getRangeValue(left) * canvasSize.width) / 100;\n        }\n        if (right) {\n            destroyBounds.right = (getRangeValue(right) * canvasSize.width) / 100;\n        }\n        if (top) {\n            destroyBounds.top = (getRangeValue(top) * canvasSize.height) / 100;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.destroy) {\n            options.destroy = new Destroy();\n        }\n        for (const source of sources) {\n            options.destroy.load(source?.destroy);\n        }\n    }\n    particleDestroyed(particle, override) {\n        if (override) {\n            return;\n        }\n        const destroyOptions = particle.options.destroy;\n        if (destroyOptions && destroyOptions.mode === \"split\") {\n            split(this.engine, this.container, particle);\n        }\n    }\n    update(particle) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        const position = particle.getPosition(), bounds = particle.destroyBounds;\n        if (!bounds) {\n            return;\n        }\n        if ((bounds.bottom !== undefined && position.y >= bounds.bottom) ||\n            (bounds.left !== undefined && position.x <= bounds.left) ||\n            (bounds.right !== undefined && position.x >= bounds.right) ||\n            (bounds.top !== undefined && position.y <= bounds.top)) {\n            particle.destroy();\n        }\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nexport class CircleShape {\n    randomPosition(position, size, fill) {\n        const generateTheta = (x, y) => {\n            const u = getRandom() / 4.0, theta = Math.atan((y / x) * Math.tan(2 * Math.PI * u)), v = getRandom();\n            if (v < 0.25) {\n                return theta;\n            }\n            else if (v < 0.5) {\n                return Math.PI - theta;\n            }\n            else if (v < 0.75) {\n                return Math.PI + theta;\n            }\n            else {\n                return -theta;\n            }\n        }, radius = (x, y, theta) => (x * y) / Math.sqrt((y * Math.cos(theta)) ** 2 + (x * Math.sin(theta)) ** 2), [a, b] = [size.width / 2, size.height / 2], randomTheta = generateTheta(a, b), maxRadius = radius(a, b, randomTheta), randomRadius = fill ? maxRadius * Math.sqrt(getRandom()) : maxRadius;\n        return {\n            x: position.x + randomRadius * Math.cos(randomTheta),\n            y: position.y + randomRadius * Math.sin(randomTheta),\n        };\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterLife {\n    constructor() {\n        this.wait = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n        if (data.duration !== undefined) {\n            this.duration = setRangeValue(data.duration);\n        }\n        if (data.wait !== undefined) {\n            this.wait = data.wait;\n        }\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class EmitterRate {\n    constructor() {\n        this.quantity = 1;\n        this.delay = 0.1;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = setRangeValue(data.quantity);\n        }\n        if (data.delay !== undefined) {\n            this.delay = setRangeValue(data.delay);\n        }\n    }\n}\n","export class EmitterSize {\n    constructor() {\n        this.mode = \"percent\";\n        this.height = 0;\n        this.width = 0;\n    }\n    load(data) {\n        if (data === undefined) {\n            return;\n        }\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { AnimatableColor, deepExtend, executeOnSingleOrMultiple, setRangeValue, } from \"tsparticles-engine\";\nimport { EmitterLife } from \"./EmitterLife\";\nimport { EmitterRate } from \"./EmitterRate\";\nimport { EmitterSize } from \"./EmitterSize\";\nexport class Emitter {\n    constructor() {\n        this.autoPlay = true;\n        this.fill = true;\n        this.life = new EmitterLife();\n        this.rate = new EmitterRate();\n        this.shape = \"square\";\n        this.startCount = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.autoPlay !== undefined) {\n            this.autoPlay = data.autoPlay;\n        }\n        if (data.size !== undefined) {\n            if (!this.size) {\n                this.size = new EmitterSize();\n            }\n            this.size.load(data.size);\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.domId = data.domId;\n        if (data.fill !== undefined) {\n            this.fill = data.fill;\n        }\n        this.life.load(data.life);\n        this.name = data.name;\n        this.particles = executeOnSingleOrMultiple(data.particles, (particles) => {\n            return deepExtend({}, particles);\n        });\n        this.rate.load(data.rate);\n        if (data.shape !== undefined) {\n            this.shape = data.shape;\n        }\n        if (data.position !== undefined) {\n            this.position = {};\n            if (data.position.x !== undefined) {\n                this.position.x = setRangeValue(data.position.x);\n            }\n            if (data.position.y !== undefined) {\n                this.position.y = setRangeValue(data.position.y);\n            }\n        }\n        if (data.spawnColor !== undefined) {\n            if (this.spawnColor === undefined) {\n                this.spawnColor = new AnimatableColor();\n            }\n            this.spawnColor.load(data.spawnColor);\n        }\n        if (data.startCount !== undefined) {\n            this.startCount = data.startCount;\n        }\n    }\n}\n","import { Vector, calcPositionOrRandomFromSizeRanged, deepExtend, getRangeValue, getSize, isPointInside, itemFromSingleOrMultiple, randomInRange, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterSize } from \"./Options/Classes/EmitterSize\";\nexport class EmitterInstance {\n    constructor(engine, emitters, container, options, position) {\n        this.emitters = emitters;\n        this.container = container;\n        this._calcPosition = () => {\n            return calcPositionOrRandomFromSizeRanged({\n                size: this.container.canvas.size,\n                position: this.options.position,\n            });\n        };\n        this._destroy = () => {\n            this.emitters.removeEmitter(this);\n            this._engine.dispatchEvent(\"emitterDestroyed\", {\n                container: this.container,\n                data: {\n                    emitter: this,\n                },\n            });\n        };\n        this._emit = () => {\n            if (this._paused) {\n                return;\n            }\n            const quantity = getRangeValue(this.options.rate.quantity);\n            this._emitParticles(quantity);\n        };\n        this._emitParticles = (quantity) => {\n            const position = this.getPosition(), size = this.getSize(), singleParticlesOptions = itemFromSingleOrMultiple(this._particlesOptions);\n            for (let i = 0; i < quantity; i++) {\n                const particlesOptions = deepExtend({}, singleParticlesOptions);\n                if (this.spawnColor) {\n                    const hslAnimation = this.options.spawnColor?.animation;\n                    if (hslAnimation) {\n                        this.spawnColor.h = this._setColorAnimation(hslAnimation.h, this.spawnColor.h, 360);\n                        this.spawnColor.s = this._setColorAnimation(hslAnimation.s, this.spawnColor.s, 100);\n                        this.spawnColor.l = this._setColorAnimation(hslAnimation.l, this.spawnColor.l, 100);\n                    }\n                    if (!particlesOptions.color) {\n                        particlesOptions.color = {\n                            value: this.spawnColor,\n                        };\n                    }\n                    else {\n                        particlesOptions.color.value = this.spawnColor;\n                    }\n                }\n                if (!position) {\n                    return;\n                }\n                const pPosition = this._shape?.randomPosition(position, size, this.fill) ?? position;\n                this.container.particles.addParticle(pPosition, particlesOptions);\n            }\n        };\n        this._prepareToDie = () => {\n            if (this._paused) {\n                return;\n            }\n            const duration = this.options.life?.duration !== undefined ? getRangeValue(this.options.life.duration) : undefined;\n            if (this.container.retina.reduceFactor &&\n                (this._lifeCount > 0 || this._immortal) &&\n                duration !== undefined &&\n                duration > 0) {\n                this._duration = duration * 1000;\n            }\n        };\n        this._setColorAnimation = (animation, initValue, maxValue) => {\n            const container = this.container;\n            if (!animation.enable) {\n                return initValue;\n            }\n            const colorOffset = randomInRange(animation.offset), delay = getRangeValue(this.options.rate.delay), emitFactor = (1000 * delay) / container.retina.reduceFactor, colorSpeed = getRangeValue(animation.speed ?? 0);\n            return (initValue + (colorSpeed * container.fpsLimit) / emitFactor + colorOffset * 3.6) % maxValue;\n        };\n        this._engine = engine;\n        this._currentDuration = 0;\n        this._currentEmitDelay = 0;\n        this._currentSpawnDelay = 0;\n        this._initialPosition = position;\n        if (options instanceof Emitter) {\n            this.options = options;\n        }\n        else {\n            this.options = new Emitter();\n            this.options.load(options);\n        }\n        this._spawnDelay = (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n        this.position = this._initialPosition ?? this._calcPosition();\n        this.name = this.options.name;\n        this._shape = this._engine.emitterShapeManager?.getShape(this.options.shape);\n        this.fill = this.options.fill;\n        this._firstSpawn = !this.options.life.wait;\n        this._startParticlesAdded = false;\n        let particlesOptions = deepExtend({}, this.options.particles);\n        particlesOptions ??= {};\n        particlesOptions.move ??= {};\n        particlesOptions.move.direction ??= this.options.direction;\n        if (this.options.spawnColor) {\n            this.spawnColor = rangeColorToHsl(this.options.spawnColor);\n        }\n        this._paused = !this.options.autoPlay;\n        this._particlesOptions = particlesOptions;\n        this.size =\n            this.options.size ??\n                (() => {\n                    const size = new EmitterSize();\n                    size.load({\n                        height: 0,\n                        mode: \"percent\",\n                        width: 0,\n                    });\n                    return size;\n                })();\n        this._lifeCount = this.options.life.count ?? -1;\n        this._immortal = this._lifeCount <= 0;\n        this._engine.dispatchEvent(\"emitterCreated\", {\n            container,\n            data: {\n                emitter: this,\n            },\n        });\n        this.play();\n    }\n    externalPause() {\n        this._paused = true;\n        this.pause();\n    }\n    externalPlay() {\n        this._paused = false;\n        this.play();\n    }\n    getPosition() {\n        if (this.options.domId) {\n            const container = this.container, element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    x: (elRect.x + elRect.width / 2) * container.retina.pixelRatio,\n                    y: (elRect.y + elRect.height / 2) * container.retina.pixelRatio,\n                };\n            }\n        }\n        return this.position;\n    }\n    getSize() {\n        const container = this.container;\n        if (this.options.domId) {\n            const element = document.getElementById(this.options.domId);\n            if (element) {\n                const elRect = element.getBoundingClientRect();\n                return {\n                    width: elRect.width * container.retina.pixelRatio,\n                    height: elRect.height * container.retina.pixelRatio,\n                };\n            }\n        }\n        return getSize(this.size, container.canvas.size);\n    }\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        delete this._emitDelay;\n    }\n    play() {\n        if (this._paused) {\n            return;\n        }\n        if (!(this.container.retina.reduceFactor &&\n            (this._lifeCount > 0 || this._immortal || !this.options.life.count) &&\n            (this._firstSpawn || this._currentSpawnDelay >= (this._spawnDelay ?? 0)))) {\n            return;\n        }\n        if (this._emitDelay === undefined) {\n            const delay = getRangeValue(this.options.rate.delay);\n            this._emitDelay = (1000 * delay) / this.container.retina.reduceFactor;\n        }\n        if (this._lifeCount > 0 || this._immortal) {\n            this._prepareToDie();\n        }\n    }\n    resize() {\n        const initialPosition = this._initialPosition;\n        this.position =\n            initialPosition && isPointInside(initialPosition, this.container.canvas.size, Vector.origin)\n                ? initialPosition\n                : this._calcPosition();\n    }\n    update(delta) {\n        if (this._paused) {\n            return;\n        }\n        if (this._firstSpawn) {\n            this._firstSpawn = false;\n            this._currentSpawnDelay = this._spawnDelay ?? 0;\n            this._currentEmitDelay = this._emitDelay ?? 0;\n        }\n        if (!this._startParticlesAdded) {\n            this._startParticlesAdded = true;\n            this._emitParticles(this.options.startCount);\n        }\n        if (this._duration !== undefined) {\n            this._currentDuration += delta.value;\n            if (this._currentDuration >= this._duration) {\n                this.pause();\n                if (this._spawnDelay !== undefined) {\n                    delete this._spawnDelay;\n                }\n                if (!this._immortal) {\n                    this._lifeCount--;\n                }\n                if (this._lifeCount > 0 || this._immortal) {\n                    this.position = this._calcPosition();\n                    this._spawnDelay =\n                        (getRangeValue(this.options.life.delay ?? 0) * 1000) / this.container.retina.reduceFactor;\n                }\n                else {\n                    this._destroy();\n                }\n                this._currentDuration -= this._duration;\n                delete this._duration;\n            }\n        }\n        if (this._spawnDelay !== undefined) {\n            this._currentSpawnDelay += delta.value;\n            if (this._currentSpawnDelay >= this._spawnDelay) {\n                this._engine.dispatchEvent(\"emitterPlay\", {\n                    container: this.container,\n                });\n                this.play();\n                this._currentSpawnDelay -= this._currentSpawnDelay;\n                delete this._spawnDelay;\n            }\n        }\n        if (this._emitDelay !== undefined) {\n            this._currentEmitDelay += delta.value;\n            if (this._currentEmitDelay >= this._emitDelay) {\n                this._emit();\n                this._currentEmitDelay -= this._emitDelay;\n            }\n        }\n    }\n}\n","import { arrayRandomIndex, executeOnSingleOrMultiple, isArray, isNumber, itemFromArray, } from \"tsparticles-engine\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        this._engine = engine;\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = {\n            random: {\n                count: 1,\n                enable: false,\n            },\n            value: [],\n        };\n        container.getEmitter = (idxOrName) => idxOrName === undefined || isNumber(idxOrName)\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        container.addEmitter = (options, position) => this.addEmitter(options, position);\n        container.removeEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        container.playEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        container.pauseEmitter = (idxOrName) => {\n            const emitter = container.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(this._engine, this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    handleClickMode(mode) {\n        const emitterOptions = this.emitters, modeEmitters = this.interactivityEmitters;\n        if (mode !== \"emitter\") {\n            return;\n        }\n        let emittersModeOptions;\n        if (modeEmitters && isArray(modeEmitters.value)) {\n            if (modeEmitters.value.length > 0 && modeEmitters.random.enable) {\n                emittersModeOptions = [];\n                const usedIndexes = [];\n                for (let i = 0; i < modeEmitters.random.count; i++) {\n                    const idx = arrayRandomIndex(modeEmitters.value);\n                    if (usedIndexes.includes(idx) && usedIndexes.length < modeEmitters.value.length) {\n                        i--;\n                        continue;\n                    }\n                    usedIndexes.push(idx);\n                    emittersModeOptions.push(itemFromArray(modeEmitters.value, idx));\n                }\n            }\n            else {\n                emittersModeOptions = modeEmitters.value;\n            }\n        }\n        else {\n            emittersModeOptions = modeEmitters?.value;\n        }\n        const emittersOptions = emittersModeOptions ?? emitterOptions, ePosition = this.container.interactivity.mouse.clickPosition;\n        executeOnSingleOrMultiple(emittersOptions, (emitter) => {\n            this.addEmitter(emitter, ePosition);\n        });\n    }\n    async init() {\n        this.emitters = this.container.actualOptions.emitters;\n        this.interactivityEmitters = this.container.actualOptions.interactivity.modes.emitters;\n        if (!this.emitters) {\n            return;\n        }\n        if (isArray(this.emitters)) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n}\n","const shapes = new Map();\nexport class ShapeManager {\n    constructor(engine) {\n        this._engine = engine;\n    }\n    addShape(name, drawer) {\n        if (!this.getShape(name)) {\n            shapes.set(name, drawer);\n        }\n    }\n    getShape(name) {\n        return shapes.get(name);\n    }\n    getSupportedShapes() {\n        return shapes.keys();\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - 0.5);\n}\nexport class SquareShape {\n    randomPosition(position, size, fill) {\n        if (fill) {\n            return {\n                x: randomSquareCoordinate(position.x, size.width),\n                y: randomSquareCoordinate(position.y, size.height),\n            };\n        }\n        else {\n            const halfW = size.width / 2, halfH = size.height / 2, side = Math.floor(getRandom() * 4), v = (getRandom() - 0.5) * 2;\n            switch (side) {\n                case 0:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y - halfH,\n                    };\n                case 1:\n                    return {\n                        x: position.x - halfW,\n                        y: position.y + v * halfH,\n                    };\n                case 2:\n                    return {\n                        x: position.x + v * halfW,\n                        y: position.y + halfH,\n                    };\n                case 3:\n                default:\n                    return {\n                        x: position.x + halfW,\n                        y: position.y + v * halfH,\n                    };\n            }\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, isArray, isInArray, } from \"tsparticles-engine\";\nimport { CircleShape } from \"./Shapes/Circle/CircleShape\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { Emitters } from \"./Emitters\";\nimport { ShapeManager } from \"./ShapeManager\";\nimport { SquareShape } from \"./Shapes/Square/SquareShape\";\nclass EmittersPlugin {\n    constructor(engine) {\n        this._engine = engine;\n        this.id = \"emitters\";\n    }\n    getPlugin(container) {\n        return new Emitters(this._engine, container);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        if (source?.emitters) {\n            options.emitters = executeOnSingleOrMultiple(source.emitters, (emitter) => {\n                const tmp = new Emitter();\n                tmp.load(emitter);\n                return tmp;\n            });\n        }\n        const interactivityEmitters = source?.interactivity?.modes?.emitters;\n        if (interactivityEmitters) {\n            if (isArray(interactivityEmitters)) {\n                options.interactivity.modes.emitters = {\n                    random: {\n                        count: 1,\n                        enable: true,\n                    },\n                    value: interactivityEmitters.map((s) => {\n                        const tmp = new Emitter();\n                        tmp.load(s);\n                        return tmp;\n                    }),\n                };\n            }\n            else {\n                const emitterMode = interactivityEmitters;\n                if (emitterMode.value !== undefined) {\n                    if (isArray(emitterMode.value)) {\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: emitterMode.value.map((s) => {\n                                const tmp = new Emitter();\n                                tmp.load(s);\n                                return tmp;\n                            }),\n                        };\n                    }\n                    else {\n                        const tmp = new Emitter();\n                        tmp.load(emitterMode.value);\n                        options.interactivity.modes.emitters = {\n                            random: {\n                                count: emitterMode.random.count ?? 1,\n                                enable: emitterMode.random.enable ?? false,\n                            },\n                            value: tmp,\n                        };\n                    }\n                }\n                else {\n                    const emitterOptions = (options.interactivity.modes.emitters = {\n                        random: {\n                            count: 1,\n                            enable: false,\n                        },\n                        value: new Emitter(),\n                    });\n                    emitterOptions.value.load(interactivityEmitters);\n                }\n            }\n        }\n    }\n    needsPlugin(options) {\n        if (!options) {\n            return false;\n        }\n        const emitters = options.emitters;\n        return ((isArray(emitters) && !!emitters.length) ||\n            emitters !== undefined ||\n            (!!options.interactivity?.events?.onClick?.mode &&\n                isInArray(\"emitter\", options.interactivity.events.onClick.mode)));\n    }\n}\nexport async function loadEmittersPlugin(engine, refresh = true) {\n    if (!engine.emitterShapeManager) {\n        engine.emitterShapeManager = new ShapeManager(engine);\n    }\n    if (!engine.addEmitterShape) {\n        engine.addEmitterShape = (name, shape) => {\n            engine.emitterShapeManager?.addShape(name, shape);\n        };\n    }\n    const plugin = new EmittersPlugin(engine);\n    await engine.addPlugin(plugin, refresh);\n    engine.addEmitterShape(\"circle\", new CircleShape());\n    engine.addEmitterShape(\"square\", new SquareShape());\n}\nexport * from \"./EmitterContainer\";\nexport * from \"./EmittersEngine\";\nexport * from \"./Enums/EmitterClickMode\";\nexport * from \"./Enums/EmitterShapeType\";\n","export class ExternalInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"external\";\n    }\n}\n","import { deepExtend } from \"tsparticles-engine\";\nexport class Trail {\n    constructor() {\n        this.delay = 1;\n        this.pauseOnStop = false;\n        this.quantity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.delay !== undefined) {\n            this.delay = data.delay;\n        }\n        if (data.quantity !== undefined) {\n            this.quantity = data.quantity;\n        }\n        if (data.particles !== undefined) {\n            this.particles = deepExtend({}, data.particles);\n        }\n        if (data.pauseOnStop !== undefined) {\n            this.pauseOnStop = data.pauseOnStop;\n        }\n    }\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Trail } from \"./Options/Classes/Trail\";\nexport class TrailMaker extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._delay = 0;\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(delta) {\n        const container = this.container, { interactivity } = container;\n        if (!container.retina.reduceFactor) {\n            return;\n        }\n        const options = container.actualOptions, trailOptions = options.interactivity.modes.trail;\n        if (!trailOptions) {\n            return;\n        }\n        const optDelay = (trailOptions.delay * 1000) / this.container.retina.reduceFactor;\n        if (this._delay < optDelay) {\n            this._delay += delta.value;\n        }\n        if (this._delay < optDelay) {\n            return;\n        }\n        const canEmit = !(trailOptions.pauseOnStop &&\n            (interactivity.mouse.position === this._lastPosition ||\n                (interactivity.mouse.position?.x === this._lastPosition?.x &&\n                    interactivity.mouse.position?.y === this._lastPosition?.y)));\n        const mousePos = container.interactivity.mouse.position;\n        if (mousePos) {\n            this._lastPosition = { ...mousePos };\n        }\n        else {\n            delete this._lastPosition;\n        }\n        if (canEmit) {\n            container.particles.push(trailOptions.quantity, container.interactivity.mouse, trailOptions.particles);\n        }\n        this._delay -= optDelay;\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        return ((mouse.clicking && mouse.inside && !!mouse.position && isInArray(\"trail\", events.onClick.mode)) ||\n            (mouse.inside && !!mouse.position && isInArray(\"trail\", events.onHover.mode)));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.trail) {\n            options.trail = new Trail();\n        }\n        for (const source of sources) {\n            options.trail.load(source?.trail);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RollLight {\n    constructor() {\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.value !== undefined) {\n            this.value = setRangeValue(data.value);\n        }\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nimport { RollLight } from \"./RollLight\";\nexport class Roll {\n    constructor() {\n        this.darken = new RollLight();\n        this.enable = false;\n        this.enlighten = new RollLight();\n        this.mode = \"vertical\";\n        this.speed = 25;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.backColor !== undefined) {\n            this.backColor = OptionsColor.create(this.backColor, data.backColor);\n        }\n        this.darken.load(data.darken);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.enlighten.load(data.enlighten);\n        if (data.mode !== undefined) {\n            this.mode = data.mode;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n    }\n}\n","import { initParticle, updateRoll } from \"./Utils\";\nimport { Roll } from \"./Options/Classes/Roll\";\nexport class RollUpdater {\n    getTransformValues(particle) {\n        const roll = particle.roll?.enable && particle.roll, rollHorizontal = roll && roll.horizontal, rollVertical = roll && roll.vertical;\n        return {\n            a: rollHorizontal ? Math.cos(roll.angle) : undefined,\n            d: rollVertical ? Math.sin(roll.angle) : undefined,\n        };\n    }\n    init(particle) {\n        initParticle(particle);\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!roll?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.roll) {\n            options.roll = new Roll();\n        }\n        for (const source of sources) {\n            options.roll.load(source?.roll);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nexport function initParticle(particle) {\n    const rollOpt = particle.options.roll;\n    if (!rollOpt?.enable) {\n        particle.roll = {\n            enable: false,\n            horizontal: false,\n            vertical: false,\n            angle: 0,\n            speed: 0,\n        };\n        return;\n    }\n    particle.roll = {\n        enable: rollOpt.enable,\n        horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n        vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n        angle: getRandom() * Math.PI * 2,\n        speed: getRangeValue(rollOpt.speed) / 360,\n    };\n    if (rollOpt.backColor) {\n        particle.backColor = rangeColorToHsl(rollOpt.backColor);\n    }\n    else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n        const alterType = getRandom() >= 0.5 ? \"darken\" : \"enlighten\";\n        particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n        };\n    }\n    else if (rollOpt.darken.enable) {\n        particle.roll.alter = {\n            type: \"darken\",\n            value: getRangeValue(rollOpt.darken.value),\n        };\n    }\n    else if (rollOpt.enlighten.enable) {\n        particle.roll.alter = {\n            type: \"enlighten\",\n            value: getRangeValue(rollOpt.enlighten.value),\n        };\n    }\n}\nexport function updateRoll(particle, delta) {\n    const roll = particle.options.roll, data = particle.roll;\n    if (!data || !roll?.enable) {\n        return;\n    }\n    const speed = data.speed * delta.factor, max = 2 * Math.PI;\n    data.angle += speed;\n    if (data.angle > max) {\n        data.angle -= max;\n    }\n}\n","import { tsParticles } from \"tsparticles-engine\";\nexport class Particles {\n    static init(options) {\n        const particles = new Particles(), selector = options.selector;\n        if (!selector) {\n            throw new Error(\"No selector provided\");\n        }\n        const el = document.querySelector(selector);\n        if (!el) {\n            throw new Error(\"No element found for selector\");\n        }\n        tsParticles\n            .set(selector.replace(\".\", \"\").replace(\"!\", \"\"), el, {\n            fullScreen: {\n                enable: false,\n            },\n            particles: {\n                color: {\n                    value: options.color ?? \"!000000\",\n                },\n                links: {\n                    color: \"random\",\n                    distance: options.minDistance ?? 120,\n                    enable: options.connectParticles ?? false,\n                },\n                move: {\n                    enable: true,\n                    speed: options.speed ?? 0.5,\n                },\n                number: {\n                    value: options.maxParticles ?? 100,\n                },\n                size: {\n                    value: { min: 1, max: options.sizeVariations ?? 3 },\n                },\n            },\n            responsive: options.responsive?.map((responsive) => ({\n                maxWidth: responsive.breakpoint,\n                options: {\n                    particles: {\n                        color: {\n                            value: responsive.options?.color,\n                        },\n                        links: {\n                            distance: responsive.options?.minDistance,\n                            enable: responsive.options?.connectParticles,\n                        },\n                        number: {\n                            value: options.maxParticles,\n                        },\n                        move: {\n                            enable: true,\n                            speed: responsive.options?.speed,\n                        },\n                        size: {\n                            value: responsive.options?.sizeVariations,\n                        },\n                    },\n                },\n            })),\n        })\n            .then((container) => {\n            particles._container = container;\n        });\n        return particles;\n    }\n    destroy() {\n        const container = this._container;\n        container && container.destroy();\n    }\n    pauseAnimation() {\n        const container = this._container;\n        container && container.pause();\n    }\n    resumeAnimation() {\n        const container = this._container;\n        container && container.play();\n    }\n}\n","import { clamp, getDistances, getRandom, } from \"tsparticles-engine\";\nexport function applyDistance(particle) {\n    const initialPosition = particle.initialPosition, { dx, dy } = getDistances(initialPosition, particle.position), dxFixed = Math.abs(dx), dyFixed = Math.abs(dy), { maxDistance } = particle.retina, hDistance = maxDistance.horizontal, vDistance = maxDistance.vertical;\n    if (!hDistance && !vDistance) {\n        return;\n    }\n    if (((hDistance && dxFixed >= hDistance) || (vDistance && dyFixed >= vDistance)) && !particle.misplaced) {\n        particle.misplaced = (!!hDistance && dxFixed > hDistance) || (!!vDistance && dyFixed > vDistance);\n        if (hDistance) {\n            particle.velocity.x = particle.velocity.y / 2 - particle.velocity.x;\n        }\n        if (vDistance) {\n            particle.velocity.y = particle.velocity.x / 2 - particle.velocity.y;\n        }\n    }\n    else if ((!hDistance || dxFixed < hDistance) && (!vDistance || dyFixed < vDistance) && particle.misplaced) {\n        particle.misplaced = false;\n    }\n    else if (particle.misplaced) {\n        const pos = particle.position, vel = particle.velocity;\n        if (hDistance && ((pos.x < initialPosition.x && vel.x < 0) || (pos.x > initialPosition.x && vel.x > 0))) {\n            vel.x *= -getRandom();\n        }\n        if (vDistance && ((pos.y < initialPosition.y && vel.y < 0) || (pos.y > initialPosition.y && vel.y > 0))) {\n            vel.y *= -getRandom();\n        }\n    }\n}\nexport function move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta) {\n    applyPath(particle, delta);\n    const gravityOptions = particle.gravity, gravityFactor = gravityOptions?.enable && gravityOptions.inverse ? -1 : 1;\n    if (moveDrift && moveSpeed) {\n        particle.velocity.x += (moveDrift * delta.factor) / (60 * moveSpeed);\n    }\n    if (gravityOptions?.enable && moveSpeed) {\n        particle.velocity.y += (gravityFactor * (gravityOptions.acceleration * delta.factor)) / (60 * moveSpeed);\n    }\n    const decay = particle.moveDecay;\n    particle.velocity.multTo(decay);\n    const velocity = particle.velocity.mult(moveSpeed);\n    if (gravityOptions?.enable &&\n        maxSpeed > 0 &&\n        ((!gravityOptions.inverse && velocity.y >= 0 && velocity.y >= maxSpeed) ||\n            (gravityOptions.inverse && velocity.y <= 0 && velocity.y <= -maxSpeed))) {\n        velocity.y = gravityFactor * maxSpeed;\n        if (moveSpeed) {\n            particle.velocity.y = velocity.y / moveSpeed;\n        }\n    }\n    const zIndexOptions = particle.options.zIndex, zVelocityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.velocityRate;\n    velocity.multTo(zVelocityFactor);\n    const { position } = particle;\n    position.addTo(velocity);\n    if (moveOptions.vibrate) {\n        position.x += Math.sin(position.x * Math.cos(position.y));\n        position.y += Math.cos(position.y * Math.sin(position.x));\n    }\n}\nexport function spin(particle, moveSpeed) {\n    const container = particle.container;\n    if (!particle.spin) {\n        return;\n    }\n    const updateFunc = {\n        x: particle.spin.direction === \"clockwise\" ? Math.cos : Math.sin,\n        y: particle.spin.direction === \"clockwise\" ? Math.sin : Math.cos,\n    };\n    particle.position.x = particle.spin.center.x + particle.spin.radius * updateFunc.x(particle.spin.angle);\n    particle.position.y = particle.spin.center.y + particle.spin.radius * updateFunc.y(particle.spin.angle);\n    particle.spin.radius += particle.spin.acceleration;\n    const maxCanvasSize = Math.max(container.canvas.size.width, container.canvas.size.height);\n    if (particle.spin.radius > maxCanvasSize / 2) {\n        particle.spin.radius = maxCanvasSize / 2;\n        particle.spin.acceleration *= -1;\n    }\n    else if (particle.spin.radius < 0) {\n        particle.spin.radius = 0;\n        particle.spin.acceleration *= -1;\n    }\n    particle.spin.angle += (moveSpeed / 100) * (1 - particle.spin.radius / maxCanvasSize);\n}\nexport function applyPath(particle, delta) {\n    const particlesOptions = particle.options, pathOptions = particlesOptions.move.path, pathEnabled = pathOptions.enable;\n    if (!pathEnabled) {\n        return;\n    }\n    if (particle.lastPathTime <= particle.pathDelay) {\n        particle.lastPathTime += delta.value;\n        return;\n    }\n    const path = particle.pathGenerator?.generate(particle, delta);\n    if (path) {\n        particle.velocity.addTo(path);\n    }\n    if (pathOptions.clamp) {\n        particle.velocity.x = clamp(particle.velocity.x, -1, 1);\n        particle.velocity.y = clamp(particle.velocity.y, -1, 1);\n    }\n    particle.lastPathTime -= particle.pathDelay;\n}\nexport function getProximitySpeedFactor(particle) {\n    return particle.slow.inRange ? particle.slow.factor : 1;\n}\n","import { getDistance, getRangeMax, getRangeValue, } from \"tsparticles-engine\";\nimport { applyDistance, getProximitySpeedFactor, move, spin } from \"./Utils\";\nconst diffFactor = 2;\nexport class BaseMover {\n    constructor() {\n        this._initSpin = (particle) => {\n            const container = particle.container, options = particle.options, spinOptions = options.move.spin;\n            if (!spinOptions.enable) {\n                return;\n            }\n            const spinPos = spinOptions.position ?? { x: 50, y: 50 }, spinCenter = {\n                x: (spinPos.x / 100) * container.canvas.size.width,\n                y: (spinPos.y / 100) * container.canvas.size.height,\n            }, pos = particle.getPosition(), distance = getDistance(pos, spinCenter), spinAcceleration = getRangeValue(spinOptions.acceleration);\n            particle.retina.spinAcceleration = spinAcceleration * container.retina.pixelRatio;\n            particle.spin = {\n                center: spinCenter,\n                direction: particle.velocity.x >= 0 ? \"clockwise\" : \"counter-clockwise\",\n                angle: particle.velocity.angle,\n                radius: distance,\n                acceleration: particle.retina.spinAcceleration,\n            };\n        };\n    }\n    init(particle) {\n        const options = particle.options, gravityOptions = options.move.gravity;\n        particle.gravity = {\n            enable: gravityOptions.enable,\n            acceleration: getRangeValue(gravityOptions.acceleration),\n            inverse: gravityOptions.inverse,\n        };\n        this._initSpin(particle);\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && particle.options.move.enable;\n    }\n    move(particle, delta) {\n        const particleOptions = particle.options, moveOptions = particleOptions.move;\n        if (!moveOptions.enable) {\n            return;\n        }\n        const container = particle.container, pxRatio = container.retina.pixelRatio, slowFactor = getProximitySpeedFactor(particle), baseSpeed = (particle.retina.moveSpeed ??= getRangeValue(moveOptions.speed) * pxRatio) *\n            container.retina.reduceFactor, moveDrift = (particle.retina.moveDrift ??= getRangeValue(particle.options.move.drift) * pxRatio), maxSize = getRangeMax(particleOptions.size.value) * pxRatio, sizeFactor = moveOptions.size ? particle.getRadius() / maxSize : 1, moveSpeed = (baseSpeed * sizeFactor * slowFactor * (delta.factor || 1)) / diffFactor, maxSpeed = particle.retina.maxSpeed ?? container.retina.maxSpeed;\n        if (moveOptions.spin.enable) {\n            spin(particle, moveSpeed);\n        }\n        else {\n            move(particle, moveOptions, moveSpeed, maxSpeed, moveDrift, delta);\n        }\n        applyDistance(particle);\n    }\n}\n","import { isObject } from \"tsparticles-engine\";\nexport class CircleDrawer {\n    draw(context, particle, radius) {\n        if (!particle.circleRange) {\n            particle.circleRange = { min: 0, max: Math.PI * 2 };\n        }\n        const circleRange = particle.circleRange;\n        context.arc(0, 0, radius, circleRange.min, circleRange.max, false);\n    }\n    getSidesCount() {\n        return 12;\n    }\n    particleInit(container, particle) {\n        const shapeData = particle.shapeData, angle = shapeData?.angle ?? {\n            max: 360,\n            min: 0,\n        };\n        particle.circleRange = !isObject(angle)\n            ? {\n                min: 0,\n                max: (angle * Math.PI) / 180,\n            }\n            : { min: (angle.min * Math.PI) / 180, max: (angle.max * Math.PI) / 180 };\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateColor(particle, delta) {\n    const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n    if (!color) {\n        return;\n    }\n    const { h, s, l } = color;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateColor } from \"./Utils\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    update(particle, delta) {\n        updateColor(particle, delta);\n    }\n}\n","import { getRandom, getRangeValue, initParticleNumericAnimationValue, } from \"tsparticles-engine\";\nimport { updateOpacity } from \"./Utils\";\nexport class OpacityUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const opacityOptions = particle.options.opacity;\n        particle.opacity = initParticleNumericAnimationValue(opacityOptions, 1);\n        const opacityAnimation = opacityOptions.animation;\n        if (opacityAnimation.enable) {\n            particle.opacity.velocity =\n                (getRangeValue(opacityAnimation.speed) / 100) * this.container.retina.reduceFactor;\n            if (!opacityAnimation.sync) {\n                particle.opacity.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!particle.opacity &&\n            particle.opacity.enable &&\n            ((particle.opacity.maxLoops ?? 0) <= 0 ||\n                ((particle.opacity.maxLoops ?? 0) > 0 &&\n                    (particle.opacity.loops ?? 0) < (particle.opacity.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        if (particle.opacity) {\n            particle.opacity.time = 0;\n            particle.opacity.loops = 0;\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateOpacity(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.opacity.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateOpacity(particle, delta) {\n    const data = particle.opacity;\n    if (particle.destroyed || !data?.enable || ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= (data.velocity ?? 0) * delta.factor;\n            }\n            break;\n    }\n    if (data.velocity && data.decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { calculateBounds, } from \"tsparticles-engine\";\nimport { bounceHorizontal, bounceVertical } from \"./Utils\";\nexport class BounceOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\n            \"bounce\",\n            \"bounce-vertical\",\n            \"bounce-horizontal\",\n            \"bounceVertical\",\n            \"bounceHorizontal\",\n            \"split\",\n        ];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        let handled = false;\n        for (const [, plugin] of container.plugins) {\n            if (plugin.particleBounce !== undefined) {\n                handled = plugin.particleBounce(particle, delta, direction);\n            }\n            if (handled) {\n                break;\n            }\n        }\n        if (handled) {\n            return;\n        }\n        const pos = particle.getPosition(), offset = particle.offset, size = particle.getRadius(), bounds = calculateBounds(pos, size), canvasSize = container.canvas.size;\n        bounceHorizontal({ particle, outMode, direction, bounds, canvasSize, offset, size });\n        bounceVertical({ particle, outMode, direction, bounds, canvasSize, offset, size });\n    }\n}\n","import { getValue } from \"tsparticles-engine\";\nexport function bounceHorizontal(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-horizontal\" &&\n        data.outMode !== \"bounceHorizontal\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"left\" && data.direction !== \"right\")) {\n        return;\n    }\n    if (data.bounds.right < 0 && data.direction === \"left\") {\n        data.particle.position.x = data.size + data.offset.x;\n    }\n    else if (data.bounds.left > data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - data.size - data.offset.x;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.horizontal);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width && data.direction === \"right\") {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0 && data.direction === \"left\") {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if ((data.outMode !== \"bounce\" &&\n        data.outMode !== \"bounce-vertical\" &&\n        data.outMode !== \"bounceVertical\" &&\n        data.outMode !== \"split\") ||\n        (data.direction !== \"bottom\" && data.direction !== \"top\")) {\n        return;\n    }\n    if (data.bounds.bottom < 0 && data.direction === \"top\") {\n        data.particle.position.y = data.size + data.offset.y;\n    }\n    else if (data.bounds.top > data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - data.size - data.offset.y;\n    }\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if ((data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0) ||\n        (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n        const newVelocity = getValue(data.particle.options.bounce.vertical);\n        data.particle.velocity.y *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height && data.direction === \"bottom\") {\n        data.particle.position.y = data.canvasSize.height - minPos;\n    }\n    else if (data.bounds.top <= 0 && data.direction === \"top\") {\n        data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\n","import { Vector, getDistances, isPointInside, } from \"tsparticles-engine\";\nexport class DestroyOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"destroy\"];\n    }\n    update(particle, direction, _delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"normal\":\n            case \"outside\":\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                break;\n            case \"inside\": {\n                const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                const { x: vx, y: vy } = particle.velocity;\n                if ((vx < 0 && dx > particle.moveCenter.radius) ||\n                    (vy < 0 && dy > particle.moveCenter.radius) ||\n                    (vx >= 0 && dx < -particle.moveCenter.radius) ||\n                    (vy >= 0 && dy < -particle.moveCenter.radius)) {\n                    return;\n                }\n                break;\n            }\n        }\n        container.particles.remove(particle, undefined, true);\n    }\n}\n","import { Vector, isPointInside, } from \"tsparticles-engine\";\nexport class NoneOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"none\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        if ((particle.options.move.distance.horizontal &&\n            (direction === \"left\" || direction === \"right\")) ||\n            (particle.options.move.distance.vertical &&\n                (direction === \"top\" || direction === \"bottom\"))) {\n            return;\n        }\n        const gravityOptions = particle.options.move.gravity, container = this.container;\n        const canvasSize = container.canvas.size;\n        const pRadius = particle.getRadius();\n        if (!gravityOptions.enable) {\n            if ((particle.velocity.y > 0 && particle.position.y <= canvasSize.height + pRadius) ||\n                (particle.velocity.y < 0 && particle.position.y >= -pRadius) ||\n                (particle.velocity.x > 0 && particle.position.x <= canvasSize.width + pRadius) ||\n                (particle.velocity.x < 0 && particle.position.x >= -pRadius)) {\n                return;\n            }\n            if (!isPointInside(particle.position, container.canvas.size, Vector.origin, pRadius, direction)) {\n                container.particles.remove(particle);\n            }\n        }\n        else {\n            const position = particle.position;\n            if ((!gravityOptions.inverse &&\n                position.y > canvasSize.height + pRadius &&\n                direction === \"bottom\") ||\n                (gravityOptions.inverse && position.y < -pRadius && direction === \"top\")) {\n                container.particles.remove(particle);\n            }\n        }\n    }\n}\n","import { Vector, calculateBounds, getDistances, getRandom, isPointInside, randomInRange, } from \"tsparticles-engine\";\nexport class OutOutMode {\n    constructor(container) {\n        this.container = container;\n        this.modes = [\"out\"];\n    }\n    update(particle, direction, delta, outMode) {\n        if (!this.modes.includes(outMode)) {\n            return;\n        }\n        const container = this.container;\n        switch (particle.outType) {\n            case \"inside\": {\n                const { x: vx, y: vy } = particle.velocity;\n                const circVec = Vector.origin;\n                circVec.length = particle.moveCenter.radius;\n                circVec.angle = particle.velocity.angle + Math.PI;\n                circVec.addTo(Vector.create(particle.moveCenter));\n                const { dx, dy } = getDistances(particle.position, circVec);\n                if ((vx <= 0 && dx >= 0) || (vy <= 0 && dy >= 0) || (vx >= 0 && dx <= 0) || (vy >= 0 && dy <= 0)) {\n                    return;\n                }\n                particle.position.x = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.width,\n                }));\n                particle.position.y = Math.floor(randomInRange({\n                    min: 0,\n                    max: container.canvas.size.height,\n                }));\n                const { dx: newDx, dy: newDy } = getDistances(particle.position, particle.moveCenter);\n                particle.direction = Math.atan2(-newDy, -newDx);\n                particle.velocity.angle = particle.direction;\n                break;\n            }\n            default: {\n                if (isPointInside(particle.position, container.canvas.size, Vector.origin, particle.getRadius(), direction)) {\n                    return;\n                }\n                switch (particle.outType) {\n                    case \"outside\": {\n                        particle.position.x =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.x;\n                        particle.position.y =\n                            Math.floor(randomInRange({\n                                min: -particle.moveCenter.radius,\n                                max: particle.moveCenter.radius,\n                            })) + particle.moveCenter.y;\n                        const { dx, dy } = getDistances(particle.position, particle.moveCenter);\n                        if (particle.moveCenter.radius) {\n                            particle.direction = Math.atan2(dy, dx);\n                            particle.velocity.angle = particle.direction;\n                        }\n                        break;\n                    }\n                    case \"normal\": {\n                        const wrap = particle.options.move.warp, canvasSize = container.canvas.size, newPos = {\n                            bottom: canvasSize.height + particle.getRadius() + particle.offset.y,\n                            left: -particle.getRadius() - particle.offset.x,\n                            right: canvasSize.width + particle.getRadius() + particle.offset.x,\n                            top: -particle.getRadius() - particle.offset.y,\n                        }, sizeValue = particle.getRadius(), nextBounds = calculateBounds(particle.position, sizeValue);\n                        if (direction === \"right\" &&\n                            nextBounds.left > canvasSize.width + particle.offset.x) {\n                            particle.position.x = newPos.left;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        else if (direction === \"left\" && nextBounds.right < -particle.offset.x) {\n                            particle.position.x = newPos.right;\n                            particle.initialPosition.x = particle.position.x;\n                            if (!wrap) {\n                                particle.position.y = getRandom() * canvasSize.height;\n                                particle.initialPosition.y = particle.position.y;\n                            }\n                        }\n                        if (direction === \"bottom\" &&\n                            nextBounds.top > canvasSize.height + particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.top;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        else if (direction === \"top\" && nextBounds.bottom < -particle.offset.y) {\n                            if (!wrap) {\n                                particle.position.x = getRandom() * canvasSize.width;\n                                particle.initialPosition.x = particle.position.x;\n                            }\n                            particle.position.y = newPos.bottom;\n                            particle.initialPosition.y = particle.position.y;\n                        }\n                        break;\n                    }\n                }\n                break;\n            }\n        }\n    }\n}\n","import { BounceOutMode } from \"./BounceOutMode\";\nimport { DestroyOutMode } from \"./DestroyOutMode\";\nimport { NoneOutMode } from \"./NoneOutMode\";\nimport { OutOutMode } from \"./OutOutMode\";\nexport class OutOfCanvasUpdater {\n    constructor(container) {\n        this.container = container;\n        this._updateOutMode = (particle, delta, outMode, direction) => {\n            for (const updater of this.updaters) {\n                updater.update(particle, direction, delta, outMode);\n            }\n        };\n        this.updaters = [\n            new BounceOutMode(container),\n            new DestroyOutMode(container),\n            new OutOutMode(container),\n            new NoneOutMode(container),\n        ];\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning;\n    }\n    update(particle, delta) {\n        const outModes = particle.options.move.outModes;\n        this._updateOutMode(particle, delta, outModes.bottom ?? outModes.default, \"bottom\");\n        this._updateOutMode(particle, delta, outModes.left ?? outModes.default, \"left\");\n        this._updateOutMode(particle, delta, outModes.right ?? outModes.default, \"right\");\n        this._updateOutMode(particle, delta, outModes.top ?? outModes.default, \"top\");\n    }\n}\n","import { getRandom } from \"tsparticles-engine\";\nimport { updateSize } from \"./Utils\";\nexport class SizeUpdater {\n    init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / 100) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? 0) <= 0 ||\n                ((particle.size.maxLoops ?? 0) > 0 && (particle.size.loops ?? 0) < (particle.size.maxLoops ?? 0))));\n    }\n    reset(particle) {\n        particle.size.loops = 0;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateSize(particle, delta);\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction checkDestroy(particle, value, minValue, maxValue) {\n    switch (particle.options.size.animation.destroy) {\n        case \"max\":\n            if (value >= maxValue) {\n                particle.destroy();\n            }\n            break;\n        case \"min\":\n            if (value <= minValue) {\n                particle.destroy();\n            }\n            break;\n    }\n}\nexport function updateSize(particle, delta) {\n    const data = particle.size;\n    if (particle.destroyed ||\n        !data ||\n        !data.enable ||\n        ((data.maxLoops ?? 0) > 0 && (data.loops ?? 0) > (data.maxLoops ?? 0))) {\n        return;\n    }\n    const sizeVelocity = (data.velocity ?? 0) * delta.factor, minValue = data.min, maxValue = data.max, decay = data.decay ?? 1;\n    if (!data.time) {\n        data.time = 0;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        data.time += delta.value;\n    }\n    if ((data.delayTime ?? 0) > 0 && data.time < (data.delayTime ?? 0)) {\n        return;\n    }\n    switch (data.status) {\n        case \"increasing\":\n            if (data.value >= maxValue) {\n                data.status = \"decreasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value += sizeVelocity;\n            }\n            break;\n        case \"decreasing\":\n            if (data.value <= minValue) {\n                data.status = \"increasing\";\n                if (!data.loops) {\n                    data.loops = 0;\n                }\n                data.loops++;\n            }\n            else {\n                data.value -= sizeVelocity;\n            }\n    }\n    if (data.velocity && decay !== 1) {\n        data.velocity *= decay;\n    }\n    checkDestroy(particle, data.value, minValue, maxValue);\n    if (!particle.destroyed) {\n        data.value = clamp(data.value, minValue, maxValue);\n    }\n}\n","import { loadBaseMover } from \"tsparticles-move-base\";\nimport { loadCircleShape } from \"tsparticles-shape-circle\";\nimport { loadColorUpdater } from \"tsparticles-updater-color\";\nimport { loadOpacityUpdater } from \"tsparticles-updater-opacity\";\nimport { loadOutModesUpdater } from \"tsparticles-updater-out-modes\";\nimport { loadSizeUpdater } from \"tsparticles-updater-size\";\nexport async function loadBasic(engine, refresh = true) {\n    await loadBaseMover(engine, false);\n    await loadCircleShape(engine, false);\n    await loadColorUpdater(engine, false);\n    await loadOpacityUpdater(engine, false);\n    await loadOutModesUpdater(engine, false);\n    await loadSizeUpdater(engine, false);\n    await engine.refresh(refresh);\n}\n","import { BaseMover } from \"./BaseMover\";\nexport async function loadBaseMover(engine, refresh = true) {\n    await engine.addMover(\"base\", () => new BaseMover(), refresh);\n}\n","import { CircleDrawer } from \"./CircleDrawer\";\nexport async function loadCircleShape(engine, refresh = true) {\n    await engine.addShape(\"circle\", new CircleDrawer(), refresh);\n}\n","import { ColorUpdater } from \"./ColorUpdater\";\nexport async function loadColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"color\", (container) => new ColorUpdater(container), refresh);\n}\n","import { OpacityUpdater } from \"./OpacityUpdater\";\nexport async function loadOpacityUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"opacity\", (container) => new OpacityUpdater(container), refresh);\n}\n","import { OutOfCanvasUpdater } from \"./OutOfCanvasUpdater\";\nexport async function loadOutModesUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"outModes\", (container) => new OutOfCanvasUpdater(container), refresh);\n}\n","import { SizeUpdater } from \"./SizeUpdater\";\nexport async function loadSizeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"size\", () => new SizeUpdater(), refresh);\n}\n","export class Attract {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.easing = \"ease-out-quad\";\n        this.factor = 1;\n        this.maxSpeed = 50;\n        this.speed = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Vector, clamp, getDistances, getEasing, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Attract } from \"./Options/Classes/Attract\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickAttract = () => {\n            const container = this.container;\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            const { attract } = container;\n            if (!attract.finish) {\n                if (!attract.count) {\n                    attract.count = 0;\n                }\n                attract.count++;\n                if (attract.count === container.particles.count) {\n                    attract.finish = true;\n                }\n            }\n            if (attract.clicking) {\n                const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n                if (!attractRadius || attractRadius < 0 || !mousePos) {\n                    return;\n                }\n                this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n            }\n            else if (attract.clicking === false) {\n                attract.particles = [];\n            }\n            return;\n        };\n        this._hoverAttract = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n            if (!attractRadius || attractRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        };\n        this._processAttract = (position, attractRadius, area) => {\n            const container = this.container, attractOptions = container.actualOptions.interactivity.modes.attract;\n            if (!attractOptions) {\n                return;\n            }\n            const query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position);\n                const velocity = attractOptions.speed * attractOptions.factor;\n                const attractFactor = clamp(getEasing(attractOptions.easing)(1 - distance / attractRadius) * velocity, 0, attractOptions.maxSpeed);\n                const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n                particle.position.subFrom(normVec);\n            }\n        };\n        this._engine = engine;\n        if (!container.attract) {\n            container.attract = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, attract = options.interactivity.modes.attract;\n            if (!attract || mode !== \"attract\") {\n                return;\n            }\n            if (!container.attract) {\n                container.attract = { particles: [] };\n            }\n            container.attract.clicking = true;\n            container.attract.count = 0;\n            for (const particle of container.attract.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            container.attract.particles = [];\n            container.attract.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                if (!container.attract) {\n                    container.attract = { particles: [] };\n                }\n                container.attract.clicking = false;\n            }, attract.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, attract = container.actualOptions.interactivity.modes.attract;\n        if (!attract) {\n            return;\n        }\n        container.retina.attractModeDistance = attract.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this._hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this._clickAttract();\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.attract) {\n            options.attract = new Attract();\n        }\n        for (const source of sources) {\n            options.attract.load(source?.attract);\n        }\n    }\n    reset() {\n    }\n}\n","export class Bounce {\n    constructor() {\n        this.distance = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, calculateBounds, circleBounce, circleBounceDataFromParticle, divModeExecute, isDivModeEnabled, isInArray, mouseMoveEvent, rectBounce, } from \"tsparticles-engine\";\nimport { Bounce } from \"./Options/Classes/Bounce\";\nexport class Bouncer extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._processBounce = (position, radius, area) => {\n            const query = this.container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (area instanceof Circle) {\n                    circleBounce(circleBounceDataFromParticle(particle), {\n                        position,\n                        radius,\n                        mass: (radius ** 2 * Math.PI) / 2,\n                        velocity: Vector.origin,\n                        factor: Vector.origin,\n                    });\n                }\n                else if (area instanceof Rectangle) {\n                    rectBounce(particle, calculateBounds(position, radius));\n                }\n            }\n        };\n        this._processMouseBounce = () => {\n            const container = this.container, pxRatio = container.retina.pixelRatio, tolerance = 10 * pxRatio, mousePos = container.interactivity.mouse.position, radius = container.retina.bounceModeDistance;\n            if (!radius || radius < 0 || !mousePos) {\n                return;\n            }\n            this._processBounce(mousePos, radius, new Circle(mousePos.x, mousePos.y, radius + tolerance));\n        };\n        this._singleSelectorBounce = (selector, div) => {\n            const container = this.container, query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, radius = (elem.offsetWidth / 2) * pxRatio, tolerance = 10 * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, radius + tolerance)\n                    : new Rectangle(elem.offsetLeft * pxRatio - tolerance, elem.offsetTop * pxRatio - tolerance, elem.offsetWidth * pxRatio + tolerance * 2, elem.offsetHeight * pxRatio + tolerance * 2);\n                this._processBounce(pos, radius, area);\n            });\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, bounce = container.actualOptions.interactivity.modes.bounce;\n        if (!bounce) {\n            return;\n        }\n        container.retina.bounceModeDistance = bounce.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, events = options.interactivity.events, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"bounce\", hoverMode)) {\n            this._processMouseBounce();\n        }\n        else {\n            divModeExecute(\"bounce\", divs, (selector, div) => this._singleSelectorBounce(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv;\n        return ((mouse.position && events.onHover.enable && isInArray(\"bounce\", events.onHover.mode)) ||\n            isDivModeEnabled(\"bounce\", divs));\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bounce) {\n            options.bounce = new Bounce();\n        }\n        for (const source of sources) {\n            options.bounce.load(source?.bounce);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor, executeOnSingleOrMultiple, isArray, } from \"tsparticles-engine\";\nexport class BubbleBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.mix = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.mix !== undefined) {\n            this.mix = data.mix;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        if (data.color !== undefined) {\n            const sourceColor = isArray(this.color) ? undefined : this.color;\n            this.color = executeOnSingleOrMultiple(data.color, (color) => {\n                return OptionsColor.create(sourceColor, color);\n            });\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nexport class BubbleDiv extends BubbleBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { BubbleBase } from \"./BubbleBase\";\nimport { BubbleDiv } from \"./BubbleDiv\";\nexport class Bubble extends BubbleBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new BubbleDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nexport function calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromSingleOrMultiple, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nimport { Bubble } from \"./Options/Classes/Bubble\";\nimport { calculateBubbleValue } from \"./Utils\";\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this._clickBubble = () => {\n            const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || !mouseClickPos) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            const distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p)), { bubble } = container;\n            for (const particle of query) {\n                if (!bubble.clicking) {\n                    continue;\n                }\n                particle.bubble.inRange = !bubble.durationEnd;\n                const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n                if (timeSpent > bubbleOptions.duration) {\n                    bubble.durationEnd = true;\n                }\n                if (timeSpent > bubbleOptions.duration * 2) {\n                    bubble.clicking = false;\n                    bubble.durationEnd = false;\n                }\n                const sizeData = {\n                    bubbleObj: {\n                        optValue: container.retina.bubbleModeSize,\n                        value: particle.bubble.radius,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                        value: particle.size.value,\n                    },\n                    type: \"size\",\n                };\n                this._process(particle, distMouse, timeSpent, sizeData);\n                const opacityData = {\n                    bubbleObj: {\n                        optValue: bubbleOptions.opacity,\n                        value: particle.bubble.opacity,\n                    },\n                    particlesObj: {\n                        optValue: getRangeMax(particle.options.opacity.value),\n                        value: particle.opacity?.value ?? 1,\n                    },\n                    type: \"opacity\",\n                };\n                this._process(particle, distMouse, timeSpent, opacityData);\n                if (!bubble.durationEnd && distMouse <= distance) {\n                    this._hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n        };\n        this._hoverBubble = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, distance = container.retina.bubbleModeDistance;\n            if (!distance || distance < 0 || mousePos === undefined) {\n                return;\n            }\n            const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                particle.bubble.inRange = true;\n                const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n                if (pointDistance <= distance) {\n                    if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                        this._hoverBubbleSize(particle, ratio);\n                        this._hoverBubbleOpacity(particle, ratio);\n                        this._hoverBubbleColor(particle, ratio);\n                    }\n                }\n                else {\n                    this.reset(particle);\n                }\n                if (container.interactivity.status === mouseLeaveEvent) {\n                    this.reset(particle);\n                }\n            }\n        };\n        this._hoverBubbleColor = (particle, ratio, divBubble) => {\n            const options = this.container.actualOptions, bubbleOptions = divBubble ?? options.interactivity.modes.bubble;\n            if (!bubbleOptions) {\n                return;\n            }\n            if (!particle.bubble.finalColor) {\n                const modeColor = bubbleOptions.color;\n                if (!modeColor) {\n                    return;\n                }\n                const bubbleColor = itemFromSingleOrMultiple(modeColor);\n                particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n            }\n            if (!particle.bubble.finalColor) {\n                return;\n            }\n            if (bubbleOptions.mix) {\n                particle.bubble.color = undefined;\n                const pColor = particle.getFillColor();\n                particle.bubble.color = pColor\n                    ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                    : particle.bubble.finalColor;\n            }\n            else {\n                particle.bubble.color = particle.bubble.finalColor;\n            }\n        };\n        this._hoverBubbleOpacity = (particle, ratio, divBubble) => {\n            const container = this.container, options = container.actualOptions, modeOpacity = divBubble?.opacity ?? options.interactivity.modes.bubble?.opacity;\n            if (!modeOpacity) {\n                return;\n            }\n            const optOpacity = particle.options.opacity.value, pOpacity = particle.opacity?.value ?? 1, opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n            if (opacity !== undefined) {\n                particle.bubble.opacity = opacity;\n            }\n        };\n        this._hoverBubbleSize = (particle, ratio, divBubble) => {\n            const container = this.container, modeSize = divBubble?.size ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n            if (modeSize === undefined) {\n                return;\n            }\n            const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio, pSize = particle.size.value, size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n            if (size !== undefined) {\n                particle.bubble.radius = size;\n            }\n        };\n        this._process = (particle, distMouse, timeSpent, data) => {\n            const container = this.container, bubbleParam = data.bubbleObj.optValue, options = container.actualOptions, bubbleOptions = options.interactivity.modes.bubble;\n            if (!bubbleOptions || bubbleParam === undefined) {\n                return;\n            }\n            const bubbleDuration = bubbleOptions.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n            if (!bubbleDistance || bubbleDistance < 0 || bubbleParam === particlesParam) {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            if (container.bubble.durationEnd) {\n                if (pObjBubble) {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n            else {\n                if (distMouse <= bubbleDistance) {\n                    const obj = pObjBubble ?? pObj;\n                    if (obj !== bubbleParam) {\n                        const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                        if (type === \"size\") {\n                            particle.bubble.radius = value;\n                        }\n                        if (type === \"opacity\") {\n                            particle.bubble.opacity = value;\n                        }\n                    }\n                }\n                else {\n                    if (type === \"size\") {\n                        delete particle.bubble.radius;\n                    }\n                    if (type === \"opacity\") {\n                        delete particle.bubble.opacity;\n                    }\n                }\n            }\n        };\n        this._singleSelectorHover = (delta, selector, div) => {\n            const container = this.container, selectors = document.querySelectorAll(selector), bubble = container.actualOptions.interactivity.modes.bubble;\n            if (!bubble || !selectors.length) {\n                return;\n            }\n            selectors.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    if (!area.contains(particle.getPosition())) {\n                        continue;\n                    }\n                    particle.bubble.inRange = true;\n                    const divs = bubble.divs, divBubble = divMode(divs, elem);\n                    if (!particle.bubble.div || particle.bubble.div !== elem) {\n                        this.clear(particle, delta, true);\n                        particle.bubble.div = elem;\n                    }\n                    this._hoverBubbleSize(particle, 1, divBubble);\n                    this._hoverBubbleOpacity(particle, 1, divBubble);\n                    this._hoverBubbleColor(particle, 1, divBubble);\n                }\n            });\n        };\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    clear(particle, delta, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    init() {\n        const container = this.container, bubble = container.actualOptions.interactivity.modes.bubble;\n        if (!bubble) {\n            return;\n        }\n        container.retina.bubbleModeDistance = bubble.distance * container.retina.pixelRatio;\n        if (bubble.size !== undefined) {\n            container.retina.bubbleModeSize = bubble.size * container.retina.pixelRatio;\n        }\n    }\n    async interact(delta) {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this._hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this._clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this._singleSelectorHover(delta, selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, { onClick, onDiv, onHover } = events, divBubble = isDivModeEnabled(\"bubble\", onDiv);\n        if (!(divBubble || (onHover.enable && mouse.position) || (onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        return isInArray(\"bubble\", onHover.mode) || isInArray(\"bubble\", onClick.mode) || divBubble;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.bubble) {\n            options.bubble = new Bubble();\n        }\n        for (const source of sources) {\n            options.bubble.load(source?.bubble);\n        }\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n}\n","export class ConnectLinks {\n    constructor() {\n        this.opacity = 0.5;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { ConnectLinks } from \"./ConnectLinks\";\nexport class Connect {\n    constructor() {\n        this.distance = 80;\n        this.links = new ConnectLinks();\n        this.radius = 60;\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { colorMix, drawLine, getStyleFromHsl, getStyleFromRgb, } from \"tsparticles-engine\";\nexport function gradient(context, p1, p2, opacity) {\n    const gradStop = Math.floor(p2.getRadius() / p1.getRadius()), color1 = p1.getFillColor(), color2 = p2.getFillColor();\n    if (!color1 || !color2) {\n        return;\n    }\n    const sourcePos = p1.getPosition(), destPos = p2.getPosition(), midRgb = colorMix(color1, color2, p1.getRadius(), p2.getRadius()), grad = context.createLinearGradient(sourcePos.x, sourcePos.y, destPos.x, destPos.y);\n    grad.addColorStop(0, getStyleFromHsl(color1, opacity));\n    grad.addColorStop(gradStop > 1 ? 1 : gradStop, getStyleFromRgb(midRgb, opacity));\n    grad.addColorStop(1, getStyleFromHsl(color2, opacity));\n    return grad;\n}\nexport function drawConnectLine(context, width, lineStyle, begin, end) {\n    drawLine(context, begin, end);\n    context.lineWidth = width;\n    context.strokeStyle = lineStyle;\n    context.stroke();\n}\nexport function lineStyle(container, ctx, p1, p2) {\n    const options = container.actualOptions, connectOptions = options.interactivity.modes.connect;\n    if (!connectOptions) {\n        return;\n    }\n    return gradient(ctx, p1, p2, connectOptions.links.opacity);\n}\nexport function drawConnection(container, p1, p2) {\n    container.canvas.draw((ctx) => {\n        const ls = lineStyle(container, ctx, p1, p2);\n        if (!ls) {\n            return;\n        }\n        const pos1 = p1.getPosition(), pos2 = p2.getPosition();\n        drawConnectLine(ctx, p1.retina.linksWidth ?? 0, ls, pos1, pos2);\n    });\n}\n","import { ExternalInteractorBase, isInArray, } from \"tsparticles-engine\";\nimport { Connect } from \"./Options/Classes/Connect\";\nimport { drawConnection } from \"./Utils\";\nexport class Connector extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, connect = container.actualOptions.interactivity.modes.connect;\n        if (!connect) {\n            return;\n        }\n        container.retina.connectModeDistance = connect.distance * container.retina.pixelRatio;\n        container.retina.connectModeRadius = connect.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions;\n        if (options.interactivity.events.onHover.enable && container.interactivity.status === \"pointermove\") {\n            const mousePos = container.interactivity.mouse.position;\n            if (!container.retina.connectModeDistance ||\n                container.retina.connectModeDistance < 0 ||\n                !container.retina.connectModeRadius ||\n                container.retina.connectModeRadius < 0 ||\n                !mousePos) {\n                return;\n            }\n            const distance = Math.abs(container.retina.connectModeRadius), query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n            let i = 0;\n            for (const p1 of query) {\n                const pos1 = p1.getPosition();\n                for (const p2 of query.slice(i + 1)) {\n                    const pos2 = p2.getPosition(), distMax = Math.abs(container.retina.connectModeDistance), xDiff = Math.abs(pos1.x - pos2.x), yDiff = Math.abs(pos1.y - pos2.y);\n                    if (xDiff < distMax && yDiff < distMax) {\n                        drawConnection(container, p1, p2);\n                    }\n                }\n                ++i;\n            }\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        if (!(events.onHover.enable && mouse.position)) {\n            return false;\n        }\n        return isInArray(\"connect\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.connect) {\n            options.connect = new Connect();\n        }\n        for (const source of sources) {\n            options.connect.load(source?.connect);\n        }\n    }\n    reset() {\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class GrabLinks {\n    constructor() {\n        this.blink = false;\n        this.consent = false;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { GrabLinks } from \"./GrabLinks\";\nexport class Grab {\n    constructor() {\n        this.distance = 100;\n        this.links = new GrabLinks();\n    }\n    get lineLinked() {\n        return this.links;\n    }\n    set lineLinked(value) {\n        this.links = value;\n    }\n    get line_linked() {\n        return this.links;\n    }\n    set line_linked(value) {\n        this.links = value;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        this.links.load(data.links ?? data.lineLinked ?? data.line_linked);\n    }\n}\n","import { drawLine, getStyleFromRgb } from \"tsparticles-engine\";\nexport function drawGrabLine(context, width, begin, end, colorLine, opacity) {\n    drawLine(context, begin, end);\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    context.lineWidth = width;\n    context.stroke();\n}\nexport function drawGrab(container, particle, lineColor, opacity, mousePos) {\n    container.canvas.draw((ctx) => {\n        const beginPos = particle.getPosition();\n        drawGrabLine(ctx, particle.retina.linksWidth ?? 0, beginPos, mousePos, lineColor, opacity);\n    });\n}\n","import { ExternalInteractorBase, getDistance, getLinkColor, getLinkRandomColor, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Grab } from \"./Options/Classes/Grab\";\nimport { drawGrab } from \"./Utils\";\nexport class Grabber extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, grab = container.actualOptions.interactivity.modes.grab;\n        if (!grab) {\n            return;\n        }\n        container.retina.grabModeDistance = grab.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, interactivity = options.interactivity;\n        if (!interactivity.modes.grab ||\n            !interactivity.events.onHover.enable ||\n            container.interactivity.status !== mouseMoveEvent) {\n            return;\n        }\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const distance = container.retina.grabModeDistance;\n        if (!distance || distance < 0) {\n            return;\n        }\n        const query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos);\n            if (pointDistance > distance) {\n                continue;\n            }\n            const grabLineOptions = interactivity.modes.grab.links, lineOpacity = grabLineOptions.opacity, opacityLine = lineOpacity - (pointDistance * lineOpacity) / distance;\n            if (opacityLine <= 0) {\n                continue;\n            }\n            const optColor = grabLineOptions.color ?? particle.options.links?.color;\n            if (!container.particles.grabLineColor && optColor) {\n                const linksOptions = interactivity.modes.grab.links;\n                container.particles.grabLineColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            }\n            const colorLine = getLinkColor(particle, undefined, container.particles.grabLineColor);\n            if (!colorLine) {\n                continue;\n            }\n            drawGrab(container, particle, colorLine, opacityLine, mousePos);\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"grab\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.grab) {\n            options.grab = new Grab();\n        }\n        for (const source of sources) {\n            options.grab.load(source?.grab);\n        }\n    }\n    reset() {\n    }\n}\n","import { ExternalInteractorBase } from \"tsparticles-engine\";\nexport class Pauser extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"pause\") {\n                return;\n            }\n            const container = this.container;\n            if (container.getAnimationStatus()) {\n                container.pause();\n            }\n            else {\n                container.play();\n            }\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Push {\n    constructor() {\n        this.default = true;\n        this.groups = [];\n        this.quantity = 4;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.default !== undefined) {\n            this.default = data.default;\n        }\n        if (data.groups !== undefined) {\n            this.groups = data.groups.map((t) => t);\n        }\n        if (!this.groups.length) {\n            this.default = true;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, itemFromArray, } from \"tsparticles-engine\";\nimport { Push } from \"./Options/Classes/Push\";\nexport class Pusher extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            if (mode !== \"push\") {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, pushOptions = options.interactivity.modes.push;\n            if (!pushOptions) {\n                return;\n            }\n            const quantity = getRangeValue(pushOptions.quantity);\n            if (quantity <= 0) {\n                return;\n            }\n            const group = itemFromArray([undefined, ...pushOptions.groups]), groupOptions = group !== undefined ? container.actualOptions.particles.groups[group] : undefined;\n            container.particles.push(quantity, container.interactivity.mouse, groupOptions, group);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.push) {\n            options.push = new Push();\n        }\n        for (const source of sources) {\n            options.push.load(source?.push);\n        }\n    }\n    reset() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class Remove {\n    constructor() {\n        this.quantity = 2;\n    }\n    get particles_nb() {\n        return this.quantity;\n    }\n    set particles_nb(value) {\n        this.quantity = setRangeValue(value);\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        const quantity = data.quantity ?? data.particles_nb;\n        if (quantity !== undefined) {\n            this.quantity = setRangeValue(quantity);\n        }\n    }\n}\n","import { ExternalInteractorBase, getRangeValue, } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        this.handleClickMode = (mode) => {\n            const container = this.container, options = container.actualOptions;\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\n                return;\n            }\n            const removeNb = getRangeValue(options.interactivity.modes.remove.quantity);\n            container.particles.removeQuantity(removeNb);\n        };\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact() {\n    }\n    isEnabled() {\n        return true;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.remove) {\n            options.remove = new Remove();\n        }\n        for (const source of sources) {\n            options.remove.load(source?.remove);\n        }\n    }\n    reset() {\n    }\n}\n","export class RepulseBase {\n    constructor() {\n        this.distance = 200;\n        this.duration = 0.4;\n        this.factor = 100;\n        this.speed = 1;\n        this.maxSpeed = 50;\n        this.easing = \"ease-out-quad\";\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.duration !== undefined) {\n            this.duration = data.duration;\n        }\n        if (data.easing !== undefined) {\n            this.easing = data.easing;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.speed !== undefined) {\n            this.speed = data.speed;\n        }\n        if (data.maxSpeed !== undefined) {\n            this.maxSpeed = data.maxSpeed;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nexport class RepulseDiv extends RepulseBase {\n    constructor() {\n        super();\n        this.selectors = [];\n    }\n    get ids() {\n        return executeOnSingleOrMultiple(this.selectors, (t) => t.replace(\"#\", \"\"));\n    }\n    set ids(value) {\n        this.selectors = executeOnSingleOrMultiple(value, (t) => `#${t}`);\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        if (data.ids !== undefined) {\n            this.ids = data.ids;\n        }\n        if (data.selectors !== undefined) {\n            this.selectors = data.selectors;\n        }\n    }\n}\n","import { executeOnSingleOrMultiple, } from \"tsparticles-engine\";\nimport { RepulseBase } from \"./RepulseBase\";\nimport { RepulseDiv } from \"./RepulseDiv\";\nexport class Repulse extends RepulseBase {\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.divs = executeOnSingleOrMultiple(data.divs, (div) => {\n            const tmp = new RepulseDiv();\n            tmp.load(div);\n            return tmp;\n        });\n    }\n}\n","import { Circle, ExternalInteractorBase, Rectangle, Vector, clamp, divMode, divModeExecute, getDistances, getEasing, isDivModeEnabled, isInArray, mouseMoveEvent, } from \"tsparticles-engine\";\nimport { Repulse } from \"./Options/Classes/Repulse\";\nexport class Repulser extends ExternalInteractorBase {\n    constructor(engine, container) {\n        super(container);\n        this._clickRepulse = () => {\n            const container = this.container, repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            const repulse = container.repulse || { particles: [] };\n            if (!repulse.finish) {\n                if (!repulse.count) {\n                    repulse.count = 0;\n                }\n                repulse.count++;\n                if (repulse.count === container.particles.count) {\n                    repulse.finish = true;\n                }\n            }\n            if (repulse.clicking) {\n                const repulseDistance = container.retina.repulseModeDistance;\n                if (!repulseDistance || repulseDistance < 0) {\n                    return;\n                }\n                const repulseRadius = Math.pow(repulseDistance / 6, 3), mouseClickPos = container.interactivity.mouse.clickPosition;\n                if (mouseClickPos === undefined) {\n                    return;\n                }\n                const range = new Circle(mouseClickPos.x, mouseClickPos.y, repulseRadius), query = container.particles.quadTree.query(range, (p) => this.isEnabled(p));\n                for (const particle of query) {\n                    const { dx, dy, distance } = getDistances(mouseClickPos, particle.position), d = distance ** 2, velocity = repulseOptions.speed, force = (-repulseRadius * velocity) / d;\n                    if (d <= repulseRadius) {\n                        repulse.particles.push(particle);\n                        const vect = Vector.create(dx, dy);\n                        vect.length = force;\n                        particle.velocity.setTo(vect);\n                    }\n                }\n            }\n            else if (repulse.clicking === false) {\n                for (const particle of repulse.particles) {\n                    particle.velocity.setTo(particle.initialVelocity);\n                }\n                repulse.particles = [];\n            }\n        };\n        this._hoverRepulse = () => {\n            const container = this.container, mousePos = container.interactivity.mouse.position, repulseRadius = container.retina.repulseModeDistance;\n            if (!repulseRadius || repulseRadius < 0 || !mousePos) {\n                return;\n            }\n            this._processRepulse(mousePos, repulseRadius, new Circle(mousePos.x, mousePos.y, repulseRadius));\n        };\n        this._processRepulse = (position, repulseRadius, area, divRepulse) => {\n            const container = this.container, query = container.particles.quadTree.query(area, (p) => this.isEnabled(p)), repulseOptions = container.actualOptions.interactivity.modes.repulse;\n            if (!repulseOptions) {\n                return;\n            }\n            for (const particle of query) {\n                const { dx, dy, distance } = getDistances(particle.position, position), velocity = (divRepulse?.speed ?? repulseOptions.speed) * repulseOptions.factor, repulseFactor = clamp(getEasing(repulseOptions.easing)(1 - distance / repulseRadius) * velocity, 0, repulseOptions.maxSpeed), normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * repulseFactor, distance === 0 ? velocity : (dy / distance) * repulseFactor);\n                particle.position.addTo(normVec);\n            }\n        };\n        this._singleSelectorRepulse = (selector, div) => {\n            const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n            if (!repulse) {\n                return;\n            }\n            const query = document.querySelectorAll(selector);\n            if (!query.length) {\n                return;\n            }\n            query.forEach((item) => {\n                const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                    x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                    y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n                }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                    ? new Circle(pos.x, pos.y, repulseRadius)\n                    : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), divs = repulse.divs, divRepulse = divMode(divs, elem);\n                this._processRepulse(pos, repulseRadius, area, divRepulse);\n            });\n        };\n        this._engine = engine;\n        if (!container.repulse) {\n            container.repulse = { particles: [] };\n        }\n        this.handleClickMode = (mode) => {\n            const options = this.container.actualOptions, repulseOpts = options.interactivity.modes.repulse;\n            if (!repulseOpts || mode !== \"repulse\") {\n                return;\n            }\n            if (!container.repulse) {\n                container.repulse = { particles: [] };\n            }\n            const repulse = container.repulse;\n            repulse.clicking = true;\n            repulse.count = 0;\n            for (const particle of container.repulse.particles) {\n                if (!this.isEnabled(particle)) {\n                    continue;\n                }\n                particle.velocity.setTo(particle.initialVelocity);\n            }\n            repulse.particles = [];\n            repulse.finish = false;\n            setTimeout(() => {\n                if (container.destroyed) {\n                    return;\n                }\n                repulse.clicking = false;\n            }, repulseOpts.duration * 1000);\n        };\n    }\n    clear() {\n    }\n    init() {\n        const container = this.container, repulse = container.actualOptions.interactivity.modes.repulse;\n        if (!repulse) {\n            return;\n        }\n        container.retina.repulseModeDistance = repulse.distance * container.retina.pixelRatio;\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === mouseMoveEvent, events = options.interactivity.events, hover = events.onHover, hoverEnabled = hover.enable, hoverMode = hover.mode, click = events.onClick, clickEnabled = click.enable, clickMode = click.mode, divs = events.onDiv;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"repulse\", hoverMode)) {\n            this._hoverRepulse();\n        }\n        else if (clickEnabled && isInArray(\"repulse\", clickMode)) {\n            this._clickRepulse();\n        }\n        else {\n            divModeExecute(\"repulse\", divs, (selector, div) => this._singleSelectorRepulse(selector, div));\n        }\n    }\n    isEnabled(particle) {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? options.interactivity).events, divs = events.onDiv, hover = events.onHover, click = events.onClick, divRepulse = isDivModeEnabled(\"repulse\", divs);\n        if (!(divRepulse || (hover.enable && mouse.position) || (click.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = hover.mode, clickMode = click.mode;\n        return isInArray(\"repulse\", hoverMode) || isInArray(\"repulse\", clickMode) || divRepulse;\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.repulse) {\n            options.repulse = new Repulse();\n        }\n        for (const source of sources) {\n            options.repulse.load(source?.repulse);\n        }\n    }\n    reset() {\n    }\n}\n","export class Slow {\n    constructor() {\n        this.factor = 3;\n        this.radius = 200;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.factor !== undefined) {\n            this.factor = data.factor;\n        }\n        if (data.radius !== undefined) {\n            this.radius = data.radius;\n        }\n    }\n}\n","import { ExternalInteractorBase, getDistance, isInArray, } from \"tsparticles-engine\";\nimport { Slow } from \"./Options/Classes/Slow\";\nexport class Slower extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear(particle, delta, force) {\n        if (particle.slow.inRange && !force) {\n            return;\n        }\n        particle.slow.factor = 1;\n    }\n    init() {\n        const container = this.container, slow = container.actualOptions.interactivity.modes.slow;\n        if (!slow) {\n            return;\n        }\n        container.retina.slowModeRadius = slow.radius * container.retina.pixelRatio;\n    }\n    async interact() {\n    }\n    isEnabled(particle) {\n        const container = this.container, mouse = container.interactivity.mouse, events = (particle?.interactivity ?? container.actualOptions.interactivity).events;\n        return events.onHover.enable && !!mouse.position && isInArray(\"slow\", events.onHover.mode);\n    }\n    loadModeOptions(options, ...sources) {\n        if (!options.slow) {\n            options.slow = new Slow();\n        }\n        for (const source of sources) {\n            options.slow.load(source?.slow);\n        }\n    }\n    reset(particle) {\n        particle.slow.inRange = false;\n        const container = this.container, options = container.actualOptions, mousePos = container.interactivity.mouse.position, radius = container.retina.slowModeRadius, slowOptions = options.interactivity.modes.slow;\n        if (!slowOptions || !radius || radius < 0 || !mousePos) {\n            return;\n        }\n        const particlePos = particle.getPosition(), dist = getDistance(mousePos, particlePos), proximityFactor = dist / radius, slowFactor = slowOptions.factor, { slow } = particle;\n        if (dist > radius) {\n            return;\n        }\n        slow.inRange = true;\n        slow.factor = proximityFactor / slowFactor;\n    }\n}\n","export const InterlaceOffsets = [0, 4, 2, 1];\nexport const InterlaceSteps = [8, 8, 4, 2];\n","export class ByteStream {\n    constructor(bytes) {\n        this.pos = 0;\n        this.data = new Uint8ClampedArray(bytes);\n    }\n    getString(count) {\n        const slice = this.data.slice(this.pos, this.pos + count);\n        this.pos += slice.length;\n        return slice.reduce((acc, curr) => acc + String.fromCharCode(curr), \"\");\n    }\n    nextByte() {\n        return this.data[this.pos++];\n    }\n    nextTwoBytes() {\n        this.pos += 2;\n        return this.data[this.pos - 2] + (this.data[this.pos - 1] << 8);\n    }\n    readSubBlocks() {\n        let blockString = \"\", size = 0;\n        do {\n            size = this.data[this.pos++];\n            for (let count = size; --count >= 0; blockString += String.fromCharCode(this.data[this.pos++])) {\n            }\n        } while (size !== 0);\n        return blockString;\n    }\n    readSubBlocksBin() {\n        let size = 0, len = 0;\n        for (let offset = 0; (size = this.data[this.pos + offset]) !== 0; offset += size + 1) {\n            len += size;\n        }\n        const blockData = new Uint8Array(len);\n        for (let i = 0; (size = this.data[this.pos++]) !== 0;) {\n            for (let count = size; --count >= 0; blockData[i++] = this.data[this.pos++]) {\n            }\n        }\n        return blockData;\n    }\n    skipSubBlocks() {\n        for (; this.data[this.pos] !== 0; this.pos += this.data[this.pos] + 1) {\n        }\n        this.pos++;\n    }\n}\n","import { InterlaceOffsets, InterlaceSteps } from \"./Constants\";\nimport { ByteStream } from \"./ByteStream\";\nfunction parseColorTable(byteStream, count) {\n    const colors = [];\n    for (let i = 0; i < count; i++) {\n        colors.push({\n            r: byteStream.data[byteStream.pos],\n            g: byteStream.data[byteStream.pos + 1],\n            b: byteStream.data[byteStream.pos + 2],\n        });\n        byteStream.pos += 3;\n    }\n    return colors;\n}\nasync function parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex) {\n    switch (byteStream.nextByte()) {\n        case 249: {\n            const frame = gif.frames[getFrameIndex(false)];\n            byteStream.pos++;\n            const packedByte = byteStream.nextByte();\n            frame.GCreserved = (packedByte & 0xe0) >>> 5;\n            frame.disposalMethod = (packedByte & 0x1c) >>> 2;\n            frame.userInputDelayFlag = (packedByte & 2) === 2;\n            const transparencyFlag = (packedByte & 1) === 1;\n            frame.delayTime = byteStream.nextTwoBytes() * 0xa;\n            const transparencyIndex = byteStream.nextByte();\n            if (transparencyFlag) {\n                getTransparencyIndex(transparencyIndex);\n            }\n            byteStream.pos++;\n            break;\n        }\n        case 255: {\n            byteStream.pos++;\n            const applicationExtension = {\n                identifier: byteStream.getString(8),\n                authenticationCode: byteStream.getString(3),\n                data: byteStream.readSubBlocksBin(),\n            };\n            gif.applicationExtensions.push(applicationExtension);\n            break;\n        }\n        case 254: {\n            gif.comments.push([getFrameIndex(false), byteStream.readSubBlocks()]);\n            break;\n        }\n        case 1: {\n            if (gif.globalColorTable.length === 0) {\n                throw new EvalError(\"plain text extension without global color table\");\n            }\n            byteStream.pos++;\n            gif.frames[getFrameIndex(false)].plainTextData = {\n                left: byteStream.nextTwoBytes(),\n                top: byteStream.nextTwoBytes(),\n                width: byteStream.nextTwoBytes(),\n                height: byteStream.nextTwoBytes(),\n                charSize: {\n                    width: byteStream.nextTwoBytes(),\n                    height: byteStream.nextTwoBytes(),\n                },\n                foregroundColor: byteStream.nextByte(),\n                backgroundColor: byteStream.nextByte(),\n                text: byteStream.readSubBlocks(),\n            };\n            break;\n        }\n        default:\n            byteStream.skipSubBlocks();\n            break;\n    }\n}\nasync function parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    const frame = gif.frames[getFrameIndex(true)];\n    frame.left = byteStream.nextTwoBytes();\n    frame.top = byteStream.nextTwoBytes();\n    frame.width = byteStream.nextTwoBytes();\n    frame.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), localColorTableFlag = (packedByte & 0x80) === 0x80, interlacedFlag = (packedByte & 0x40) === 0x40;\n    frame.sortFlag = (packedByte & 0x20) === 0x20;\n    frame.reserved = (packedByte & 0x18) >>> 3;\n    const localColorCount = 1 << ((packedByte & 7) + 1);\n    if (localColorTableFlag) {\n        frame.localColorTable = parseColorTable(byteStream, localColorCount);\n    }\n    const getColor = (index) => {\n        const { r, g, b } = (localColorTableFlag ? frame.localColorTable : gif.globalColorTable)[index];\n        return { r, g, b, a: index === getTransparencyIndex(null) ? (avgAlpha ? ~~((r + g + b) / 3) : 0) : 255 };\n    };\n    const image = (() => {\n        try {\n            return new ImageData(frame.width, frame.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (image == null) {\n        throw new EvalError(\"GIF frame size is to large\");\n    }\n    const minCodeSize = byteStream.nextByte(), imageData = byteStream.readSubBlocksBin(), clearCode = 1 << minCodeSize;\n    const readBits = (pos, len) => {\n        const bytePos = pos >>> 3, bitPos = pos & 7;\n        return (((imageData[bytePos] + (imageData[bytePos + 1] << 8) + (imageData[bytePos + 2] << 16)) &\n            (((1 << len) - 1) << bitPos)) >>>\n            bitPos);\n    };\n    if (interlacedFlag) {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pass = 0; pass < 4; pass++) {\n            if (InterlaceOffsets[pass] < frame.height) {\n                for (let pixelPos = 0, lineIndex = 0;;) {\n                    const last = code;\n                    code = readBits(pos, size);\n                    pos += size + 1;\n                    if (code === clearCode) {\n                        size = minCodeSize + 1;\n                        dic.length = clearCode + 2;\n                        for (let i = 0; i < dic.length; i++) {\n                            dic[i] = i < clearCode ? [i] : [];\n                        }\n                    }\n                    else {\n                        if (code >= dic.length) {\n                            dic.push(dic[last].concat(dic[last][0]));\n                        }\n                        else if (last !== clearCode) {\n                            dic.push(dic[last].concat(dic[code][0]));\n                        }\n                        for (let i = 0; i < dic[code].length; i++) {\n                            const { r, g, b, a } = getColor(dic[code][i]);\n                            image.data.set([r, g, b, a], InterlaceOffsets[pass] * frame.width +\n                                InterlaceSteps[pass] * lineIndex +\n                                (pixelPos % (frame.width * 4)));\n                            pixelPos += 4;\n                        }\n                        if (dic.length === 1 << size && size < 0xc) {\n                            size++;\n                        }\n                    }\n                    if (pixelPos === frame.width * 4 * (lineIndex + 1)) {\n                        lineIndex++;\n                        if (InterlaceOffsets[pass] + InterlaceSteps[pass] * lineIndex >= frame.height) {\n                            break;\n                        }\n                    }\n                }\n            }\n            progressCallback?.(byteStream.pos / (byteStream.data.length - 1), getFrameIndex(false) + 1, image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n    }\n    else {\n        for (let code = 0, size = minCodeSize + 1, pos = 0, dic = [[0]], pixelPos = -4;;) {\n            const last = code;\n            code = readBits(pos, size);\n            pos += size;\n            if (code === clearCode) {\n                size = minCodeSize + 1;\n                dic.length = clearCode + 2;\n                for (let i = 0; i < dic.length; i++) {\n                    dic[i] = i < clearCode ? [i] : [];\n                }\n            }\n            else {\n                if (code === clearCode + 1) {\n                    break;\n                }\n                if (code >= dic.length) {\n                    dic.push(dic[last].concat(dic[last][0]));\n                }\n                else if (last !== clearCode) {\n                    dic.push(dic[last].concat(dic[code][0]));\n                }\n                for (let i = 0; i < dic[code].length; i++) {\n                    const { r, g, b, a } = getColor(dic[code][i]);\n                    image.data.set([r, g, b, a], (pixelPos += 4));\n                }\n                if (dic.length >= 1 << size && size < 0xc) {\n                    size++;\n                }\n            }\n        }\n        frame.image = image;\n        frame.bitmap = await createImageBitmap(image);\n        progressCallback?.((byteStream.pos + 1) / byteStream.data.length, getFrameIndex(false) + 1, frame.image, { x: frame.left, y: frame.top }, { width: gif.width, height: gif.height });\n    }\n}\nasync function parseBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback) {\n    switch (byteStream.nextByte()) {\n        case 59:\n            return true;\n        case 44:\n            await parseImageBlock(byteStream, gif, avgAlpha, getFrameIndex, getTransparencyIndex, progressCallback);\n            break;\n        case 33:\n            await parseExtensionBlock(byteStream, gif, getFrameIndex, getTransparencyIndex);\n            break;\n        default:\n            throw new EvalError(\"undefined block found\");\n    }\n    return false;\n}\nexport function getGIFLoopAmount(gif) {\n    for (const extension of gif.applicationExtensions) {\n        if (extension.identifier + extension.authenticationCode !== \"NETSCAPE2.0\") {\n            continue;\n        }\n        return extension.data[1] + (extension.data[2] << 8);\n    }\n    return NaN;\n}\nexport async function decodeGIF(gifURL, progressCallback, avgAlpha) {\n    if (!avgAlpha)\n        avgAlpha = false;\n    const res = await fetch(gifURL);\n    if (!res.ok && res.status === 404) {\n        throw new EvalError(\"file not found\");\n    }\n    const buffer = await res.arrayBuffer();\n    const gif = {\n        width: 0,\n        height: 0,\n        totalTime: 0,\n        colorRes: 0,\n        pixelAspectRatio: 0,\n        frames: [],\n        sortFlag: false,\n        globalColorTable: [],\n        backgroundImage: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n        comments: [],\n        applicationExtensions: [],\n    }, byteStream = new ByteStream(new Uint8ClampedArray(buffer));\n    if (byteStream.getString(6) !== \"GIF89a\") {\n        throw new Error(\"not a supported GIF file\");\n    }\n    gif.width = byteStream.nextTwoBytes();\n    gif.height = byteStream.nextTwoBytes();\n    const packedByte = byteStream.nextByte(), globalColorTableFlag = (packedByte & 0x80) === 0x80;\n    gif.colorRes = (packedByte & 0x70) >>> 4;\n    gif.sortFlag = (packedByte & 8) === 8;\n    const globalColorCount = 1 << ((packedByte & 7) + 1), backgroundColorIndex = byteStream.nextByte();\n    gif.pixelAspectRatio = byteStream.nextByte();\n    if (gif.pixelAspectRatio !== 0) {\n        gif.pixelAspectRatio = (gif.pixelAspectRatio + 0xf) / 0x40;\n    }\n    if (globalColorTableFlag) {\n        gif.globalColorTable = parseColorTable(byteStream, globalColorCount);\n    }\n    const backgroundImage = (() => {\n        try {\n            return new ImageData(gif.width, gif.height, { colorSpace: \"srgb\" });\n        }\n        catch (error) {\n            if (error instanceof DOMException && error.name === \"IndexSizeError\") {\n                return null;\n            }\n            throw error;\n        }\n    })();\n    if (backgroundImage == null) {\n        throw new Error(\"GIF frame size is to large\");\n    }\n    const { r, g, b } = gif.globalColorTable[backgroundColorIndex];\n    backgroundImage.data.set(globalColorTableFlag ? [r, g, b, 255] : [0, 0, 0, 0]);\n    for (let i = 4; i < backgroundImage.data.length; i *= 2) {\n        backgroundImage.data.copyWithin(i, 0, i);\n    }\n    gif.backgroundImage = backgroundImage;\n    let frameIndex = -1, incrementFrameIndex = true, transparencyIndex = -1;\n    const getframeIndex = (increment) => {\n        if (increment) {\n            incrementFrameIndex = true;\n        }\n        return frameIndex;\n    };\n    const getTransparencyIndex = (newValue) => {\n        if (newValue != null) {\n            transparencyIndex = newValue;\n        }\n        return transparencyIndex;\n    };\n    try {\n        do {\n            if (incrementFrameIndex) {\n                gif.frames.push({\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0,\n                    disposalMethod: 0,\n                    image: new ImageData(1, 1, { colorSpace: \"srgb\" }),\n                    plainTextData: null,\n                    userInputDelayFlag: false,\n                    delayTime: 0,\n                    sortFlag: false,\n                    localColorTable: [],\n                    reserved: 0,\n                    GCreserved: 0,\n                });\n                frameIndex++;\n                transparencyIndex = -1;\n                incrementFrameIndex = false;\n            }\n        } while (!(await parseBlock(byteStream, gif, avgAlpha, getframeIndex, getTransparencyIndex, progressCallback)));\n        gif.frames.length--;\n        for (const frame of gif.frames) {\n            if (frame.userInputDelayFlag && frame.delayTime === 0) {\n                gif.totalTime = Infinity;\n                break;\n            }\n            gif.totalTime += frame.delayTime;\n        }\n        return gif;\n    }\n    catch (error) {\n        if (error instanceof EvalError) {\n            throw new Error(`error while parsing frame ${frameIndex} \"${error.message}\"`);\n        }\n        throw error;\n    }\n}\n","import { errorPrefix, getLogger, getStyleFromHsl } from \"tsparticles-engine\";\nimport { decodeGIF, getGIFLoopAmount } from \"./GifUtils/Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        image.element = img;\n        img.addEventListener(\"load\", () => {\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.element = undefined;\n            image.error = true;\n            image.loading = false;\n            getLogger().error(`${errorPrefix} loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function loadGifImage(image) {\n    if (image.type !== \"gif\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    try {\n        image.gifData = await decodeGIF(image.source);\n        image.gifLoopCount = getGIFLoopAmount(image.gifData) ?? 0;\n        if (image.gifLoopCount === 0) {\n            image.gifLoopCount = Infinity;\n        }\n    }\n    catch {\n        image.error = true;\n    }\n    image.loading = false;\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    if (!response.ok) {\n        getLogger().error(`${errorPrefix} Image not found`);\n        image.error = true;\n    }\n    else {\n        image.svgData = await response.text();\n    }\n    image.loading = false;\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    const svgColoredData = replaceColorSvg(image, color, particle.opacity?.value ?? 1), imageRes = {\n        color,\n        gif: imageData.gif,\n        data: {\n            ...image,\n            svgData: svgColoredData,\n        },\n        loaded: false,\n        ratio: imageData.width / imageData.height,\n        replaceColor: imageData.replaceColor ?? imageData.replace_color,\n        source: imageData.src,\n    };\n    return new Promise((resolve) => {\n        const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" }), domUrl = URL || window.URL || window.webkitURL || window, url = domUrl.createObjectURL(svg), img = new Image();\n        img.addEventListener(\"load\", () => {\n            imageRes.loaded = true;\n            imageRes.element = img;\n            resolve(imageRes);\n            domUrl.revokeObjectURL(url);\n        });\n        img.addEventListener(\"error\", async () => {\n            domUrl.revokeObjectURL(url);\n            const img2 = {\n                ...image,\n                error: false,\n                loading: true,\n            };\n            await loadImage(img2);\n            imageRes.loaded = true;\n            imageRes.element = img2.element;\n            resolve(imageRes);\n        });\n        img.src = url;\n    });\n}\n","import { errorPrefix } from \"tsparticles-engine\";\nimport { replaceImageColor } from \"./Utils\";\nexport class ImageDrawer {\n    constructor(engine) {\n        this.loadImageShape = async (imageShape) => {\n            if (!this._engine.loadImage) {\n                throw new Error(`${errorPrefix} image shape not initialized`);\n            }\n            await this._engine.loadImage({\n                gif: imageShape.gif,\n                name: imageShape.name,\n                replaceColor: imageShape.replaceColor ?? imageShape.replace_color ?? false,\n                src: imageShape.src,\n            });\n        };\n        this._engine = engine;\n    }\n    addImage(image) {\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        this._engine.images.push(image);\n    }\n    draw(context, particle, radius, opacity, delta) {\n        const image = particle.image, element = image?.element;\n        if (!image) {\n            return;\n        }\n        context.globalAlpha = opacity;\n        if (image.gif && image.gifData) {\n            const offscreenCanvas = new OffscreenCanvas(image.gifData.width, image.gifData.height), offscreenContext = offscreenCanvas.getContext(\"2d\");\n            if (!offscreenContext) {\n                throw new Error(\"could not create offscreen canvas context\");\n            }\n            offscreenContext.imageSmoothingQuality = \"low\";\n            offscreenContext.imageSmoothingEnabled = false;\n            offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n            if (particle.gifLoopCount === undefined) {\n                particle.gifLoopCount = image.gifLoopCount ?? 0;\n            }\n            let frameIndex = particle.gifFrame ?? 0;\n            const pos = { x: -image.gifData.width * 0.5, y: -image.gifData.height * 0.5 }, frame = image.gifData.frames[frameIndex];\n            if (particle.gifTime === undefined) {\n                particle.gifTime = 0;\n            }\n            if (!frame.bitmap) {\n                return;\n            }\n            context.scale(radius / image.gifData.width, radius / image.gifData.height);\n            switch (frame.disposalMethod) {\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 0:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    break;\n                case 1:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    break;\n                case 2:\n                    offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                    context.drawImage(offscreenCanvas, pos.x, pos.y);\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                    if (image.gifData.globalColorTable.length === 0) {\n                        offscreenContext.putImageData(image.gifData.frames[0].image, pos.x + frame.left, pos.y + frame.top);\n                    }\n                    else {\n                        offscreenContext.putImageData(image.gifData.backgroundImage, pos.x, pos.y);\n                    }\n                    break;\n                case 3:\n                    {\n                        const previousImageData = offscreenContext.getImageData(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.drawImage(frame.bitmap, frame.left, frame.top);\n                        context.drawImage(offscreenCanvas, pos.x, pos.y);\n                        offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                        offscreenContext.putImageData(previousImageData, 0, 0);\n                    }\n                    break;\n            }\n            particle.gifTime += delta.value;\n            if (particle.gifTime > frame.delayTime) {\n                particle.gifTime -= frame.delayTime;\n                if (++frameIndex >= image.gifData.frames.length) {\n                    if (--particle.gifLoopCount <= 0) {\n                        return;\n                    }\n                    frameIndex = 0;\n                    offscreenContext.clearRect(0, 0, offscreenCanvas.width, offscreenCanvas.height);\n                }\n                particle.gifFrame = frameIndex;\n            }\n            context.scale(image.gifData.width / radius, image.gifData.height / radius);\n        }\n        else if (element) {\n            const ratio = image.ratio, pos = {\n                x: -radius,\n                y: -radius,\n            };\n            context.drawImage(element, pos.x, pos.y, radius * 2, (radius * 2) / ratio);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (!options.preload || !this._engine.loadImage) {\n            return;\n        }\n        for (const imageData of options.preload) {\n            await this._engine.loadImage(imageData);\n        }\n    }\n    loadShape(particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const imageData = particle.shapeData, image = this._engine.images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            this.loadImageShape(imageData).then(() => {\n                this.loadShape(particle);\n            });\n        }\n    }\n    particleInit(container, particle) {\n        if (particle.shape !== \"image\" && particle.shape !== \"images\") {\n            return;\n        }\n        if (!this._engine.images) {\n            this._engine.images = [];\n        }\n        const images = this._engine.images, imageData = particle.shapeData, color = particle.getFillColor(), image = images.find((t) => t.name === imageData.name || t.source === imageData.src);\n        if (!image) {\n            return;\n        }\n        const replaceColor = imageData.replaceColor ?? imageData.replace_color ?? image.replaceColor;\n        if (image.loading) {\n            setTimeout(() => {\n                this.particleInit(container, particle);\n            });\n            return;\n        }\n        (async () => {\n            let imageRes;\n            if (image.svgData && color) {\n                imageRes = await replaceImageColor(image, imageData, color, particle);\n            }\n            else {\n                imageRes = {\n                    color,\n                    data: image,\n                    element: image.element,\n                    gif: image.gif,\n                    gifData: image.gifData,\n                    gifLoopCount: image.gifLoopCount,\n                    loaded: true,\n                    ratio: imageData.width && imageData.height ? imageData.width / imageData.height : image.ratio ?? 1,\n                    replaceColor: replaceColor,\n                    source: imageData.src,\n                };\n            }\n            if (!imageRes.ratio) {\n                imageRes.ratio = 1;\n            }\n            const fill = imageData.fill ?? particle.fill, close = imageData.close ?? particle.close, imageShape = {\n                image: imageRes,\n                fill,\n                close,\n            };\n            particle.image = imageShape.image;\n            particle.fill = imageShape.fill;\n            particle.close = imageShape.close;\n        })();\n    }\n}\n","export class Preload {\n    constructor() {\n        this.src = \"\";\n        this.gif = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.gif !== undefined) {\n            this.gif = data.gif;\n        }\n        if (data.height !== undefined) {\n            this.height = data.height;\n        }\n        if (data.name !== undefined) {\n            this.name = data.name;\n        }\n        if (data.replaceColor !== undefined) {\n            this.replaceColor = data.replaceColor;\n        }\n        if (data.src !== undefined) {\n            this.src = data.src;\n        }\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n    }\n}\n","import { Preload } from \"./Options/Classes/Preload\";\nexport class ImagePreloaderPlugin {\n    constructor(engine) {\n        this.id = \"imagePreloader\";\n        this._engine = engine;\n    }\n    getPlugin() {\n        return {};\n    }\n    loadOptions(options, source) {\n        if (!source || !source.preload) {\n            return;\n        }\n        if (!options.preload) {\n            options.preload = [];\n        }\n        const preloadOptions = options.preload;\n        for (const item of source.preload) {\n            const existing = preloadOptions.find((t) => t.name === item.name || t.src === item.src);\n            if (existing) {\n                existing.load(item);\n            }\n            else {\n                const preload = new Preload();\n                preload.load(item);\n                preloadOptions.push(preload);\n            }\n        }\n    }\n    needsPlugin() {\n        return true;\n    }\n}\n","import { downloadSvgImage, loadGifImage, loadImage } from \"./Utils\";\nimport { ImageDrawer } from \"./ImageDrawer\";\nimport { ImagePreloaderPlugin } from \"./ImagePreloader\";\nimport { errorPrefix } from \"tsparticles-engine\";\nfunction addLoadImageToEngine(engine) {\n    if (engine.loadImage) {\n        return;\n    }\n    engine.loadImage = async (data) => {\n        if (!data.name && !data.src) {\n            throw new Error(`${errorPrefix} no image source provided`);\n        }\n        if (!engine.images) {\n            engine.images = [];\n        }\n        if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {\n            return;\n        }\n        try {\n            const image = {\n                gif: data.gif ?? false,\n                name: data.name ?? data.src,\n                source: data.src,\n                type: data.src.substring(data.src.length - 3),\n                error: false,\n                loading: true,\n                replaceColor: data.replaceColor,\n                ratio: data.width && data.height ? data.width / data.height : undefined,\n            };\n            engine.images.push(image);\n            const imageFunc = data.gif ? loadGifImage : data.replaceColor ? downloadSvgImage : loadImage;\n            await imageFunc(image);\n        }\n        catch {\n            throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);\n        }\n    };\n}\nexport async function loadImageShape(engine, refresh = true) {\n    addLoadImageToEngine(engine);\n    const preloader = new ImagePreloaderPlugin(engine);\n    await engine.addPlugin(preloader, refresh);\n    await engine.addShape([\"image\", \"images\"], new ImageDrawer(engine), refresh);\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDelay extends ValueWithRandom {\n    constructor() {\n        super();\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nexport class LifeDuration extends ValueWithRandom {\n    constructor() {\n        super();\n        this.random.minimumValue = 0.0001;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { LifeDelay } from \"./LifeDelay\";\nimport { LifeDuration } from \"./LifeDuration\";\nexport class Life {\n    constructor() {\n        this.count = 0;\n        this.delay = new LifeDelay();\n        this.duration = new LifeDuration();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.count !== undefined) {\n            this.count = data.count;\n        }\n        this.delay.load(data.delay);\n        this.duration.load(data.duration);\n    }\n}\n","import { getRandom, getRangeValue, randomInRange, setRangeValue, } from \"tsparticles-engine\";\nimport { Life } from \"./Options/Classes/Life\";\nexport class LifeUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, particlesOptions = particle.options, lifeOptions = particlesOptions.life;\n        if (!lifeOptions) {\n            return;\n        }\n        particle.life = {\n            delay: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.delay.value) * (lifeOptions.delay.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            delayTime: 0,\n            duration: container.retina.reduceFactor\n                ? ((getRangeValue(lifeOptions.duration.value) * (lifeOptions.duration.sync ? 1 : getRandom())) /\n                    container.retina.reduceFactor) *\n                    1000\n                : 0,\n            time: 0,\n            count: lifeOptions.count,\n        };\n        if (particle.life.duration <= 0) {\n            particle.life.duration = -1;\n        }\n        if (particle.life.count <= 0) {\n            particle.life.count = -1;\n        }\n        if (particle.life) {\n            particle.spawning = particle.life.delay > 0;\n        }\n    }\n    isEnabled(particle) {\n        return !particle.destroyed;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.life) {\n            options.life = new Life();\n        }\n        for (const source of sources) {\n            options.life.load(source?.life);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle) || !particle.life) {\n            return;\n        }\n        const life = particle.life;\n        let justSpawned = false;\n        if (particle.spawning) {\n            life.delayTime += delta.value;\n            if (life.delayTime >= particle.life.delay) {\n                justSpawned = true;\n                particle.spawning = false;\n                life.delayTime = 0;\n                life.time = 0;\n            }\n            else {\n                return;\n            }\n        }\n        if (life.duration === -1) {\n            return;\n        }\n        if (particle.spawning) {\n            return;\n        }\n        if (justSpawned) {\n            life.time = 0;\n        }\n        else {\n            life.time += delta.value;\n        }\n        if (life.time < life.duration) {\n            return;\n        }\n        life.time = 0;\n        if (particle.life.count > 0) {\n            particle.life.count--;\n        }\n        if (particle.life.count === 0) {\n            particle.destroy();\n            return;\n        }\n        const canvasSize = this.container.canvas.size, widthRange = setRangeValue(0, canvasSize.width), heightRange = setRangeValue(0, canvasSize.width);\n        particle.position.x = randomInRange(widthRange);\n        particle.position.y = randomInRange(heightRange);\n        particle.spawning = true;\n        life.delayTime = 0;\n        life.time = 0;\n        particle.reset();\n        const lifeOptions = particle.options.life;\n        if (lifeOptions) {\n            life.delay = getRangeValue(lifeOptions.delay.value) * 1000;\n            life.duration = getRangeValue(lifeOptions.duration.value) * 1000;\n        }\n    }\n}\n","export class LineDrawer {\n    draw(context, particle, radius) {\n        const shapeData = particle.shapeData;\n        context.moveTo(-radius / 2, 0);\n        context.lineTo(radius / 2, 0);\n        context.lineCap = shapeData?.cap ?? \"butt\";\n    }\n    getSidesCount() {\n        return 1;\n    }\n}\n","import { isSsr } from \"tsparticles-engine\";\nexport class ParallaxMover {\n    init() {\n    }\n    isEnabled(particle) {\n        return (!isSsr() &&\n            !particle.destroyed &&\n            particle.container.actualOptions.interactivity.events.onHover.parallax.enable);\n    }\n    move(particle) {\n        const container = particle.container, options = container.actualOptions, parallaxOptions = options.interactivity.events.onHover.parallax;\n        if (isSsr() || !parallaxOptions.enable) {\n            return;\n        }\n        const parallaxForce = parallaxOptions.force, mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const canvasSize = container.canvas.size, canvasCenter = {\n            x: canvasSize.width / 2,\n            y: canvasSize.height / 2,\n        }, parallaxSmooth = parallaxOptions.smooth, factor = particle.getRadius() / parallaxForce, centerDistance = {\n            x: (mousePos.x - canvasCenter.x) * factor,\n            y: (mousePos.y - canvasCenter.y) * factor,\n        }, { offset } = particle;\n        offset.x += (centerDistance.x - offset.x) / parallaxSmooth;\n        offset.y += (centerDistance.y - offset.y) / parallaxSmooth;\n    }\n}\n","export class ParticlesInteractorBase {\n    constructor(container) {\n        this.container = container;\n        this.type = \"particles\";\n    }\n}\n","import { ParticlesInteractorBase, getDistances, } from \"tsparticles-engine\";\nexport class Attractor extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1) {\n        const container = this.container, distance = p1.retina.attractDistance ?? container.retina.attractDistance, pos1 = p1.getPosition(), query = container.particles.quadTree.queryCircle(pos1, distance);\n        for (const p2 of query) {\n            if (p1 === p2 || !p2.options.move.attract.enable || p2.destroyed || p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), { dx, dy } = getDistances(pos1, pos2), rotate = p1.options.move.attract.rotate, ax = dx / (rotate.x * 1000), ay = dy / (rotate.y * 1000), p1Factor = p2.size.value / p1.size.value, p2Factor = 1 / p1Factor;\n            p1.velocity.x -= ax * p1Factor;\n            p1.velocity.y -= ay * p1Factor;\n            p2.velocity.x += ax * p2Factor;\n            p2.velocity.y += ay * p2Factor;\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.move.attract.enable;\n    }\n    reset() {\n    }\n}\n","import { clamp } from \"tsparticles-engine\";\nfunction updateAbsorb(p1, r1, p2, r2, delta, pixelRatio) {\n    const factor = clamp((p1.options.collisions.absorb.speed * delta.factor) / 10, 0, r2);\n    p1.size.value += factor / 2;\n    p2.size.value -= factor;\n    if (r2 <= pixelRatio) {\n        p2.size.value = 0;\n        p2.destroy();\n    }\n}\nexport function absorb(p1, p2, delta, pixelRatio) {\n    const r1 = p1.getRadius(), r2 = p2.getRadius();\n    if (r1 === undefined && r2 !== undefined) {\n        p1.destroy();\n    }\n    else if (r1 !== undefined && r2 === undefined) {\n        p2.destroy();\n    }\n    else if (r1 !== undefined && r2 !== undefined) {\n        if (r1 >= r2) {\n            updateAbsorb(p1, r1, p2, r2, delta, pixelRatio);\n        }\n        else {\n            updateAbsorb(p2, r2, p1, r1, delta, pixelRatio);\n        }\n    }\n}\n","import { circleBounce, circleBounceDataFromParticle, getRangeValue } from \"tsparticles-engine\";\nconst fixBounceSpeed = (p) => {\n    if (p.collisionMaxSpeed === undefined) {\n        p.collisionMaxSpeed = getRangeValue(p.options.collisions.maxSpeed);\n    }\n    if (p.velocity.length > p.collisionMaxSpeed) {\n        p.velocity.length = p.collisionMaxSpeed;\n    }\n};\nexport function bounce(p1, p2) {\n    circleBounce(circleBounceDataFromParticle(p1), circleBounceDataFromParticle(p2));\n    fixBounceSpeed(p1);\n    fixBounceSpeed(p2);\n}\n","import { absorb } from \"./Absorb\";\nimport { bounce } from \"./Bounce\";\nimport { destroy } from \"./Destroy\";\nexport function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { bounce } from \"./Bounce\";\nexport function destroy(p1, p2) {\n    if (!p1.unbreakable && !p2.unbreakable) {\n        bounce(p1, p2);\n    }\n    if (p1.getRadius() === undefined && p2.getRadius() !== undefined) {\n        p1.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() === undefined) {\n        p2.destroy();\n    }\n    else if (p1.getRadius() !== undefined && p2.getRadius() !== undefined) {\n        const deleteP = p1.getRadius() >= p2.getRadius() ? p2 : p1;\n        deleteP.destroy();\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n","import { Circle, Rectangle } from \"tsparticles-engine\";\nexport class CircleWarp extends Circle {\n    constructor(x, y, radius, canvasSize) {\n        super(x, y, radius);\n        this.canvasSize = canvasSize;\n        this.canvasSize = { ...canvasSize };\n    }\n    contains(point) {\n        const { width, height } = this.canvasSize;\n        const { x, y } = point;\n        return (super.contains(point) ||\n            super.contains({ x: x - width, y }) ||\n            super.contains({ x: x - width, y: y - height }) ||\n            super.contains({ x, y: y - height }));\n    }\n    intersects(range) {\n        if (super.intersects(range)) {\n            return true;\n        }\n        const rect = range, circle = range, newPos = {\n            x: range.position.x - this.canvasSize.width,\n            y: range.position.y - this.canvasSize.height,\n        };\n        if (circle.radius !== undefined) {\n            const biggerCircle = new Circle(newPos.x, newPos.y, circle.radius * 2);\n            return super.intersects(biggerCircle);\n        }\n        else if (rect.size !== undefined) {\n            const rectSW = new Rectangle(newPos.x, newPos.y, rect.size.width * 2, rect.size.height * 2);\n            return super.intersects(rectSW);\n        }\n        return false;\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksShadow {\n    constructor() {\n        this.blur = 5;\n        this.color = new OptionsColor();\n        this.color.value = \"#000\";\n        this.enable = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.blur !== undefined) {\n            this.blur = data.blur;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nexport class LinksTriangle {\n    constructor() {\n        this.enable = false;\n        this.frequency = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n    }\n}\n","import { OptionsColor } from \"tsparticles-engine\";\nimport { LinksShadow } from \"./LinksShadow\";\nimport { LinksTriangle } from \"./LinksTriangle\";\nexport class Links {\n    constructor() {\n        this.blink = false;\n        this.color = new OptionsColor();\n        this.color.value = \"#fff\";\n        this.consent = false;\n        this.distance = 100;\n        this.enable = false;\n        this.frequency = 1;\n        this.opacity = 1;\n        this.shadow = new LinksShadow();\n        this.triangles = new LinksTriangle();\n        this.width = 1;\n        this.warp = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.id !== undefined) {\n            this.id = data.id;\n        }\n        if (data.blink !== undefined) {\n            this.blink = data.blink;\n        }\n        this.color = OptionsColor.create(this.color, data.color);\n        if (data.consent !== undefined) {\n            this.consent = data.consent;\n        }\n        if (data.distance !== undefined) {\n            this.distance = data.distance;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = data.opacity;\n        }\n        this.shadow.load(data.shadow);\n        this.triangles.load(data.triangles);\n        if (data.width !== undefined) {\n            this.width = data.width;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n","import { Circle, ParticlesInteractorBase, getDistances, getLinkRandomColor, } from \"tsparticles-engine\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Links } from \"./Options/Classes/Links\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    const { dx, dy, distance } = getDistances(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const absDiffs = {\n        x: Math.abs(dx),\n        y: Math.abs(dy),\n    }, warpDistances = {\n        x: Math.min(absDiffs.x, canvasSize.width - absDiffs.x),\n        y: Math.min(absDiffs.y, canvasSize.height - absDiffs.y),\n    };\n    return Math.sqrt(warpDistances.x ** 2 + warpDistances.y ** 2);\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n        this._setColor = (p1) => {\n            if (!p1.options.links) {\n                return;\n            }\n            const container = this.linkContainer, linksOptions = p1.options.links;\n            let linkColor = linksOptions.id === undefined\n                ? container.particles.linksColor\n                : container.particles.linksColors.get(linksOptions.id);\n            if (linkColor) {\n                return;\n            }\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        };\n        this.linkContainer = container;\n    }\n    clear() {\n    }\n    init() {\n        this.linkContainer.particles.linksColor = undefined;\n        this.linkContainer.particles.linksColors = new Map();\n    }\n    async interact(p1) {\n        if (!p1.options.links) {\n            return;\n        }\n        p1.links = [];\n        const pos1 = p1.getPosition(), container = this.container, canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links, optOpacity = linkOpt1.opacity, optDistance = p1.retina.linksDistance ?? 0, warp = linkOpt1.warp, range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance), query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2?.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                !p2.links ||\n                p1.links.some((t) => t.destination === p2) ||\n                p2.links.some((t) => t.destination === p1)) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                continue;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this._setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    isEnabled(particle) {\n        return !!particle.options.links?.enable;\n    }\n    loadParticlesOptions(options, ...sources) {\n        if (!options.links) {\n            options.links = new Links();\n        }\n        for (const source of sources) {\n            options.links.load(source?.links ?? source?.lineLinked ?? source?.line_linked);\n        }\n    }\n    reset() {\n    }\n}\n","import { drawLine, drawTriangle, getDistance, getDistances, getRandom, getStyleFromRgb, rangeColorToRgb, } from \"tsparticles-engine\";\nexport function drawLinkLine(params) {\n    let drawn = false;\n    const { begin, end, maxDistance, context, canvasSize, width, backgroundMask, colorLine, opacity, links } = params;\n    if (getDistance(begin, end) <= maxDistance) {\n        drawLine(context, begin, end);\n        drawn = true;\n    }\n    else if (links.warp) {\n        let pi1;\n        let pi2;\n        const endNE = {\n            x: end.x - canvasSize.width,\n            y: end.y,\n        };\n        const d1 = getDistances(begin, endNE);\n        if (d1.distance <= maxDistance) {\n            const yi = begin.y - (d1.dy / d1.dx) * begin.x;\n            pi1 = { x: 0, y: yi };\n            pi2 = { x: canvasSize.width, y: yi };\n        }\n        else {\n            const endSW = {\n                x: end.x,\n                y: end.y - canvasSize.height,\n            };\n            const d2 = getDistances(begin, endSW);\n            if (d2.distance <= maxDistance) {\n                const yi = begin.y - (d2.dy / d2.dx) * begin.x;\n                const xi = -yi / (d2.dy / d2.dx);\n                pi1 = { x: xi, y: 0 };\n                pi2 = { x: xi, y: canvasSize.height };\n            }\n            else {\n                const endSE = {\n                    x: end.x - canvasSize.width,\n                    y: end.y - canvasSize.height,\n                };\n                const d3 = getDistances(begin, endSE);\n                if (d3.distance <= maxDistance) {\n                    const yi = begin.y - (d3.dy / d3.dx) * begin.x;\n                    const xi = -yi / (d3.dy / d3.dx);\n                    pi1 = { x: xi, y: yi };\n                    pi2 = { x: pi1.x + canvasSize.width, y: pi1.y + canvasSize.height };\n                }\n            }\n        }\n        if (pi1 && pi2) {\n            drawLine(context, begin, pi1);\n            drawLine(context, end, pi2);\n            drawn = true;\n        }\n    }\n    if (!drawn) {\n        return;\n    }\n    context.lineWidth = width;\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.strokeStyle = getStyleFromRgb(colorLine, opacity);\n    const { shadow } = links;\n    if (shadow.enable) {\n        const shadowColor = rangeColorToRgb(shadow.color);\n        if (shadowColor) {\n            context.shadowBlur = shadow.blur;\n            context.shadowColor = getStyleFromRgb(shadowColor);\n        }\n    }\n    context.stroke();\n}\nexport function drawLinkTriangle(params) {\n    const { context, pos1, pos2, pos3, backgroundMask, colorTriangle, opacityTriangle } = params;\n    drawTriangle(context, pos1, pos2, pos3);\n    if (backgroundMask.enable) {\n        context.globalCompositeOperation = backgroundMask.composite;\n    }\n    context.fillStyle = getStyleFromRgb(colorTriangle, opacityTriangle);\n    context.fill();\n}\nexport function getLinkKey(ids) {\n    ids.sort((a, b) => a - b);\n    return ids.join(\"_\");\n}\nexport function setLinkFrequency(particles, dictionary) {\n    const key = getLinkKey(particles.map((t) => t.id));\n    let res = dictionary.get(key);\n    if (res === undefined) {\n        res = getRandom();\n        dictionary.set(key, res);\n    }\n    return res;\n}\n","import { getDistance, getLinkColor, getRandom, getRangeValue, rangeColorToRgb, } from \"tsparticles-engine\";\nimport { drawLinkLine, drawLinkTriangle, setLinkFrequency } from \"./Utils\";\nexport class LinkInstance {\n    constructor(container) {\n        this.container = container;\n        this._drawLinkLine = (p1, link) => {\n            const p1LinksOptions = p1.options.links;\n            if (!p1LinksOptions?.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link.destination, pos1 = p1.getPosition(), pos2 = p2.getPosition();\n            let opacity = link.opacity;\n            container.canvas.draw((ctx) => {\n                let colorLine;\n                const twinkle = p1.options.twinkle?.lines;\n                if (twinkle?.enable) {\n                    const twinkleFreq = twinkle.frequency, twinkleRgb = rangeColorToRgb(twinkle.color), twinkling = getRandom() < twinkleFreq;\n                    if (twinkling && twinkleRgb) {\n                        colorLine = twinkleRgb;\n                        opacity = getRangeValue(twinkle.opacity);\n                    }\n                }\n                if (!colorLine) {\n                    const linkColor = p1LinksOptions.id !== undefined\n                        ? container.particles.linksColors.get(p1LinksOptions.id)\n                        : container.particles.linksColor;\n                    colorLine = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorLine) {\n                    return;\n                }\n                const width = p1.retina.linksWidth ?? 0, maxDistance = p1.retina.linksDistance ?? 0, { backgroundMask } = options;\n                drawLinkLine({\n                    context: ctx,\n                    width,\n                    begin: pos1,\n                    end: pos2,\n                    maxDistance,\n                    canvasSize: container.canvas.size,\n                    links: p1LinksOptions,\n                    backgroundMask: backgroundMask,\n                    colorLine,\n                    opacity,\n                });\n            });\n        };\n        this._drawLinkTriangle = (p1, link1, link2) => {\n            const linksOptions = p1.options.links;\n            if (!linksOptions?.enable) {\n                return;\n            }\n            const triangleOptions = linksOptions.triangles;\n            if (!triangleOptions.enable) {\n                return;\n            }\n            const container = this.container, options = container.actualOptions, p2 = link1.destination, p3 = link2.destination, opacityTriangle = triangleOptions.opacity ?? (link1.opacity + link2.opacity) / 2;\n            if (opacityTriangle <= 0) {\n                return;\n            }\n            container.canvas.draw((ctx) => {\n                const pos1 = p1.getPosition(), pos2 = p2.getPosition(), pos3 = p3.getPosition(), linksDistance = p1.retina.linksDistance ?? 0;\n                if (getDistance(pos1, pos2) > linksDistance ||\n                    getDistance(pos3, pos2) > linksDistance ||\n                    getDistance(pos3, pos1) > linksDistance) {\n                    return;\n                }\n                let colorTriangle = rangeColorToRgb(triangleOptions.color);\n                if (!colorTriangle) {\n                    const linkColor = linksOptions.id !== undefined\n                        ? container.particles.linksColors.get(linksOptions.id)\n                        : container.particles.linksColor;\n                    colorTriangle = getLinkColor(p1, p2, linkColor);\n                }\n                if (!colorTriangle) {\n                    return;\n                }\n                drawLinkTriangle({\n                    context: ctx,\n                    pos1,\n                    pos2,\n                    pos3,\n                    backgroundMask: options.backgroundMask,\n                    colorTriangle,\n                    opacityTriangle,\n                });\n            });\n        };\n        this._drawTriangles = (options, p1, link, p1Links) => {\n            const p2 = link.destination;\n            if (!(options.links?.triangles.enable && p2.options.links?.triangles.enable)) {\n                return;\n            }\n            const vertices = p2.links?.filter((t) => {\n                const linkFreq = this._getLinkFrequency(p2, t.destination);\n                return (p2.options.links &&\n                    linkFreq <= p2.options.links.frequency &&\n                    p1Links.findIndex((l) => l.destination === t.destination) >= 0);\n            });\n            if (!vertices?.length) {\n                return;\n            }\n            for (const vertex of vertices) {\n                const p3 = vertex.destination, triangleFreq = this._getTriangleFrequency(p1, p2, p3);\n                if (triangleFreq > options.links.triangles.frequency) {\n                    continue;\n                }\n                this._drawLinkTriangle(p1, link, vertex);\n            }\n        };\n        this._getLinkFrequency = (p1, p2) => {\n            return setLinkFrequency([p1, p2], this._freqs.links);\n        };\n        this._getTriangleFrequency = (p1, p2, p3) => {\n            return setLinkFrequency([p1, p2, p3], this._freqs.triangles);\n        };\n        this._freqs = {\n            links: new Map(),\n            triangles: new Map(),\n        };\n    }\n    drawParticle(context, particle) {\n        const { links, options } = particle;\n        if (!links || links.length <= 0) {\n            return;\n        }\n        const p1Links = links.filter((l) => options.links && this._getLinkFrequency(particle, l.destination) <= options.links.frequency);\n        for (const link of p1Links) {\n            this._drawTriangles(options, particle, link, p1Links);\n            if (link.opacity > 0 && (particle.retina.linksWidth ?? 0) > 0) {\n                this._drawLinkLine(particle, link);\n            }\n        }\n    }\n    async init() {\n        this._freqs.links = new Map();\n        this._freqs.triangles = new Map();\n    }\n    particleCreated(particle) {\n        particle.links = [];\n        if (!particle.options.links) {\n            return;\n        }\n        const ratio = this.container.retina.pixelRatio, { retina } = particle, { distance, width } = particle.options.links;\n        retina.linksDistance = distance * ratio;\n        retina.linksWidth = width * ratio;\n    }\n    particleDestroyed(particle) {\n        particle.links = [];\n    }\n}\n","import { LinkInstance } from \"./LinkInstance\";\nclass LinksPlugin {\n    constructor() {\n        this.id = \"links\";\n    }\n    getPlugin(container) {\n        return new LinkInstance(container);\n    }\n    loadOptions() {\n    }\n    needsPlugin() {\n        return true;\n    }\n}\nexport async function loadLinksPlugin(engine, refresh = true) {\n    const plugin = new LinksPlugin();\n    await engine.addPlugin(plugin, refresh);\n}\n","import { loadLinksInteraction } from \"./interaction\";\nimport { loadLinksPlugin } from \"./plugin\";\nexport async function loadParticlesLinksInteraction(engine, refresh = true) {\n    await loadLinksInteraction(engine, refresh);\n    await loadLinksPlugin(engine, refresh);\n}\nexport * from \"./Options/Classes/Links\";\nexport * from \"./Options/Classes/LinksShadow\";\nexport * from \"./Options/Classes/LinksTriangle\";\nexport * from \"./Options/Interfaces/ILinks\";\nexport * from \"./Options/Interfaces/ILinksShadow\";\nexport * from \"./Options/Interfaces/ILinksTriangle\";\n","import { Linker } from \"./Linker\";\nexport async function loadLinksInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesLinks\", (container) => new Linker(container), refresh);\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class PolygonDrawerBase {\n    draw(context, particle, radius) {\n        const start = this.getCenter(particle, radius), side = this.getSidesData(particle, radius), sideCount = side.count.numerator * side.count.denominator, decimalSides = side.count.numerator / side.count.denominator, interiorAngleDegrees = (180 * (decimalSides - 2)) / decimalSides, interiorAngle = Math.PI - (Math.PI * interiorAngleDegrees) / 180;\n        if (!context) {\n            return;\n        }\n        context.beginPath();\n        context.translate(start.x, start.y);\n        context.moveTo(0, 0);\n        for (let i = 0; i < sideCount; i++) {\n            context.lineTo(side.length, 0);\n            context.translate(side.length, 0);\n            context.rotate(interiorAngle);\n        }\n    }\n    getSidesCount(particle) {\n        const polygon = particle.shapeData;\n        return Math.round(getRangeValue(polygon?.sides ?? polygon?.nb_sides ?? 5));\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class PolygonDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius / (particle.sides / 3.5),\n            y: -radius / (2.66 / 3.5),\n        };\n    }\n    getSidesData(particle, radius) {\n        const sides = particle.sides;\n        return {\n            count: {\n                denominator: 1,\n                numerator: sides,\n            },\n            length: (radius * 2.66) / (sides / 3),\n        };\n    }\n}\n","import { PolygonDrawerBase } from \"./PolygonDrawerBase\";\nexport class TriangleDrawer extends PolygonDrawerBase {\n    getCenter(particle, radius) {\n        return {\n            x: -radius,\n            y: radius / 1.66,\n        };\n    }\n    getSidesCount() {\n        return 3;\n    }\n    getSidesData(particle, radius) {\n        return {\n            count: {\n                denominator: 2,\n                numerator: 3,\n            },\n            length: radius * 2,\n        };\n    }\n}\n","import { PolygonDrawer } from \"./PolygonDrawer\";\nimport { TriangleDrawer } from \"./TriangleDrawer\";\nexport async function loadGenericPolygonShape(engine, refresh = true) {\n    await engine.addShape(\"polygon\", new PolygonDrawer(), refresh);\n}\nexport async function loadTriangleShape(engine, refresh = true) {\n    await engine.addShape(\"triangle\", new TriangleDrawer(), refresh);\n}\nexport async function loadPolygonShape(engine, refresh = true) {\n    await loadGenericPolygonShape(engine, refresh);\n    await loadTriangleShape(engine, refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class RotateAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom, } from \"tsparticles-engine\";\nimport { RotateAnimation } from \"./RotateAnimation\";\nexport class Rotate extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new RotateAnimation();\n        this.direction = \"clockwise\";\n        this.path = false;\n        this.value = 0;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        super.load(data);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        this.animation.load(data.animation);\n        if (data.path !== undefined) {\n            this.path = data.path;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Rotate } from \"./Options/Classes/Rotate\";\nfunction updateRotate(particle, delta) {\n    const rotate = particle.rotate, rotateOptions = particle.options.rotate;\n    if (!rotate || !rotateOptions) {\n        return;\n    }\n    const rotateAnimation = rotateOptions.animation, speed = (rotate.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = rotate.decay ?? 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case \"increasing\":\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class RotateUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        if (!rotateOptions) {\n            return;\n        }\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        particle.pathRotation = rotateOptions.path;\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.rotate.status = \"increasing\";\n                break;\n        }\n        const rotateAnimation = rotateOptions.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= getRandom();\n            }\n        }\n        particle.rotation = particle.rotate.value;\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate;\n        if (!rotate) {\n            return false;\n        }\n        return !particle.destroyed && !particle.spawning && rotate.animation.enable && !rotate.path;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.rotate) {\n            options.rotate = new Rotate();\n        }\n        for (const source of sources) {\n            options.rotate.load(source?.rotate);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRotate(particle, delta);\n        particle.rotation = particle.rotate?.value ?? 0;\n    }\n}\n","const fixFactor = Math.sqrt(2);\nexport class SquareDrawer {\n    draw(context, particle, radius) {\n        const fixedRadius = radius / fixFactor, fixedDiameter = fixedRadius * 2;\n        context.rect(-fixedRadius, -fixedRadius, fixedDiameter, fixedDiameter);\n    }\n    getSidesCount() {\n        return 4;\n    }\n}\n","import { getRangeValue } from \"tsparticles-engine\";\nexport class StarDrawer {\n    draw(context, particle, radius) {\n        const sides = particle.sides, inset = particle.starInset ?? 2;\n        context.moveTo(0, 0 - radius);\n        for (let i = 0; i < sides; i++) {\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius * inset);\n            context.rotate(Math.PI / sides);\n            context.lineTo(0, 0 - radius);\n        }\n    }\n    getSidesCount(particle) {\n        const star = particle.shapeData;\n        return Math.round(getRangeValue(star?.sides ?? star?.nb_sides ?? 5));\n    }\n    particleInit(container, particle) {\n        const star = particle.shapeData, inset = getRangeValue(star?.inset ?? 2);\n        particle.starInset = inset;\n    }\n}\n","import { randomInRange, } from \"tsparticles-engine\";\nfunction updateColorValue(delta, colorValue, valueAnimation, max, decrease) {\n    if (!colorValue ||\n        !valueAnimation.enable ||\n        ((colorValue.maxLoops ?? 0) > 0 && (colorValue.loops ?? 0) > (colorValue.maxLoops ?? 0))) {\n        return;\n    }\n    if (!colorValue.time) {\n        colorValue.time = 0;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        colorValue.time += delta.value;\n    }\n    if ((colorValue.delayTime ?? 0) > 0 && colorValue.time < (colorValue.delayTime ?? 0)) {\n        return;\n    }\n    const offset = randomInRange(valueAnimation.offset), velocity = (colorValue.velocity ?? 0) * delta.factor + offset * 3.6, decay = colorValue.decay ?? 1;\n    if (!decrease || colorValue.status === \"increasing\") {\n        colorValue.value += velocity;\n        if (colorValue.value > max) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            if (decrease) {\n                colorValue.status = \"decreasing\";\n                colorValue.value -= colorValue.value % max;\n            }\n        }\n    }\n    else {\n        colorValue.value -= velocity;\n        if (colorValue.value < 0) {\n            if (!colorValue.loops) {\n                colorValue.loops = 0;\n            }\n            colorValue.loops++;\n            colorValue.status = \"increasing\";\n            colorValue.value += colorValue.value;\n        }\n    }\n    if (colorValue.velocity && decay !== 1) {\n        colorValue.velocity *= decay;\n    }\n    if (colorValue.value > max) {\n        colorValue.value %= max;\n    }\n}\nexport function updateStrokeColor(particle, delta) {\n    if (!particle.strokeColor || !particle.strokeAnimation) {\n        return;\n    }\n    const { h, s, l } = particle.strokeColor, { h: hAnimation, s: sAnimation, l: lAnimation } = particle.strokeAnimation;\n    if (h) {\n        updateColorValue(delta, h, hAnimation, 360, false);\n    }\n    if (s) {\n        updateColorValue(delta, s, sAnimation, 100, true);\n    }\n    if (l) {\n        updateColorValue(delta, l, lAnimation, 100, true);\n    }\n}\n","import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { updateStrokeColor } from \"./Utils\";\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? 1);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateStrokeColor(particle, delta);\n    }\n}\n","import { executeOnSingleOrMultiple, isInArray, itemFromSingleOrMultiple, loadFont, } from \"tsparticles-engine\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    draw(context, particle, radius, opacity) {\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        if (particle.text === undefined) {\n            particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n        }\n        const text = particle.text, style = character.style ?? \"\", weight = character.weight ?? \"400\", size = Math.round(radius) * 2, font = character.font ?? \"Verdana\", fill = particle.fill, offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes\n                .map((t) => options.particles.shape.options[t])\n                .find((t) => !!t), promises = [];\n            executeOnSingleOrMultiple(shapeOptions, (shape) => {\n                promises.push(loadFont(shape.font, shape.weight));\n            });\n            await Promise.all(promises);\n        }\n    }\n    particleInit(container, particle) {\n        if (!particle.shape || !validTypes.includes(particle.shape)) {\n            return;\n        }\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        particle.text = itemFromSingleOrMultiple(textData, particle.randomIndexData);\n    }\n}\n","import { initPjs } from \"tsparticles-particles.js\";\nimport { loadBasic } from \"tsparticles-basic\";\nimport { loadEasingQuadPlugin } from \"tsparticles-plugin-easing-quad\";\nimport { loadExternalAttractInteraction } from \"tsparticles-interaction-external-attract\";\nimport { loadExternalBounceInteraction } from \"tsparticles-interaction-external-bounce\";\nimport { loadExternalBubbleInteraction } from \"tsparticles-interaction-external-bubble\";\nimport { loadExternalConnectInteraction } from \"tsparticles-interaction-external-connect\";\nimport { loadExternalGrabInteraction } from \"tsparticles-interaction-external-grab\";\nimport { loadExternalPauseInteraction } from \"tsparticles-interaction-external-pause\";\nimport { loadExternalPushInteraction } from \"tsparticles-interaction-external-push\";\nimport { loadExternalRemoveInteraction } from \"tsparticles-interaction-external-remove\";\nimport { loadExternalRepulseInteraction } from \"tsparticles-interaction-external-repulse\";\nimport { loadExternalSlowInteraction } from \"tsparticles-interaction-external-slow\";\nimport { loadImageShape } from \"tsparticles-shape-image\";\nimport { loadLifeUpdater } from \"tsparticles-updater-life\";\nimport { loadLineShape } from \"tsparticles-shape-line\";\nimport { loadParallaxMover } from \"tsparticles-move-parallax\";\nimport { loadParticlesAttractInteraction } from \"tsparticles-interaction-particles-attract\";\nimport { loadParticlesCollisionsInteraction } from \"tsparticles-interaction-particles-collisions\";\nimport { loadParticlesLinksInteraction } from \"tsparticles-interaction-particles-links\";\nimport { loadPolygonShape } from \"tsparticles-shape-polygon\";\nimport { loadRotateUpdater } from \"tsparticles-updater-rotate\";\nimport { loadSquareShape } from \"tsparticles-shape-square\";\nimport { loadStarShape } from \"tsparticles-shape-star\";\nimport { loadStrokeColorUpdater } from \"tsparticles-updater-stroke-color\";\nimport { loadTextShape } from \"tsparticles-shape-text\";\nexport async function loadSlim(engine, refresh = true) {\n    initPjs(engine);\n    await loadParallaxMover(engine, false);\n    await loadExternalAttractInteraction(engine, false);\n    await loadExternalBounceInteraction(engine, false);\n    await loadExternalBubbleInteraction(engine, false);\n    await loadExternalConnectInteraction(engine, false);\n    await loadExternalGrabInteraction(engine, false);\n    await loadExternalPauseInteraction(engine, false);\n    await loadExternalPushInteraction(engine, false);\n    await loadExternalRemoveInteraction(engine, false);\n    await loadExternalRepulseInteraction(engine, false);\n    await loadExternalSlowInteraction(engine, false);\n    await loadParticlesAttractInteraction(engine, false);\n    await loadParticlesCollisionsInteraction(engine, false);\n    await loadParticlesLinksInteraction(engine, false);\n    await loadEasingQuadPlugin();\n    await loadImageShape(engine, false);\n    await loadLineShape(engine, false);\n    await loadPolygonShape(engine, false);\n    await loadSquareShape(engine, false);\n    await loadStarShape(engine, false);\n    await loadTextShape(engine, false);\n    await loadLifeUpdater(engine, false);\n    await loadRotateUpdater(engine, false);\n    await loadStrokeColorUpdater(engine, false);\n    await loadBasic(engine, refresh);\n}\n","import { Particles } from \"./marcbruederlin/Particles\";\nimport { initParticlesJS } from \"./VincentGarreau/particles\";\nconst initPjs = (engine) => {\n    const { particlesJS, pJSDom } = initParticlesJS(engine);\n    window.particlesJS = particlesJS;\n    window.pJSDom = pJSDom;\n    window.Particles = Particles;\n    return { particlesJS, pJSDom, Particles };\n};\nexport { initPjs };\n","const initParticlesJS = (engine) => {\n    const particlesJS = (tagId, options) => {\n        return engine.load(tagId, options);\n    };\n    particlesJS.load = (tagId, pathConfigJson, callback) => {\n        engine\n            .loadJSON(tagId, pathConfigJson)\n            .then((container) => {\n            if (container) {\n                callback(container);\n            }\n        })\n            .catch(() => {\n            callback(undefined);\n        });\n    };\n    particlesJS.setOnClickHandler = (callback) => {\n        engine.setOnClickHandler(callback);\n    };\n    const pJSDom = engine.dom();\n    return { particlesJS, pJSDom };\n};\nexport { initParticlesJS };\n","import { ParallaxMover } from \"./ParallaxMover\";\nexport async function loadParallaxMover(engine, refresh = true) {\n    await engine.addMover(\"parallax\", () => new ParallaxMover(), refresh);\n}\n","import { Attractor } from \"./Attractor\";\nexport async function loadExternalAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalAttract\", (container) => new Attractor(engine, container), refresh);\n}\nexport * from \"./Options/Classes/Attract\";\nexport * from \"./Options/Interfaces/IAttract\";\n","import { Bouncer } from \"./Bouncer\";\nexport async function loadExternalBounceInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBounce\", (container) => new Bouncer(container), refresh);\n}\nexport * from \"./Options/Classes/Bounce\";\nexport * from \"./Options/Interfaces/IBounce\";\n","import { Bubbler } from \"./Bubbler\";\nexport async function loadExternalBubbleInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalBubble\", (container) => new Bubbler(container), refresh);\n}\nexport * from \"./Options/Classes/BubbleBase\";\nexport * from \"./Options/Classes/BubbleDiv\";\nexport * from \"./Options/Classes/Bubble\";\nexport * from \"./Options/Interfaces/IBubbleBase\";\nexport * from \"./Options/Interfaces/IBubbleDiv\";\nexport * from \"./Options/Interfaces/IBubble\";\n","import { Connector } from \"./Connector\";\nexport async function loadExternalConnectInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalConnect\", (container) => new Connector(container), refresh);\n}\nexport * from \"./Options/Classes/Connect\";\nexport * from \"./Options/Classes/ConnectLinks\";\nexport * from \"./Options/Interfaces/IConnect\";\nexport * from \"./Options/Interfaces/IConnectLinks\";\n","import { Grabber } from \"./Grabber\";\nexport async function loadExternalGrabInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalGrab\", (container) => new Grabber(container), refresh);\n}\nexport * from \"./Options/Classes/Grab\";\nexport * from \"./Options/Classes/GrabLinks\";\nexport * from \"./Options/Interfaces/IGrab\";\nexport * from \"./Options/Interfaces/IGrabLinks\";\n","import { Pauser } from \"./Pauser\";\nexport async function loadExternalPauseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPause\", (container) => new Pauser(container), refresh);\n}\n","import { Pusher } from \"./Pusher\";\nexport async function loadExternalPushInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalPush\", (container) => new Pusher(container), refresh);\n}\nexport * from \"./Options/Classes/Push\";\nexport * from \"./Options/Interfaces/IPush\";\n","import { Remover } from \"./Remover\";\nexport async function loadExternalRemoveInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRemove\", (container) => new Remover(container), refresh);\n}\nexport * from \"./Options/Classes/Remove\";\nexport * from \"./Options/Interfaces/IRemove\";\n","import { Repulser } from \"./Repulser\";\nexport async function loadExternalRepulseInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalRepulse\", (container) => new Repulser(engine, container), refresh);\n}\nexport * from \"./Options/Classes/RepulseBase\";\nexport * from \"./Options/Classes/RepulseDiv\";\nexport * from \"./Options/Classes/Repulse\";\nexport * from \"./Options/Interfaces/IRepulseBase\";\nexport * from \"./Options/Interfaces/IRepulseDiv\";\nexport * from \"./Options/Interfaces/IRepulse\";\n","import { Slower } from \"./Slower\";\nexport async function loadExternalSlowInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalSlow\", (container) => new Slower(container), refresh);\n}\nexport * from \"./Options/Classes/Slow\";\nexport * from \"./Options/Interfaces/ISlow\";\n","import { Attractor } from \"./Attractor\";\nexport async function loadParticlesAttractInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesAttract\", (container) => new Attractor(container), refresh);\n}\n","import { Collider } from \"./Collider\";\nexport async function loadParticlesCollisionsInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"particlesCollisions\", (container) => new Collider(container), refresh);\n}\n","import { addEasing } from \"tsparticles-engine\";\nexport async function loadEasingQuadPlugin() {\n    addEasing(\"ease-in-quad\", (value) => value ** 2);\n    addEasing(\"ease-out-quad\", (value) => 1 - (1 - value) ** 2);\n    addEasing(\"ease-in-out-quad\", (value) => (value < 0.5 ? 2 * value ** 2 : 1 - (-2 * value + 2) ** 2 / 2));\n}\n","import { LineDrawer } from \"./LineDrawer\";\nexport async function loadLineShape(engine, refresh = true) {\n    await engine.addShape(\"line\", new LineDrawer(), refresh);\n}\n","import { SquareDrawer } from \"./SquareDrawer\";\nexport async function loadSquareShape(engine, refresh = true) {\n    await engine.addShape([\"edge\", \"square\"], new SquareDrawer(), refresh);\n}\n","import { StarDrawer } from \"./StarDrawer\";\nexport async function loadStarShape(engine, refresh = true) {\n    await engine.addShape(\"star\", new StarDrawer(), refresh);\n}\n","import { TextDrawer, validTypes } from \"./TextDrawer\";\nexport async function loadTextShape(engine, refresh = true) {\n    await engine.addShape(validTypes, new TextDrawer(), refresh);\n}\n","import { LifeUpdater } from \"./LifeUpdater\";\nexport async function loadLifeUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"life\", (container) => new LifeUpdater(container), refresh);\n}\n","import { RotateUpdater } from \"./RotateUpdater\";\nexport async function loadRotateUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"rotate\", (container) => new RotateUpdater(container), refresh);\n}\n","import { StrokeColorUpdater } from \"./StrokeColorUpdater\";\nexport async function loadStrokeColorUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"strokeColor\", (container) => new StrokeColorUpdater(container), refresh);\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class TiltAnimation {\n    constructor() {\n        this.enable = false;\n        this.speed = 0;\n        this.decay = 0;\n        this.sync = false;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        if (data.decay !== undefined) {\n            this.decay = setRangeValue(data.decay);\n        }\n        if (data.sync !== undefined) {\n            this.sync = data.sync;\n        }\n    }\n}\n","import { ValueWithRandom } from \"tsparticles-engine\";\nimport { TiltAnimation } from \"./TiltAnimation\";\nexport class Tilt extends ValueWithRandom {\n    constructor() {\n        super();\n        this.animation = new TiltAnimation();\n        this.direction = \"clockwise\";\n        this.enable = false;\n        this.value = 0;\n    }\n    load(data) {\n        super.load(data);\n        if (!data) {\n            return;\n        }\n        this.animation.load(data.animation);\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nimport { updateTilt } from \"./Utils\";\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    getTransformValues(particle) {\n        const tilt = particle.tilt?.enable && particle.tilt;\n        return {\n            b: tilt ? Math.cos(tilt.value) * tilt.cosDirection : undefined,\n            c: tilt ? Math.sin(tilt.value) * tilt.sinDirection : undefined,\n        };\n    }\n    init(particle) {\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: getRandom() >= 0.5 ? 1 : -1,\n            cosDirection: getRandom() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(getRandom() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = \"decreasing\";\n                break;\n            case \"clockwise\":\n                particle.tilt.status = \"increasing\";\n                break;\n        }\n        const tiltAnimation = particle.options.tilt?.animation;\n        if (tiltAnimation?.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= getRandom();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const tiltAnimation = particle.options.tilt?.animation;\n        return !particle.destroyed && !particle.spawning && !!tiltAnimation?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.tilt) {\n            options.tilt = new Tilt();\n        }\n        for (const source of sources) {\n            options.tilt.load(source?.tilt);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n}\n","export function updateTilt(particle, delta) {\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = (particle.tilt.velocity ?? 0) * delta.factor, max = 2 * Math.PI, decay = particle.tilt.decay ?? 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case \"increasing\":\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case \"decreasing\":\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\n","import { OptionsColor, setRangeValue, } from \"tsparticles-engine\";\nexport class TwinkleValues {\n    constructor() {\n        this.enable = false;\n        this.frequency = 0.05;\n        this.opacity = 1;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.color !== undefined) {\n            this.color = OptionsColor.create(this.color, data.color);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.frequency !== undefined) {\n            this.frequency = data.frequency;\n        }\n        if (data.opacity !== undefined) {\n            this.opacity = setRangeValue(data.opacity);\n        }\n    }\n}\n","import { TwinkleValues } from \"./TwinkleValues\";\nexport class Twinkle {\n    constructor() {\n        this.lines = new TwinkleValues();\n        this.particles = new TwinkleValues();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        this.lines.load(data.lines);\n        this.particles.load(data.particles);\n    }\n}\n","import { getRandom, getRangeValue, getStyleFromHsl, rangeColorToHsl, } from \"tsparticles-engine\";\nimport { Twinkle } from \"./Options/Classes/Twinkle\";\nexport class TwinkleUpdater {\n    getColorStyles(particle, context, radius, opacity) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return {};\n        }\n        const twinkle = twinkleOptions.particles, twinkling = twinkle.enable && getRandom() < twinkle.frequency, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, twinklingOpacity = twinkling ? getRangeValue(twinkle.opacity) * zOpacityFactor : opacity, twinkleRgb = rangeColorToHsl(twinkle.color), twinkleStyle = twinkleRgb ? getStyleFromHsl(twinkleRgb, twinklingOpacity) : undefined, res = {}, needsTwinkle = twinkling && twinkleStyle;\n        res.fill = needsTwinkle ? twinkleStyle : undefined;\n        res.stroke = needsTwinkle ? twinkleStyle : undefined;\n        return res;\n    }\n    init() {\n    }\n    isEnabled(particle) {\n        const pOptions = particle.options, twinkleOptions = pOptions.twinkle;\n        if (!twinkleOptions) {\n            return false;\n        }\n        return twinkleOptions.particles.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.twinkle) {\n            options.twinkle = new Twinkle();\n        }\n        for (const source of sources) {\n            options.twinkle.load(source?.twinkle);\n        }\n    }\n    update() {\n    }\n}\n","import { setRangeValue } from \"tsparticles-engine\";\nexport class WobbleSpeed {\n    constructor() {\n        this.angle = 50;\n        this.move = 10;\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            this.angle = setRangeValue(data.angle);\n        }\n        if (data.move !== undefined) {\n            this.move = setRangeValue(data.move);\n        }\n    }\n}\n","import { isNumber, setRangeValue, } from \"tsparticles-engine\";\nimport { WobbleSpeed } from \"./WobbleSpeed\";\nexport class Wobble {\n    constructor() {\n        this.distance = 5;\n        this.enable = false;\n        this.speed = new WobbleSpeed();\n    }\n    load(data) {\n        if (!data) {\n            return;\n        }\n        if (data.distance !== undefined) {\n            this.distance = setRangeValue(data.distance);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        if (data.speed !== undefined) {\n            if (isNumber(data.speed)) {\n                this.speed.load({ angle: data.speed });\n            }\n            else {\n                const rangeSpeed = data.speed;\n                if (rangeSpeed.min !== undefined) {\n                    this.speed.load({ angle: rangeSpeed });\n                }\n                else {\n                    this.speed.load(data.speed);\n                }\n            }\n        }\n    }\n}\n","import { getRandom, getRangeValue, } from \"tsparticles-engine\";\nimport { Wobble } from \"./Options/Classes/Wobble\";\nimport { updateWobble } from \"./Utils\";\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt?.enable) {\n            particle.wobble = {\n                angle: getRandom() * Math.PI * 2,\n                angleSpeed: getRangeValue(wobbleOpt.speed.angle) / 360,\n                moveSpeed: getRangeValue(wobbleOpt.speed.move) / 10,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                angleSpeed: 0,\n                moveSpeed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue(wobbleOpt?.distance ?? 0) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && !!particle.options.wobble?.enable;\n    }\n    loadOptions(options, ...sources) {\n        if (!options.wobble) {\n            options.wobble = new Wobble();\n        }\n        for (const source of sources) {\n            options.wobble.load(source?.wobble);\n        }\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n","export function updateWobble(particle, delta) {\n    const { wobble: wobbleOptions } = particle.options, { wobble } = particle;\n    if (!wobbleOptions?.enable || !wobble) {\n        return;\n    }\n    const angleSpeed = wobble.angleSpeed * delta.factor, moveSpeed = wobble.moveSpeed * delta.factor, distance = (moveSpeed * ((particle.retina.wobbleDistance ?? 0) * delta.factor)) / (1000 / 60), max = 2 * Math.PI, { position } = particle;\n    wobble.angle += angleSpeed;\n    if (wobble.angle > max) {\n        wobble.angle -= max;\n    }\n    position.x += distance * Math.cos(wobble.angle);\n    position.y += distance * Math.abs(Math.sin(wobble.angle));\n}\n","import { loadAbsorbersPlugin } from \"tsparticles-plugin-absorbers\";\nimport { loadDestroyUpdater } from \"tsparticles-updater-destroy\";\nimport { loadEmittersPlugin } from \"tsparticles-plugin-emitters\";\nimport { loadExternalTrailInteraction } from \"tsparticles-interaction-external-trail\";\nimport { loadRollUpdater } from \"tsparticles-updater-roll\";\nimport { loadSlim } from \"tsparticles-slim\";\nimport { loadTiltUpdater } from \"tsparticles-updater-tilt\";\nimport { loadTwinkleUpdater } from \"tsparticles-updater-twinkle\";\nimport { loadWobbleUpdater } from \"tsparticles-updater-wobble\";\nexport async function loadFull(engine) {\n    await loadSlim(engine);\n    await loadDestroyUpdater(engine);\n    await loadRollUpdater(engine);\n    await loadTiltUpdater(engine);\n    await loadTwinkleUpdater(engine);\n    await loadWobbleUpdater(engine);\n    await loadExternalTrailInteraction(engine);\n    await loadAbsorbersPlugin(engine);\n    await loadEmittersPlugin(engine);\n}\n","import { DestroyUpdater } from \"./DestroyUpdater\";\nexport async function loadDestroyUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"destroy\", (container) => new DestroyUpdater(engine, container), refresh);\n}\n","import { RollUpdater } from \"./RollUpdater\";\nexport async function loadRollUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"roll\", () => new RollUpdater(), refresh);\n}\n","import { TiltUpdater } from \"./TiltUpdater\";\nexport async function loadTiltUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"tilt\", (container) => new TiltUpdater(container), refresh);\n}\n","import { TwinkleUpdater } from \"./TwinkleUpdater\";\nexport async function loadTwinkleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"twinkle\", () => new TwinkleUpdater(), refresh);\n}\n","import { WobbleUpdater } from \"./WobbleUpdater\";\nexport async function loadWobbleUpdater(engine, refresh = true) {\n    await engine.addParticleUpdater(\"wobble\", (container) => new WobbleUpdater(container), refresh);\n}\n","import { TrailMaker } from \"./TrailMaker\";\nexport async function loadExternalTrailInteraction(engine, refresh = true) {\n    await engine.addInteractor(\"externalTrail\", (container) => new TrailMaker(container), refresh);\n}\nexport * from \"./Options/Classes/Trail\";\nexport * from \"./Options/Interfaces/ITrail\";\n","// src/components/UI/ParticleBackground.js\nimport React, { useCallback } from \"react\";\nimport Particles from \"react-tsparticles\";\nimport { loadFull } from \"tsparticles\";\n\nconst ParticleBackground = () => {\n  const particlesInit = useCallback(async (engine) => {\n    console.log(\"Initializing tsParticles\");\n    try {\n      await loadFull(engine);\n      console.log(\"tsParticles initialized successfully\");\n    } catch (error) {\n      console.error(\"Failed to initialize tsParticles:\", error);\n    }\n  }, []);\n\n  const particlesLoaded = useCallback(async (container) => {\n    console.log(\"Particles loaded successfully\");\n  }, []);\n\n  return (\n    <div className=\"absolute inset-0\" style={{ zIndex: 0 }}>\n      <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n        loaded={particlesLoaded}\n        options={{\n          fullScreen: false,\n          background: {\n            color: {\n              value: \"#0d0d0d\",\n            },\n          },\n          particles: {\n            color: {\n              value: [\"#00f0ff\", \"#bf00ff\", \"#3f36d5\"],\n            },\n            links: {\n              color: \"#00f0ff\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1,\n            },\n            move: {\n              enable: true,\n              speed: 1,\n              direction: \"none\",\n              random: false,\n              straight: false,\n              outMode: \"bounce\"\n            },\n            number: {\n              density: {\n                enable: true,\n                area: 800,\n              },\n              value: 80,\n            },\n            opacity: {\n              value: 0.7,\n            },\n            size: {\n              value: 3,\n              random: true\n            }\n          },\n          detectRetina: true\n        }}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          pointerEvents: 'none'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ParticleBackground;","import React, { useState, useEffect } from \"react\";\nimport ParticleBackground from \"../../UI/ParticleBackground\";\nimport CyberBackground from \"../../UI/CyberBackground\";\n\nconst Hero = () => {\n  const [useParticles, setUseParticles] = useState(true);\n  const [userName, setUserName] = useState(\"\");\n  const [typing, setTyping] = useState(true);\n  const [text, setText] = useState(\"\");\n  const fullText = userName ? `Welcome back, ${userName}` : \"Welcome to the Future\";\n\n// Add this console log at the top of the component\nconsole.log(\"Hero component rendering, useParticles:\", useParticles);\n\n// Modify the error handling useEffect\nuseEffect(() => {\n  const errorHandler = (error) => {\n    console.error(\"Particle error detected:\", error);\n    setUseParticles(false);\n  };\n\n  window.addEventListener('error', errorHandler);\n\n  return () => {\n    window.removeEventListener('error', errorHandler);\n  };\n}, []);\n\n// Also add this useEffect for debugging\nuseEffect(() => {\n  console.log(\"useParticles state changed to:\", useParticles);\n}, [useParticles]);\n\n  // Typing effect\n  useEffect(() => {\n    // Load name from localStorage if available\n    const storedName = typeof window !== \"undefined\" ? localStorage.getItem(\"userName\") : null;\n    if (storedName) {\n      setUserName(storedName);\n    }\n\n    if (typing) {\n      const timeout = setTimeout(() => {\n        setText(fullText.substring(0, text.length + 1));\n        if (text.length === fullText.length) {\n          setTyping(false);\n        }\n      }, 100);\n\n      return () => clearTimeout(timeout);\n    }\n  }, [text, typing, fullText]);\n\n  // Reset typing animation when fullText changes\n  useEffect(() => {\n    setText(\"\");\n    setTyping(true);\n  }, [fullText]);\n\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    const nameInput = e.target.elements.name.value.trim();\n    if (nameInput) {\n      setUserName(nameInput);\n      localStorage.setItem(\"userName\", nameInput);\n    }\n  };\n\n  return (\n    <section id=\"intro\" className=\"h-screen relative flex flex-col items-center justify-center\">\n      <ParticleBackground />\n\n      <div className=\"relative z-10 text-center px-4\">\n        <h1 className=\"text-4xl md:text-6xl font-bold mb-6 text-neon-blue font-orbitron\">\n          {text}\n          <span className=\"animate-pulse\">|</span>\n        </h1>\n\n        {!userName && (\n          <form onSubmit={handleNameSubmit} className=\"mt-8\">\n            <div className=\"flex flex-col md:flex-row justify-center items-center space-y-4 md:space-y-0 md:space-x-4\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                placeholder=\"What's your name?\"\n                className=\"bg-cyber-light text-white border border-neon-blue rounded-md px-4 py-2 focus:outline-none focus:ring-2 focus:ring-neon-purple w-full md:w-auto\"\n              />\n              <button\n                type=\"submit\"\n                className=\"bg-neon-blue text-cyber-dark font-medium px-6 py-2 rounded-md hover:bg-neon-purple transition-colors duration-300 w-full md:w-auto\"\n              >\n                Enter\n              </button>\n            </div>\n          </form>\n        )}\n\n        <div className=\"mt-12\">\n          <button\n            onClick={() => document.getElementById(\"intro\").scrollIntoView({ behavior: \"smooth\" })}\n            className=\"group border border-neon-blue rounded-full p-2 hover:bg-neon-blue/20 transition-all duration-300\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 text-neon-blue animate-bounce\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 14l-7 7m0 0l-7-7m7 7V3\" />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero;","import React from \"react\";\nimport Layout from \"../components/Layout\";\nimport Hero from \"../components/Sections/Hero\";\nimport \"../styles/global.css\";\n\nconst IndexPage = () => {\n  return (\n    <Layout>\n      <Hero />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head = () => (\n  <>\n    <title>Kierz.io | Futuristic Portfolio</title>\n    <meta name=\"description\" content=\"Portfolio site showcasing creative digital experiences at the intersection of technology and design\" />\n    <link href=\"https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&family=Inter:wght@300;400;500;700&display=swap\" rel=\"stylesheet\" />\n  </>\n);"],"names":["module","exports","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","$$typeof","Navigation","scrolled","setScrolled","useState","useEffect","handleScroll","window","scrollY","addEventListener","removeEventListener","scrollTo","id","element","document","getElementById","scrollIntoView","behavior","React","className","href","onClick","e","preventDefault","map","section","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Footer","currentYear","Date","getFullYear","_ref","children","generatedAttribute","mouseLeaveEvent","mouseMoveEvent","touchEndEvent","errorPrefix","Vector3d","xOrCoords","y","z","this","_updateFromAngle","angle","x","Math","cos","sin","isNumber","coords3d","undefined","Error","origin","create","atan2","sqrt","getLengthSq","clone","add","v","addTo","copy","distanceTo","sub","distanceToSq","div","n","divTo","mult","multTo","normalize","rotate","setTo","c","v3d","subFrom","Vector","super","_random","random","easings","Map","addEasing","name","easing","get","set","getEasing","value","getRandom","clamp","num","min","max","mix","comp1","comp2","weight1","weight2","floor","randomInRange","r","getRangeMax","getRangeMin","getRangeValue","setRangeValue","getValue","options","enable","minimumValue","isBoolean","getDistances","pointA","pointB","dx","dy","distance","getDistance","collisionVelocity","v1","v2","m1","m2","calcPositionOrRandomFromSize","data","position","size","width","height","calcPositionOrRandomFromSizeRanged","calcExactPositionOrRandomFromSize","parseAlpha","input","endsWith","parseFloat","_logger","debug","console","error","info","log","verbose","warning","warn","getLogger","rectSideBounce","res","bounced","pSide","pOtherSide","rectSide","rectOtherSide","velocity","factor","isSsr","safeMatchMedia","query","matchMedia","isInArray","array","indexOf","arrayRandomIndex","itemFromArray","index","useIndex","isPointInside","point","offset","radius","direction","bounds","inside","top","right","left","bottom","areBoundsInside","calculateBounds","deepExtend","destination","sources","isObject","sourceIsArray","destDict","isDivModeEnabled","mode","divs","findItemFromSingleOrMultiple","t","divModeExecute","callback","executeOnSingleOrMultiple","divMode","selectors","selector","singleDivModeExecute","matches","some","checkSelector","circleBounceDataFromParticle","p","getPosition","getRadius","mass","getMass","bounce","horizontal","vertical","circleBounce","p1","p2","xVelocityDiff","yVelocityDiff","pos1","pos2","xDist","yDist","u1","u2","vFinal1","vFinal2","rectBounce","particle","divBounds","resH","resV","obj","item","itemFromSingleOrMultiple","find","initParticleNumericAnimationValue","pxRatio","valueRange","animationOptions","animation","delayTime","delay","loops","maxLoops","count","time","decay","status","autoStatus","startValue","initialValue","getPositionOrSize","positionOrSize","canvasSize","_","rest","arg","isString","isFunction","randomColorValue","midColorValue","colorManagers","addColorManager","manager","hue2rgb","q","stringToRgba","startsWith","stringPrefix","parseString","hexFixed","replace","g","result","exec","parseInt","rangeColorToRgb","color","colorToRgb","handleRangeColor","getRandomRgbColor","stringToRgb","handleColor","rangeColorToHsl","rgb","rgbToHsl","r1","g1","b1","h","l","s","hslToRgb","hsl","hslPercent","fixedMin","getStyleFromRgb","opacity","getStyleFromHsl","colorMix","color1","color2","size1","size2","rgb1","rgb2","getLinkColor","linkColor","sourceColor","getFillColor","getStrokeColor","destColor","hslColor","getLinkRandomColor","optColor","blink","consent","getHslFromAnimation","getHslAnimationFromHsl","reduceFactor","resColor","setColorAnimation","colorValue","colorAnimation","speed","sync","drawLine","context","begin","end","beginPath","moveTo","lineTo","closePath","clear","dimension","clearRect","setTransformValue","newFactor","newValue","Canvas","container","_applyPostDrawUpdaters","updater","_postDrawUpdaters","afterDraw","_applyPreDrawUpdaters","ctx","zOpacity","colorStyles","transform","_preDrawUpdaters","getColorStyles","getTransformValues","updaterTransform","beforeDraw","_applyResizePlugins","plugin","_resizePlugins","resize","_getPluginParticleColors","fColor","sColor","_colorPlugins","particleFillColor","particleStrokeColor","_initCover","cover","actualOptions","backgroundMask","coverRgb","coverColor","_coverColorStyle","_initStyle","_fullScreen","_originalStyle","style","_setFullScreenStyle","_resetOriginalStyle","setProperty","_initTrail","async","trail","particles","move","trailFill","fillColor","_trailFill","Promise","resolve","reject","image","img","createElement","evt","src","_paintBase","baseColor","draw","fillStyle","fillRect","paintBase","_paintImage","globalAlpha","drawImage","paintImage","_repairStyle","_safeMutationObserver","observer","disconnect","initBackground","observe","attributes","originalStyle","zIndex","_mutationObserver","priority","fullScreen","_context","_generated","paint","destroy","stop","remove","cb","drawParticle","delta","spawning","destroyed","pfColor","psColor","zIndexOptions","zOpacityFactor","zIndexFactor","opacityRate","bubble","zStrokeOpacity","strokeOpacity","composite","shadow","pos","rotation","pathRotation","rotateData","transformData","setTransform","globalCompositeOperation","shadowColor","shadowBlur","blur","shadowOffsetX","shadowOffsetY","lineWidth","strokeStyle","shape","drawer","drawers","retina","pixelRatio","drawShape","close","afterEffect","drawShapeAfterEffect","sizeRate","drawParticlePlugin","drawPlugin","init","obs","MutationObserver","safeMutationObserver","records","record","type","attributeName","initUpdaters","initPlugins","background","elementStyle","backgroundColor","backgroundImage","backgroundPosition","backgroundRepeat","repeat","backgroundSize","plugins","push","updaters","loadCanvas","canvas","dataset","ariaHidden","offsetHeight","offsetWidth","getContext","newSize","oldSize","started","resizeFactor","windowResize","needsRefresh","updateActualOptions","setDensity","refresh","manageListener","event","handler","addOptions","passive","capture","removeOptions","EventListeners","_doMouseTouchClick","_canPush","mouseInteractivity","interactivity","mouse","mousePos","clickPosition","clickTime","getTime","events","handleClickMode","setTimeout","_mouseTouchFinish","_handleThemeChange","mediaEvent","defaultThemes","themeName","dark","light","theme","themes","default","auto","loadTheme","_handleVisibilityChange","pauseOnBlur","hidden","pageHidden","pause","getAnimationStatus","play","_handleWindowResize","_resizeTimeout","clearTimeout","_manageInteractivityListeners","mouseLeaveTmpEvent","handlers","_handlers","interactivityEl","html","canvasEl","pointerEvents","onHover","mouseMove","touchStart","touchMove","touchEndClick","mouseUp","mouseDown","touchEnd","mouseLeave","touchCancel","_manageListeners","detectType","detectsOn","parentElement","parentNode","_manageMediaMatch","_manageResize","visibilityChange","mediaMatch","addListener","oldThemeChange","removeListener","themeChange","ResizeObserver","_resizeObserver","unobserve","entries","target","_mouseDown","clicking","downPosition","_mouseTouchClick","handled","mousePosition","clickPositionValid","_mouseTouchMove","mouseEvent","clientRect","getBoundingClientRect","clientX","clientY","currentTarget","sourceRect","targetRect","canvasRect","offsetX","offsetY","touchEvent","lastTouch","touches","_touchEnd","from","changedTouches","touch","_touches","delete","identifier","_touchEndClick","_touchStart","performance","now","addListeners","removeListeners","OptionsColor","load","Background","BackgroundMaskCover","BackgroundMask","FullScreen","ClickEvent","DivEvent","el","elementId","ids","Parallax","force","smooth","HoverEvent","parallax","ResizeEvent","Events","onDiv","onclick","ondiv","onhover","tmp","Modes","engine","_engine","_container","interactors","interactor","loadModeOptions","Interactivity","modes","detect_on","ManualParticle","Responsive","maxWidth","Infinity","ThemeDefault","Theme","ColorAnimation","HslAnimation","AnimatableColor","CollisionsAbsorb","CollisionsOverlap","retries","AnimationOptions","RangedAnimationOptions","Random","ValueWithRandom","ParticlesBounceFactor","ParticlesBounce","Collisions","absorb","maxSpeed","overlap","MoveAngle","MoveAttract","rotateX","rotateY","MoveCenter","MoveGravity","acceleration","inverse","MovePath","generator","MoveTrailFill","MoveTrail","OutModes","Spin","Move","attract","center","drift","gravity","path","outModes","spin","straight","vibrate","warp","collisions","noise","outMode","out_mode","OpacityAnimation","opacity_min","Opacity","anim","ParticlesDensity","area","value_area","ParticlesNumber","density","limit","Shadow","charKey","charAltKey","imageKey","imageAltKey","polygonKey","polygonAltKey","Shape","loadShape","mainKey","altKey","altOverride","itemIsArray","emptyValue","mainDifferentValues","altDifferentValues","character","custom","images","polygon","_value","SizeAnimation","size_min","Size","Stroke","ZIndex","velocityRate","ParticlesOptions","groups","number","reduceDuplicates","group","strokeToLoad","loadOptions","loadParticlesOptions","sourceOptionsArr","sourceOptions","Options","_findDefaultTheme","_importPreset","preset","getPreset","autoPlay","detectRetina","duration","fpsLimit","manualParticles","pauseOnOutsideViewport","responsive","zLayers","backgroundMode","fps_limit","retina_detect","optResponsive","sort","existingTheme","optTheme","setResponsive","defaultOptions","responsiveOptions","screen","availWidth","setTheme","chosenTheme","clientDarkMode","defaultTheme","InteractionManager","_interactors","getInteractors","_externalInteractors","_particleInteractors","externalInteract","isEnabled","interact","particlesInteract","reset","fixOutMode","checkModes","diameter","coord","maxCoord","setCb","Particle","overrideOptions","_calcPosition","tryCount","pluginPos","particlePosition","exactPosition","fixHorizontal","fixVertical","_checkOverlap","_calculateVelocity","baseVelocity","getParticleBaseVelocity","moveOptions","rad","PI","radOffset","range","collisionsOptions","overlapOptions","_getRollColor","roll","backColor","alter","backFactor","backSum","alterHsl","_initPosition","zIndexValue","initialPosition","moveCenter","getParticleDirectionAngle","outType","_loadShapeData","shapeOptions","shapeData","override","unbreakable","inRange","slow","pathGenerator","particleDestroyed","strokeColor","lastPathTime","misplaced","maxDistance","ignoresResizeRatio","mainOptions","particlesOptions","shapeType","pathOptions","pathDelay","getPathGenerator","addPath","initParticle","initialVelocity","moveDecay","needsSort","lastZIndex","sides","getShapeDrawer","sideCountFunc","getSidesCount","mover","movers","particleInit","particleCreated","isInsideCanvas","isVisible","Point","Range","Rectangle","contains","w","intersects","Circle","w2","h2","distPos","abs","pow","QuadTree","rectangle","capacity","_subdivide","_subs","round","_divided","_points","insert","check","found","queryCircle","queryRectangle","qTreeRectangle","Particles","_applyDensity","manualCount","numberOptions","densityFactor","_initDensityFactor","optParticlesNumber","optParticlesLimit","particlesNumber","particlesCount","filter","removeQuantity","densityOptions","_pushParticle","initializer","pool","pop","_nextId","canAdd","_array","_zArray","dispatchEvent","_removeParticle","zIdx","splice","_interactionManager","quadTree","getMovers","getUpdaters","addManualParticles","addParticle","countToRemove","update","condition","particlesInitialization","pathGenerators","groupOptions","j","nb","pushing","redraw","removeAt","quantity","deleted","particlesToDelete","Set","particleUpdate","checkDelete","has","zArray","Retina","devicePixelRatio","ratio","attractDistance","sizeAnimationSpeed","moveDistance","props","moveDrift","moveSpeed","guardCheck","loadContainerOptions","defaultPathGenerator","generate","Container","_intersectionManager","entry","isIntersecting","_nextFrame","timestamp","lastFrameTime","initDelta","addLifeTime","alive","_delay","_duration","_lifeTime","_firstStart","_paused","_sourceOptions","_initialSourceOptions","_options","_eventListeners","IntersectionObserver","_intersectionObserver","addClickHandler","clickOrTouchHandler","posRetina","touched","touchMoved","radiusX","radiusY","mainArr","dom","idx","findIndex","refreshTime","_drawAnimationFrame","requestAnimationFrame","export","supported","blob","shapes","getSupportedShapes","availablePlugins","getAvailablePlugins","particlesSetup","_currentTheme","cancelAnimationFrame","needsUpdate","start","setNoise","noiseOrGenerator","setPath","pathOrGenerator","oldGenerator","_delayTimeout","HTMLElement","newMaxWidth","responsiveMaxWidth","EventDispatcher","_listeners","listener","arr","args","listeners","forEach","hasEventListener","removeAllEventListeners","getItemsFromInitializer","initializers","values","Plugins","_initializers","presets","addInteractor","initInteractor","addParticleMover","initMover","addParticleUpdater","initUpdater","addPathGenerator","addPlugin","getPlugin","addPreset","presetKey","addShapeDrawer","types","needsPlugin","Engine","_configs","_domArray","_eventDispatcher","_initialized","configs","config","version","addConfig","nameOrConfig","interactorInitializer","addMover","moverInitializer","updaterInitializer","addShape","initOrRefresh","afterEffectOrRefresh","destroyOrRefresh","customDrawer","realInit","realAfterEffect","realDestroy","realRefresh","domItem","tagIdOrOptionsOrParams","loadFromArray","optionsOrIndex","params","url","isParams","_loadParams","loadJSON","tagId","pathConfigJson","setJSON","setOnClickHandler","fallback","response","fetch","ok","json","getDataFromUrl","domContainer","body","append","currentOptions","oldIndex","old","tagName","toLowerCase","existingCanvases","getElementsByTagName","appendChild","newItem","HslColorManager","hsla","rgbResult","hslaToRgba","RgbColorManager","rgbColor","tsParticles","rgbColorManager","hslColorManager","defaultId","Component","state","library","setState","shouldComponentUpdate","nextProps","componentDidUpdate","forceUpdate","then","componentDidMount","loadParticles","componentWillUnmount","render","canvasClassName","assign","_a","_b","_c","defaultProps","current","loaded","AbsorberSizeLimit","AbsorberSize","Absorber","draggable","orbits","AbsorberInstance","absorbers","_updateParticlePosition","needsNewPosition","newPosition","absorberOrbit","minSize","absorberOrbitDirection","orbitRadius","orbitAngle","orbitDirection","updateFunc","addV","dragging","sizeFactor","translate","arc","Absorbers","interactivityAbsorbers","getAbsorber","idxOrName","addAbsorber","absorber","absorberOptions","modeAbsorbers","absorbersOptions","aPosition","removeAbsorber","AbsorbersPlugin","DestroyBounds","SplitFactor","SplitRate","Split","rate","sizeOffset","colorOffset","Destroy","split","addSplitParticle","parent","splitParticlesOptions","destroyOptions","splitOptions","parentColor","splitCount","DestroyUpdater","destroyBoundsOptions","destroyBounds","particlesSplitOptions","CircleShape","randomPosition","randomTheta","u","theta","atan","tan","generateTheta","maxRadius","randomRadius","EmitterLife","wait","EmitterRate","EmitterSize","Emitter","life","startCount","domId","spawnColor","EmitterInstance","emitters","_destroy","removeEmitter","emitter","_emit","_emitParticles","getSize","singleParticlesOptions","_particlesOptions","hslAnimation","_setColorAnimation","pPosition","_shape","_prepareToDie","_lifeCount","_immortal","initValue","maxValue","emitFactor","_currentDuration","_currentEmitDelay","_currentSpawnDelay","_initialPosition","_spawnDelay","emitterShapeManager","getShape","_firstSpawn","_startParticlesAdded","externalPause","externalPlay","elRect","_emitDelay","Emitters","interactivityEmitters","getEmitter","addEmitter","playEmitter","pauseEmitter","emitterOptions","modeEmitters","emittersModeOptions","usedIndexes","includes","emittersOptions","ePosition","ShapeManager","randomSquareCoordinate","SquareShape","halfW","halfH","side","EmittersPlugin","emitterMode","ExternalInteractorBase","Trail","pauseOnStop","TrailMaker","trailOptions","optDelay","canEmit","_lastPosition","RollLight","Roll","darken","enlighten","RollUpdater","rollHorizontal","rollVertical","rollOpt","alterType","updateRoll","querySelector","links","minDistance","connectParticles","maxParticles","sizeVariations","breakpoint","pauseAnimation","resumeAnimation","applyPath","gravityOptions","gravityFactor","zVelocityFactor","BaseMover","_initSpin","spinOptions","spinPos","spinCenter","spinAcceleration","particleOptions","slowFactor","getProximitySpeedFactor","baseSpeed","maxSize","maxCanvasSize","dxFixed","dyFixed","hDistance","vDistance","vel","applyDistance","CircleDrawer","circleRange","updateColorValue","valueAnimation","decrease","ColorUpdater","hAnimation","sAnimation","lAnimation","updateColor","OpacityUpdater","opacityOptions","opacityAnimation","minValue","checkDestroy","updateOpacity","BounceOutMode","particleBounce","newVelocity","minPos","bounceHorizontal","bounceVertical","DestroyOutMode","_delta","vx","vy","NoneOutMode","pRadius","OutOutMode","circVec","newDx","newDy","wrap","newPos","sizeValue","nextBounds","OutOfCanvasUpdater","_updateOutMode","SizeUpdater","sizeAnimation","sizeVelocity","updateSize","loadBasic","loadBaseMover","loadCircleShape","loadColorUpdater","loadOpacityUpdater","loadOutModesUpdater","loadSizeUpdater","Attract","Attractor","_clickAttract","finish","attractRadius","attractModeDistance","_processAttract","_hoverAttract","attractOptions","attractFactor","normVec","mouseMoveStatus","hoverEnabled","hoverMode","clickEnabled","clickMode","Bounce","Bouncer","_processBounce","_processMouseBounce","tolerance","bounceModeDistance","_singleSelectorBounce","querySelectorAll","elem","offsetLeft","offsetTop","BubbleBase","BubbleDiv","Bubble","calculateBubbleValue","particleValue","modeValue","optionsValue","Bubbler","_clickBubble","mouseClickPos","bubbleOptions","bubbleModeDistance","durationEnd","distMouse","timeSpent","sizeData","bubbleObj","optValue","bubbleModeSize","particlesObj","_process","opacityData","_hoverBubbleColor","_hoverBubble","pointDistance","_hoverBubbleSize","_hoverBubbleOpacity","divBubble","finalColor","modeColor","bubbleColor","pColor","modeOpacity","optOpacity","modeSize","optSize","bubbleParam","bubbleDuration","bubbleDistance","particlesParam","pObjBubble","pObj","_singleSelectorHover","repulseRadius","ConnectLinks","Connect","lineLinked","line_linked","lineStyle","connectOptions","connect","gradStop","sourcePos","destPos","midRgb","grad","createLinearGradient","addColorStop","gradient","drawConnection","ls","drawConnectLine","linksWidth","Connector","connectModeDistance","connectModeRadius","slice","distMax","xDiff","yDiff","GrabLinks","Grab","drawGrab","lineColor","beginPos","colorLine","drawGrabLine","Grabber","grab","grabModeDistance","grabLineOptions","lineOpacity","opacityLine","grabLineColor","linksOptions","Pauser","Push","particles_nb","Pusher","pushOptions","Remove","Remover","removeNb","RepulseBase","RepulseDiv","Repulse","Repulser","_clickRepulse","repulseOptions","repulse","repulseDistance","repulseModeDistance","vect","_hoverRepulse","_processRepulse","divRepulse","repulseFactor","_singleSelectorRepulse","repulseOpts","hover","click","Slow","Slower","slowModeRadius","slowOptions","dist","proximityFactor","InterlaceOffsets","InterlaceSteps","ByteStream","bytes","Uint8ClampedArray","getString","reduce","acc","curr","String","fromCharCode","nextByte","nextTwoBytes","readSubBlocks","blockString","readSubBlocksBin","len","blockData","Uint8Array","skipSubBlocks","parseColorTable","byteStream","colors","parseBlock","gif","avgAlpha","getFrameIndex","getTransparencyIndex","progressCallback","frame","frames","packedByte","localColorTableFlag","interlacedFlag","sortFlag","reserved","localColorCount","localColorTable","getColor","globalColorTable","ImageData","colorSpace","DOMException","EvalError","minCodeSize","imageData","clearCode","readBits","bytePos","bitPos","code","dic","pass","pixelPos","lineIndex","last","concat","bitmap","createImageBitmap","parseImageBlock","GCreserved","disposalMethod","userInputDelayFlag","transparencyFlag","transparencyIndex","applicationExtension","authenticationCode","applicationExtensions","comments","plainTextData","charSize","foregroundColor","text","parseExtensionBlock","currentColorRegex","loadImage","loading","Image","loadGifImage","gifData","gifURL","buffer","arrayBuffer","totalTime","colorRes","pixelAspectRatio","globalColorTableFlag","globalColorCount","backgroundColorIndex","copyWithin","frameIndex","incrementFrameIndex","getframeIndex","increment","message","decodeGIF","gifLoopCount","extension","NaN","getGIFLoopAmount","downloadSvgImage","svgData","replaceImageColor","svgColoredData","imageShape","colorStyle","preFillIndex","substring","replaceColorSvg","imageRes","replaceColor","replace_color","svg","Blob","domUrl","URL","webkitURL","createObjectURL","revokeObjectURL","img2","ImageDrawer","loadImageShape","addImage","offscreenCanvas","OffscreenCanvas","offscreenContext","imageSmoothingQuality","imageSmoothingEnabled","gifFrame","gifTime","scale","putImageData","previousImageData","getImageData","preload","Preload","ImagePreloaderPlugin","preloadOptions","existing","imageFunc","addLoadImageToEngine","preloader","LifeDelay","LifeDuration","Life","LifeUpdater","lifeOptions","justSpawned","widthRange","heightRange","LineDrawer","lineCap","cap","ParallaxMover","parallaxOptions","parallaxForce","canvasCenter","parallaxSmooth","centerDistance","ParticlesInteractorBase","ax","ay","p1Factor","p2Factor","updateAbsorb","r2","fixBounceSpeed","collisionMaxSpeed","resolveCollision","Collider","radius1","radius2","CircleWarp","rect","circle","biggerCircle","rectSW","LinksShadow","LinksTriangle","frequency","Links","triangles","getLinkDistance","optDistance","absDiffs","warpDistances","Linker","_setColor","linkContainer","linksColor","linksColors","linkOpt1","linksDistance","linkOpt2","setLinkFrequency","dictionary","join","LinkInstance","_drawLinkLine","link","p1LinksOptions","twinkle","lines","twinkleFreq","twinkleRgb","drawn","pi1","pi2","d1","yi","d2","xi","d3","drawLinkLine","_drawLinkTriangle","link1","link2","triangleOptions","p3","opacityTriangle","pos3","colorTriangle","drawTriangle","drawLinkTriangle","_drawTriangles","p1Links","vertices","linkFreq","_getLinkFrequency","vertex","_getTriangleFrequency","_freqs","LinksPlugin","loadParticlesLinksInteraction","loadLinksInteraction","loadLinksPlugin","PolygonDrawerBase","getCenter","getSidesData","sideCount","numerator","denominator","decimalSides","interiorAngleDegrees","interiorAngle","nb_sides","PolygonDrawer","TriangleDrawer","loadPolygonShape","loadGenericPolygonShape","loadTriangleShape","RotateAnimation","Rotate","RotateUpdater","rotateOptions","rotateDirection","rotateAnimation","updateRotate","fixFactor","SquareDrawer","fixedRadius","fixedDiameter","StarDrawer","inset","starInset","star","StrokeColorUpdater","strokeAnimation","strokeHslColor","updateStrokeColor","validTypes","TextDrawer","textData","randomIndexData","weight","font","fillText","strokeText","promises","fonts","loadFont","all","loadSlim","particlesJS","pJSDom","catch","initParticlesJS","initPjs","loadParallaxMover","loadExternalAttractInteraction","loadExternalBounceInteraction","loadExternalBubbleInteraction","loadExternalConnectInteraction","loadExternalGrabInteraction","loadExternalPauseInteraction","loadExternalPushInteraction","loadExternalRemoveInteraction","loadExternalRepulseInteraction","loadExternalSlowInteraction","loadParticlesAttractInteraction","loadParticlesCollisionsInteraction","loadEasingQuadPlugin","loadLineShape","loadSquareShape","loadStarShape","loadTextShape","loadLifeUpdater","loadRotateUpdater","loadStrokeColorUpdater","TiltAnimation","Tilt","TiltUpdater","tilt","cosDirection","sinDirection","tiltOptions","tiltDirection","tiltAnimation","updateTilt","TwinkleValues","Twinkle","TwinkleUpdater","twinkleOptions","twinkling","twinklingOpacity","twinkleStyle","needsTwinkle","WobbleSpeed","Wobble","rangeSpeed","WobbleUpdater","wobbleOpt","wobble","angleSpeed","wobbleDistance","wobbleOptions","updateWobble","loadFull","loadDestroyUpdater","loadRollUpdater","loadTiltUpdater","loadTwinkleUpdater","loadWobbleUpdater","loadExternalTrailInteraction","loadAbsorbersPlugin","addEmitterShape","loadEmittersPlugin","ParticleBackground","particlesInit","useCallback","particlesLoaded","Hero","useParticles","setUseParticles","userName","setUserName","typing","setTyping","setText","fullText","errorHandler","storedName","localStorage","getItem","timeout","onSubmit","nameInput","elements","trim","setItem","placeholder","IndexPage","Layout","Head","content","rel"],"sourceRoot":""}